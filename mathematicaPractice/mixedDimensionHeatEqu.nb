(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    356297,       6548]
NotebookOptionsPosition[    351436,       6412]
NotebookOutlinePosition[    351779,       6427]
CellTagsIndexPosition[    351736,       6424]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "will", " ", "do", " ", "the", " ", "heat", " ", "equation", 
    " ", "in", " ", "1", "D"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"alpha", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"sol", " ", "=", " ", 
    RowBox[{"NDSolveValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"u1", "[", 
             RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
          RowBox[{"alpha", "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"u1", "[", 
              RowBox[{"x", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u1", "[", 
           RowBox[{"x", ",", "0"}], "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{"-", "5"}], "*", "x", "*", 
           RowBox[{"(", 
            RowBox[{"x", "-", "1"}], ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u1", "[", 
           RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u1", "[", 
           RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], "}"}], 
      ",", "u1", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.68170913955469*^9, 3.681709282199849*^9}, {
   3.6817093226021595`*^9, 3.681709325383319*^9}, {3.6817094425340195`*^9, 
   3.681709470117597*^9}, {3.6817095362303786`*^9, 3.6817096187731*^9}, 
   3.6817097607572207`*^9, 3.6817099720033035`*^9, {3.6817101106582336`*^9, 
   3.6817101254100776`*^9}, {3.6817609125079336`*^9, 3.68176091296896*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 1.}, {0., 10.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6817095575635986`*^9, {3.681709600312044*^9, 3.68170961912312*^9}, 
   3.681709761685274*^9, 3.6817099725113325`*^9, 3.68171012614612*^9, 
   3.681754964213711*^9, 3.6817570242965403`*^9, 3.681759132187105*^9, 
   3.6817605499271955`*^9, 3.681760913461988*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "*", "x", 
        RowBox[{"(", 
         RowBox[{"x", "-", "1"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"0", "*", "x"}], "+", "10"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"-", "20"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817093310026402`*^9, 3.6817094334625006`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = -20, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], -20, 5}}, Typeset`size$$ = {360., {109., 114.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`k$2289$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = -20}, 
      "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$2289$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{($CellContext`k$$ $CellContext`x) ($CellContext`x - 1), 
         0 $CellContext`x + 10}, {$CellContext`x, 0, 1}], 
      "Specifications" :> {{$CellContext`k$$, -20, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {158., 165.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.68170934009916*^9, {3.6817093791093917`*^9, 3.681709433963529*^9}, 
   3.681754964446724*^9, 3.6817605518723063`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"u1", "[", 
          RowBox[{"x", ",", "t"}], "]"}], "/.", "sol"}], "]"}], ",", 
       RowBox[{
        RowBox[{"0", "*", "x"}], "+", "1.3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.68170962524747*^9, 3.681709658837391*^9}, {
  3.681709845956094*^9, 3.6817098473961763`*^9}, {3.681709980930814*^9, 
  3.681710042594341*^9}, {3.681710141314987*^9, 3.681710149249441*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10}}, Typeset`size$$ = {360., {108., 113.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$2679$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$2679$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Evaluate[
          ReplaceAll[
           $CellContext`u1[$CellContext`x, $CellContext`t$$], \
$CellContext`sol]], 0 $CellContext`x + 1.3}, {$CellContext`x, 0, 1}], 
      "Specifications" :> {{$CellContext`t$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {157., 164.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.681709981501847*^9, 3.681710007888356*^9}, 
   3.6817100443214397`*^9, {3.6817101307723846`*^9, 3.681710149487455*^9}, 
   3.6817549644547243`*^9, 3.6817605552735004`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817799725641065`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817799726251097`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68177997262711*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817799726441107`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817801034065905`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817801034425926`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681780103475594*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817801035045958`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681780205884452*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817802059194536`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817802059494553`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681780205978457*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817802362021856`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681780236227187*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817802362531886`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68178023627719*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817818833963995`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681781883423401*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681781883449403*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681781883473404*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817838853939075`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817838854219093`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]\\)\
\[NoBreak] is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817838854489107`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681783885472912*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "will", " ", "do", " ", "the", " ", "heat", " ", "equation", 
    " ", "in", " ", "2", "D"}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.681710465891552*^9, 3.6817104736949987`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"alpha2", " ", "=", " ", "0.003"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sol2", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"u2", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
        "\[Equal]", 
        RowBox[{"alpha2", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"u2", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"u2", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u2", "[", 
         RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{"10", "*", "x", "*", 
         RowBox[{"(", 
          RowBox[{"x", "-", "1"}], ")"}], "*", "y", "*", 
         RowBox[{"(", 
          RowBox[{"y", "-", "1"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u2", "[", 
         RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u2", "[", 
         RowBox[{"1", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u2", "[", 
         RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u2", "[", 
         RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}],
      "}"}], ",", "u2", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.681710500558535*^9, {3.6817105774229317`*^9, 3.68171060065326*^9}, {
   3.6817106511511483`*^9, 3.681710664733925*^9}, {3.6817107001909533`*^9, 
   3.68171070363015*^9}, {3.6817110107487164`*^9, 3.681711099211776*^9}, {
   3.6817113920895276`*^9, 3.6817114104095755`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"u2", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
                  GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "5", ",", "3"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{0., 1.}, {0., 1.}, {0., 20.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.681711115961734*^9, {3.681711393018581*^9, 3.6817114110836143`*^9}, 
   3.681754964590732*^9, 3.6817550600391912`*^9, 3.681760560554803*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"10", "*", "x", "*", 
      RowBox[{"(", 
       RowBox[{"x", "-", "1"}], ")"}], "*", "y", "*", 
      RowBox[{"(", 
       RowBox[{"y", "-", "1"}], ")"}]}], ",", 
     RowBox[{"0", "*", "x", "*", "y"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817107739741735`*^9, 3.6817108036288695`*^9}, {
  3.681710862413232*^9, 3.681710921739625*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
RDnovz3JruI75DG/o77o58Oxf0H9zxQnR38ZTPygneT7DsBN951KebSHPL8E
/WFvb6f2BS8o57rOWz/J35HRuDxviXEix5c+v2rww033Isr+D1z2c/CIet8k
5h3pD4MvHV8X63T0E/iHwPX90DQfoX3l/Ij5QOLTXls7e1hhVN1eteCDYYVp
deqGTuc92S5rAS+oc+bA3K5eOwb+OxD/qA/Ga+q869YuuO8kfT5T7l+jfdHu
77yZ2jzgir+0XwI8Hn/gpf5lWW2fpV2FvMnP1Pd8kJ4LSwdOzO26Tdf3dKov
6iX7D8Yd9L+T+iHaCXjm2x4PftH4qNYT9e5E8tAT+EGShz6SZ/Ar79XR70eJ
9ymgh7STdnPnFFv8Myena15u+f99HtyGy8uVeP6wwvyKfizxcbb8Yg8+wcZ/
UgIf5ZS/3oPnUL+U+Bz7uXEPPrwCzj9gKL/Eg9vFlI8viXexf3DMgzezCfrL
oGdOR3+82OK8ujxLHDxLHDxLHDxLHDwLXPMscecj6sHBs8TBs3/5JR4cPEsc
PEscPPvrmdPRHy+2eD91eZY4vkscPEscPEscPAtc8yxx8Cxx8Cxx8OxffokH
B88SB88SB8/+euZ09MeLLT7uXZ4ljt9LHN8lDp4lDp4FrnmWOHiWOHiWOHj2
L7/Eg4NniYNniYNnfz1zOvrjxRa3oy7PEgfPEke5Esd3iYNngWueJQ6eJQ6e
JQ6e/csv8eDgWeLgWeLg2V/PnI7+eLHF56WcUeBZ4uBZ4uBZ4niexPFd4Dng
WeLgWeLgWeLg2b/8Eg8OniUOniUOnv31zOnoj8M+r/fwLHFun9d7eJY4t8/r
PTwLXPMscfAscW6f13t49i+/xINz+7zew7PEuX2WesI+Sxz+R9TDs8S5fY96
eJY4Hz9RD88Cz+H6RT08S5z7dVEPz/7ll3hw7tdFPTxLnPt1Uk/4dRIvtri+
Ls8SB88SB88SB88SB88C1zxLHHpLHN8lDp79yy/x4OBZ4uBZ4uDZX8+cjv54
scXb3+VZ4uBZ4uBZ4uBZ4uBZ4JpniYNniaM+Esd3//JLPDh4ljh4ljh49tcz
p6M/Dvtc4uFZ4tw+l3h4lji3zyUengUu7HOJh2eJc/tc4uHZv/wSD87tc4mH
Z4lz+yz1hH2WeLHF7ZPLs8TBs8TBs8TBs8TBs8A1zxIHzxIHzxIHz/7ll3hw
fJc4eJY4ePbXM6ejP15scXvv8ixx8Cxx8Cxx8Cxx8CxwzbPEwbPEwbPEwbN/
+SUeHLxIHN8lDp799czp6I8XW3z+dHmWOHiWOHiWOHiWOHgWuOZZ4uBZ4uBZ
4uDZv/wSDw6eJQ6+JI7v/nrmdPTHdVypo+RZ4uBZ4mKdqXGxLtK48OOBC7/O
xZ1/UQ8u5nWNi3lIlF/iwcU417jolxoXPAo99XeN24/NS1j45OLFHtzR84QS
+CiUK3F8x++4fLEHx3eB54jvHv1Rnr98sUcfUY7W3/+5By18Anf6YZkS+Ch8
x9+B47vANc+m8qX+Qs6jvyyfyxeL9kV9D4p2LDbqL56bo88Bt/zxrxYjinS8
/arfDyUfeW2JJ3/BZeuuPW1Ty18851WW39/i0qLzF3rOaY+atGDPike9+QLq
LpjV77ufkp5zWTi3d4vQ54cmF+z7ceoaz337Ewdktr+4IuY5dz3igfuavr96
s+eeeewbdctaHzy6N+ru89LzZF7m1h/2eqXetVljvmbwIfMUSFznvZ14Sv/o
QPd89cKy82eO/miX5x4k7K9nPuTyKH8p8S3PUW+85rSONZ/a5HmPaanAp53o
26Xts6WefbTFpI/p3trp7R6Y37RDQuNoJ1N+SbSz5EfiucSzKe/nimPXLRz6
pIujvker5l43cYJ7384Qane5bwseUkIePMvy0W+2bfrwra9K3HKmUj+U9/BM
pn4oz1FAj0JRThsaX6Z7eLa/esam4G/ePIw7BD6Gxpc8j4H+ehnxqvMsUL+U
52TQrnK/GO2RK8pB+8lyJl7yYvDi5kusWRc+3Gz8A67duGr2gkd6dd+vJrb7
am399/frcXc42+151TSupgeue6LnSe6+8+wVVwz7+tbNFj5RDsrFc4Cf3+H8
/c/e+ZcKtL+x9tI7lrr7iS+dMvvgA8fV3jkjhz6/fbV7LuX0m+c/MLpUjahV
OLjFM1s1Dj2gF3DojXoA33nL1TcUp0+oW07cc+OvX7v4v+644vSLXi5TXRr0
tm5d7vbz5+l5eD7kfyC9m1A9IA+9UQ+9L0zP20XP1zg9D89HOaPuHnfkl4G/
WunPBzS8PeOeG4TeS/7z9JjooQOWLKdEyM8lPa8c2WHTvil7NV5j/Y7cpl32
qe+P1R28dU5cl7Ny8PtvLL1mnXV8yqMbvkhuc8/J0O/nivaCHH4HHHqjHnof
meop8VsnrXv01BVZ1az1KY99vnqx5mc38bWtxoyjtR9ZpHHUX7Yj6oP66XMI
pI9s32k3HFlbv05Gjc19+6LpV7p2pim168bOK0eXvu3amYIPfhy36ru/VNtH
zmg4baCL4/coDzh+31T0k1ep/i+Jdm9K9Qcf+jwn1X+36D/QA3qhnCjJrxT9
pDmVP16M60PUb2eK/oDz5/8cuWVB19/3arwdPfcHYTc2UX07iP72LvFz82tF
n17SNKZxvJd66Kozu62c4p4f0HlsaX7Dc+M9TvvnHc/u9dz32HbSVxf+eHtK
HRH9FvMC/Avg79d5bY6qu96Y7+Y9+ruc1+BnyXnte5pn9H2kVB95f+OiGX+m
Bv2aVkvEePma+s2duV07XP3dKo1HqF3HC/uJdo2KcYF2bS7GEdq1WNjVszok
tuUO8uZNAL/gW/szZNdqivHVnfqrtLfgDX6lPv9J/Um+J4J5cYyQP5f0lPLo
f+3EeET/2yTGL/rfu2K8P/xp73NfWrvNur3X5LYzbnbvxUI7od2AP9O4ZvOB
d5Z67j2G3yD9GZyf6b80euA/r7vl96D2/lrYDfD7p5hH8Ht5ng1+kvRzoB/0
1ecbqT9FhN2A/2p6zxr9RZ9no/4hzy9dTf2gu7Bjy8lvk35UVfKz5boDz71U
2B/4f3K9A39sobAbg35d32zJZb977Ab8UblO0e+3C7sEfqeK8f488Wu6x7WN
sButqD6mcQd9gcO/lOsO8P6AkIffKdcFkN8nxjXqaboP83nRf+6n55numTxX
9BOLxk8bstPar6bvlhhfB5667dN9648ofAI/UafhxA87r/DkfbuHxlEXMb/U
H3dixZIpq606d31U/5nJ7r2O+l7c0hp3ffriDkvyn6XnQP7ql177Zu2CUs97
gmX37H7jic9L1ZHv/rmw8XWFnvXdh7TOAI7nyfOuS2i9Z7r34Bp6vj4fS+tJ
6f9jXSDX9WgnddKSn9bvde3huG9ufefq0DHVZH3ZyF53u+0OOXkPdkfCJf8X
0u8bCp43U73keh/1ekbwP4b87esavvPsnJNcPEb8Vpm5utb2Di5+07/yfhva
eYdHvu4lsclP9d/pkUd9SkX7gi+5Tod+st2n0bqjSbXH64z+ZYPGO5Aeo8Q6
JYf0iIt+cveWz/95yehj6hxRDuqD+gFHfVA/GTf4XPQ39BvPe7u0nukiys+5
1+nPp4ry7yE9j4p1FvqfjDOgf3QU/Q28y35Vlcbpe9Qf5TjtNuVohyeDbv9v
SHyBP+Bp0u8egXel+JGMn6SoPVBvLU+8yHUfeJHysDv3Cv/tTBoPDah+Mq6F
uI485xxsUP3tj99wcYzPcYIf9L9pYj3+69r76y/444iKtR9yZ+p61++FXzJE
+MMPk18h/WHEU2RcDv7H68JPRvvVEPWFXbhQ2Bk872HhF6Fc6efU69Bp5sD9
Bdaik0csylZ154UfKO5wUMwXD4185KNXM7tU4fijCy7d5vJpioua1t2muKsx
fmKIx5rW4/+/5jVT3NW0zjKt903rI9N6yhT/McV1TessUzzBtJ4yrb9M4840
Tk3zvinuYVoPmuJdpni1KU5iileb4vZ/d73/d/1tU3zA5Feb/HCTvfq7foLJ
HzD5D6Z9hL/rP5j8RtO+hile+nfjG6Z4nSk+Y9rHMcV1TXFFkz9p2g8yxSFN
+0SmOJJpfWeKL5n8UlPcyeSv/t31oCnuZJpPTfOvab7+u/OvKb5kWp+a1rOm
edwUpzL51aY4v2ldbIp3mfb1TPt3pjizaT/OFGc2xaVN+32meJppX8O0fjet
903rBdO+4d9dt5r2WUz7j393HWFaj5jWL6Z1x9+Nb5jilqa4oikOaYpzmvaV
TOsj0/6saV/DtJ/1d+Orpv0RU7zXtL9s2nf7u3EP03rWtP41reP+7rrbtK43
7cub1vum8wCmOJ4pDm+KB5rOIZji/KZ9AVN8w7Tvb9ovM50fMMXhTecBTPF5
U9zAFLc3rStN5w1McU5T/N+0PjWtQ03nGUzrU9O5BdP617QfYYrTms4/mOIt
pv0IU9zGtA9uOi9h2nf4u+cfTPunpvMqpv190zkW0z6v6fyJab/YFHc17Tub
4rGm8zCmfShTvN20D2XatzLF4U3nZEz7U6Y4v2l/yrSfZYqDmfbfTXFs0768
aX/KtM/+d8/bmM57mM7zmM6NmPbXTOeLTPsypn1G076e6VyTKe5qOmdlisuZ
4r2muKspTmuMrxrO85jirqb4sGlfxrSPY4pXm86PmfbXTOeLTPuzpv3cv3vO
xLTf5JxKLfLEOR085omvAveXjxjkIwb5kEE+7IlX5FB/kPEQB48b8ITGS5Zc
eWjF3jSd23XjHtP3LOny5Y+lCjjk3+3/8NWnrzxIeMoTJwHuX6+0QT5tkM8Y
5DMG+axBPmuQL/LEk9GO/njEgEc98THwD3zlvHbHt71/wgL/wMOhQc99Mumg
5h/4W23H/nXNrF2aZ//nZgx41oAXeeLVqK8/HtXxmSrDru1z08OHLdQL+IlT
fn0+75ViXS/go05/qcme16O6XsAjIzOPPtJpo64X8MG75nWq3wH9LeOJC6Fe
/rgbf5784dXVtt/m1gv4H93bNKzxaUahHXUe9bL7DjR6qZjwsI7DPN1p3g0f
JTZa4AH4jT9Xn3BfkwLNA/AnmXxC4zP3T3561w3LNQ/Ai3f8lpw0/VfNA/DO
I8cvr8jviXrhfuXFofmvHXjwkIV6Ab/163jD9H93W6gX8E7Pd3/8+1UFWn/g
Zc5Ffgr6Az+n6kWDPqu9WEF/4EOb/Pfjdxr8pO0A8LxQTrvLu0y3oD/wF7os
m7r5zdUW2gt4kOlf5FlXQn/gkQEH5jb9NKX1B94v76oJH2l+4hpPDGl31ewV
hVp/4M06blv40PrftP7AP3t5wZJFexdp/YH3/rjg3y8Pjmk95XrcwQMaf2DI
wbVf/rhS6wn8RFnFv11aT+D37+zR5/YLd2g9ga+t+2bJ06eu03rqfMus/JTG
h94/+IycnH1aTxnHAJ/ANwk+gT8o+AS+W/AJvLHgE/hEwSfwuwWfuG/4LdGf
geeK/gy8nujPwLeI/gw8fRLvz8BvE/0Z+CDRn4F3Ff0Z+BuiP8NfnivsD/Bi
YX+An5TTi9kf4O8J+wN8gLA/wN8R9gf4CmF/gNfbye0P8PuF/ZHrJtTLH3fz
2NcS8wXwU07l8wXwsWK+0Pe3ifkC+Eg2X2Q96zvoL9dZ0N8fjxjwqMfvRb2A
bxLzO/CdYn4HPk7M7/7PzRrwIk/8AfXyxyMGPOrxn1Evfzyh8YzwG4F/LPxD
/+dmDXiRJx6CevnjEQMeMuABjX/O/Nuowf+PG/CUZ/3r4GkDnjHgRdp+yPo2
su2nxCNWO7uf7/f4aZMM/v9s2x/2+v+/235Uud+0YuEv+zsf1+24z44L7rfm
rLVqNvtfsW7HKs2uHlWRT1vWt3HHaS3yhx3w+KXtbX/moMdPi9vry12e+uJT
1muUr1+doHrtsgasqf2vsmVJrf8fdr1i1sjGm6afs3m31n+PXa/dHj0d/fd4
/Mwrbf33evT/ZOwdj3bN2+LRcy35pTWE3TvJ5m2LdeHH/zgn0r1E2weHnwJr
ys21q1Tcowv9H7fjnYVWwYwDDw/9ZYvWf9K6RY9WxGsLou/fU60M701mqHx5
P2FWnWvXa4dHz3bkZ/YQ88hndvnLrJb1uz7Re3+h1rNG56dzKu5xXTFk+Z9D
nwnp+fGPyza0PVH2h7Xqrm6js+qQni8e71xxUeTX6sijo3K737NDt+uEfe8M
Pr9rnlo69pNa59yer+e1geQfJsQ8fvHY+b89WV7O05F1E3++b7aex6s9Ywc0
1ODfn77tk6nj9XNzbB5CYpyWr8fteq1Vj17ZoNfmGn9pv+IKm4fVqtHcU/KW
bjmk9VlDfuBDwi/62G73kPrtzM/+WTzxT63PqikH20TKy79i+GOdksOXa30c
nrcpuU7HZ1b4h7/Zz92mZg3r+HCqhusfOs+NqD+y9WeNHhXSfssAOy5SoF6c
NOqV0jeX6XZpc/YXayriNxc3jb3TpGCPti/OeNnt8Q+d8RVTb42q+9eAx9Oa
h0bkv/URPODzl2pnr5s0eKvW0xnXu1Xrz/51WsU9vdDTqVdMPf7kFd02XLhE
6zlrxi+nzxm2S7W4YVC9yno6dimhHox8/HOvBke0Pu3I79oj+omjZ0J9svnD
83bdv1Lrg8+LLvuyXc7khXocrbX1KVKH5/y3Ttt7t+rnpsbEhw4rTKomq1/s
3yabVeg/g54NfFJx/3NwTvNrA20wr0WsAtueF6uu6QmRQXqcRtV08qPuE+PL
0TOphpdO/mLmoHV6fL1nxwWT6vb0+gkV+W2hz2i7Xbx+l6NnyjOPtyP/51Rh
fxx9jqiHxo4/eGLWAf1cR5+Uar6ty5vfprbo59a296lKPc919JF4hPRJe/RZ
ZPCXHD1LVfNfeo/+bdFfWh9Hz1I1/JSZk5q/5K5rPrXnNa+f4+h53KOPo6fE
o+p2g5/j6On1cxw9j6uOvz2y+LM/sG5Kqq9tPY+rS0M/pMueSOh+5fCZ8czv
zRcsnNclz+vPfGLXy+vPnG7X64RH/y0G/+RWu14STyjLrleZumhslUUrnzqh
x52jvyy/yOpm39ftjWde7juPR6yzfOf9kNXd1kf6CSEr29TPfwjQ+Dpgnfd0
8OUmH6QU8F3kh/zA/JCk6k/ydZl8Eekp5+sY6Snn94j1l61P3KNnW7vdpZ8Q
In0kHqD6xq1rWH8IUDwtZg1lfkhCDbD132NdI/rVLVROLiuniPSX83iM9Jfz
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
KcT2lcL6fbp/LhzzTfF97jzixMN3qN+ZfJDkd6vajP+oLufj3Nq7d9d397n8
y09o/PyzFh248MaQxq/yfW5KTaF+fgmrV0oNIR6aMx7SKhNxxtGbbJ8rrbbY
81qB+pDxmaZ9t51qgsDfoP2yFmw8ZtQrvu2VUZNtPeW+G9bFO9VoNo4CFD+J
qYdZ/wzq9wobM34C+nzXJ+z8VVjLXynaEfKN2DmuqJafyNorTO2+R60R4/d8
Kqc32x8ME55QTzB7HjfoE6f23aMWs/KT6i7i5wXGT1r9SPGo81k8Kk0871fn
sfk0Q+24Vw1mca2Mmm+vI/arI6Mq2/OsetU3Plbked/QwWMav5rZgYjGVwk7
D/wpZmcCGv+c2augfn/zemGfcQ7tcTG/Qz7G7GfQcP4tquWnMDscpvjbQTWU
zftRaq8Damlzbucb0/7mG2J/E+V3ZPonNT6J1Tel/PlJa3y1sMPAr2L8p3V9
G7Bzg1nP+7BoXyevabHaJuZ94NU7cH8P+IOXc38P+BkNKvshAY23acj9ugKK
XwVZ/CpE50tTqi1bXwQVyvlT+Hs4v9dwJ/fnIf/AvMp+V1Cf91su/POe1O5N
WbvHDeUkDPokNX55Q+6n+fOT1nify7mfBrwa4z+t9a/Kzk9mlX87FlkP+sbx
IhSnPayuZuuIiH6PsrlYlwFvJNZlwDNiXTaY4nWFLF4Xsj6w7WFa9WXr6IA+
V5lg69agPt/4Dlufwj6XqH+w9RfGdYl6Uvjz39B5gCFs/YVzsyXqZlZOXL9/
9/7o8a12d9qt2x34KrauTGr8KOMhpfFzGW9pjbdgPGc87/1B3v+cZ9YgnzHI
hyguJ+N+IZpPJR7Q50LHs3hLUJ/PjLJznmHis1T9xOIGcf3+4MCf+n6S3zSt
+QTej8Uxkhq/ncVD0p73EFFffzxtPF9qKsdfPkTnhWRcMUT2R+IBfe70Mxbf
C6slvucu4p73wtB/5HuOqJc/njHKm86jmsoxnVOtSr/jeNh4jnRCn+0PVvDD
8azhXGjYEM+MGvCwIV4X1O8BrWf9M2qQD+t42j2sf0Y1nrryppu+vOK47ueI
24xm9iGq8X0nul1cVrZXz+/+ca20xusJO+AfN8sa8LAhzlDkuX/AwUP6fZP7
2XsKAY3/V/jV/u+bZDz3mUBPfzxk+b/HETS8D5LWeJ33N4d6tT6m/R//91PC
hvc40hrfwt4HyXjuG4H+/nhY+1el7D2LkGV6j8DfPscMeMjyP+cf1Xb+GOtX
IeO5fdi3k9tX7rchw3n4sMH+RA142DCuowY8bhhfcd2fR7FxlNb9Zytrr5Be
993D+m3YMF+HNQ+PsOdG6Jy5PHcdsZ6oX/W7cT7ntH+39Snw4NsurnF/Mw8e
0c+R+MyDl9bq4jlHHbEmUVy3hfDHkoO/HfVn/jJr/XN779i27LBeRwyncztz
2L5wUp1n959l1uGe3fvc8cpiXU6nZ5xzKX3Y/njE2nhp/YHPFn6tVj2yrf7A
7931S7XWFXGtPHXixUtnTdDnjZPq9X7O+ZnBLfn5meb7KuIJX6v/3bwq/tyt
H2q8D50nKWHnE5Kql90PQyrx3zF3PFFgaTuZneecV9nBzi2k1Fu2PV+vzvk2
VMdt94SK2vPIfvVFo7HnVNHnXZO0b7tflbDzFUmVsf2fhJow5uT3v14U0OW8
bPeTpBp3TaNLh+jzqEld3qnifMKp9rhIqpaRRuc/tQl8ptSzdP4hxM4LpdRE
e1yUqHX/q/vNh9o+JGlfMqWeZucBkuojW/6IGv6v71d/Vmu9Lgefjdj6KKWa
DWtweYXdWPfe9aPqdXDfX25E+++t2P57UuXa8qXqplmZkt/G7tDlBF68taqf
/3NvemINv/24DgUt+1XsE7Vh5YSskbPvCQ4t3GTNYvoErJvtfcaN1t2sXjif
tsw6+a7K/TaoSm52zuEvYOfwg/Texyqr5nO1Ow3TeFL1oPL7s/JD1thUJt60
62JrBuM/ZLWx4/8/qUUT+vYN6/2FgNUt58NJW/IXWLHCyu0boHNWX6vrWT8P
0nsQ+VY7dp45qF4+u92gIeX41axfBdVUOs+/gp3nD9J7AXlqPBt3CTWNyj+L
lV+OU/m9Rb8dQfrXFP3zM+JhgeBhFI2vumx8Bawxe3/7eELuPBVk4yVg3Ubj
N8LGb1DX43J2/rx83T34rHjFZ4iN04SqT3+/hcmXj0+St8S4vpf0mcH0CVmd
5iS3V8wLtYT+fez17x61numJ8wkJ9S0rJ6iq0/PPEPoXkp35QejTi8rfKexY
R9KnPtMnZE0gO/Ar4z9gjbS7w0FV0KlyvwpYJ5OdqcHaMaic9fUhdY7oP3m2
PTmkYi9U7j9B9QGdtx8q+ucLZPeeZP0noYZR+b+urVw+zu0fUj3FvPA06d+Z
jYuUut/m54D6nY2vtLrM9ucPqjvYvBOwutrHJEtUQ2YHAsTbEcXHdYLWU4fV
RmYfEmpDg3UdKvBawj50pvKrsvLTZA9LVBmbZ9NkD73nha57Z/SmLp5zRGl1
vY1L+4l94QLrU/beU5DOLRRYt+W+29nFU2o02c9FzH5GrBO2PZynakxctnLm
/Ts0n8rubwl1OsND1oU0Lyxh5SToXNlR9S3TJ6Hs6b0cv4PpE1UBw/0bFxnW
a2Hy3wawOHmU5uU/Rby93L8l/BOBV6NP/t5QlPrhLvWR2GdpZs93BeqyxrMn
nfjajbc78fmoeM8oTv12p2rF5KPqQ18/NqDPq/xU9ZWXWmb3aj6Bn3TfknpH
Bx/WfIZtu7HLmjcj85X7vl5C+8M9WdwjoUZQf+jM+E8YzjMk1Bs0D5Y9W7mf
p/U+dWcWBw7rfbpDIk4Of7sp2x/JeO6ZdPCsAS/y3AcIvLTvd4mK/R25j+Av
H6P9XLl/FLPqvnzO+DwPntD7LOexfaKQ5f8+e9y4X4B1xErGc9AQpwob3hcO
GuIh3nt3HTyp+8M1LN6VVDeSf3UN86/S+pzJIXaPR1o9R/78G8yultvbzo7d
yGX2IaP7STd2/0BGldrvEVjq4fva7D6h+23Eupjsdh4rP0Tz7AH1AbPzQRUk
+7xG+G+byD6fxexzRse3D7F7AzJkh8vLeTKy54aGrv+Jdrmb8RYgu1eqrmW8
4Xz1UTVN2OEBZPfuZeMuqNe/Ndm4Tmp8NrMDYcO9Q0GDfQiqH+h93j7sfV70
n13Wr8xuRA39J0z+sBe/zu4/Byy5Hp/oKx+n/iblk1r/71h9o1SOrG9U1fKN
s5Xbf+rnGRFP879XJ61OecxZ/+5n83JG+d9vU+S5/xP4ZNufDHvwRvZ7Rps9
dsa/nJi129bfe75F7+PHXhvVo4F7PgH43n3Vhrn78rgXa4O6LzjwqX+/fETz
gPHYkN1LE1bt6LzQZ+x9z7CqbZ+TWaKu7P/8GzuHrtP8JH31zJJfLXnIqha+
PAS1nW/C7GqY5nf53m6Y1psFYj4N68/57P3Z8u/2vvZmFT/Q7/WHZmzX8/Ip
9PdFTD5O++Cb1U4mn/HcP+zgKY3vZvyn3fmCtVdaNZ/076srntObtUvWUH5G
ne47H2Vpn92Ll/jOg2Hyc+JqluDHeT80pnaw+oJn6c+E1fPkz/xD+DPjSP8J
wl+aSeVvFXxi3mwq7qW5gPzkOBuPAX2P6HzhF/nbz4Taatu3Y+pxZvcS6oA9
/x5Ti5jdw768fK8W8T0Zn4yTf+t9D/cFX/kwre/kPB5Wp9j6Zz3lbPWVj6sa
vvJh1d33fdWwamLz6Y2XNvXFo6qZwd8+xWBvt5G9LRb21v9eprQ6Zq+Lo+r1
dtt2d6vlxtt3Wff/2dVzXiuj6trPled/sqqj7z0AWfX9v8e8W3GOTuIDbb9U
xvOzqpVd350eHtrvnFmn4j1fiQ9d2rtZRT5uifecfuClinP1Er/KXq9FrXlr
dpQde7KM6ltkzffVs8h63FfPIquFr54xq6yp/zm3Q758xug9aMlnzHAfV4Ti
UQUqj53XilhNM21aNC/nn7djRPvbjcU8BTwu5qnDvv0hYvnvy0TVQ7YfuFHd
u77vTdUP7dD2p4u97t6hnOMz7jkr//uRcM/VEVWXvdcfVS+Sv3cS29eIqi0L
plWp8N/OPat/rTMudffvlvi+jx9VJxv2Ox5ZUxiusD8S7+Hr50fVeMM+SElB
nRkV75t49nnt9t1vSfygzXPMku3e3p73V1lf9+s+oVNDd9/h3q0PNPqgAmf+
cEpNpfdh89h7eSl1N8U5y5h/nlDLbX52q64t3+zg3l8Ro3sz9qva4txvK3t+
TKgrxbpgEp1Du4qdQ4tYN1Nc4uCHldcdcXrufnUu81uiqsmyjkMq3sNaycZj
VM3cMOL6iveSpH9SQPPIQOE/F9M8sljMIwHfe4HC5K/KdgmTf7vLgx/2ba+0
Wuf7Hnpaldjxi0IP7v8+SErd7xtvD6tjTZ17dc5h9+rgftRC6+zu4RtcvyVt
uDcyo4ZT//mV9Z+YtZLWfV1Y+wZVWzpvfDm75ySo3rTPDW5UPVn/iSrcv5vL
xnuU1n27VU9mHzKqBfWrHuy5Mes7WvflMz0jdA5Bnt+IeO5Xd/CQ9b3vvkac
7MNR9Q/GZ5z8kHJ7wvgsn09/btaj4v4oOd6Xfjznm4r1mvQ//f3/tMYvEP7n
Wb52O2vY747Q+eeUOrFp46p+3+I9kQjVV8Yn47RvlVY/zs79oFWbY7q+zn6T
HF9R2hdLq9OFvT2fxukSNk7DdK/IUdVU9M9i4rMZ4zOu/kf99gzB8ykG+/yt
rx1Iq6rN/O61SKt6vvu8acM9sWn1pj0Pynsniqyuebnl/3FeAf8QJyj24P7y
EYN8xCAfMsiHDPIBg3zAII/9GikfVP7yYYN82CAfN8jHDfIJg3zCIJ80yCcN
8imDfMognzbIpw3yGYN8xiCfNchnDfJFlg2X91uOxwx4xICHDHjAgAeVPx42
4HEDnjDgSQOeMuBpA54x4FkDXmTlDyvMr5gfOR4z4BEDHjLgAQMeVP542IDH
DXjCgCcNeMqApw14xoBnDXiRNc7mebGHT388YsBDBjxgwIPKHw8b8LgBTxjw
pAFPGfC0Ac8Y8KwBL7Im2DjeW8C/mAGPGPCQAQ8Y8KDyx8MGPG7AEwY8acBT
BjxtwDMGPGvAYT/Xe/j0xyMGPGTAAwYc9lPiYQMeN+AJA5404CkDnjbgGQOe
NeBY50U9fPrjEQMeMuABAw6/ReJhAx434AkDnjTgKQOeNuAZA5414EXWHNuu
xj18+uMRAx4y4AEDHlT+eNiAxw14woAnDXjKgKcNeMaAZw14kTW8As4/4OHT
H48Y8JABDxjwoPLHwwY8bsATBjxpwFMGPG3AMwY8a8BhP0sM9lPiEQMeMuAB
Aw77KfGwAY8b8IQBTxrwlAFPG/CMAc8a8CLL7rb5Rzx8+uMRAx4y4AEDHlT+
eNiAxw14woAnDXjKgKcNeMaAZw14kdXFJvqYh09/PGLAQwY8YMCDyh8PG/C4
AU8Y8KQBTxnwtAHPGPCsAS+ymtkL0b88fPrjEQMeMuABAx5U/njYgMcNeMKA
Jw14yoCnDXjGgGcNOPwlvPeIfzEDHjHgIQMeMODwlyQeNuBxA54w4EkDnjLg
aQOeMeBuvgCOwy+SOObx/QIPWc3tdkkIPGBF7AXtAYFj3jkocMS7DgkcvEl9
4BdJHPO41BP9UOqZVgW+embUB756Im65y8Mb/8Q/+JMSh/+z28Obw2fcw5st
PmyPhzeHz70e3vz1RH+T+iC+IfGUGuqrJ8av1DOj/vTVM6v+46tnkWXDeVs8
fDr1KvDwyT/xD3xuNfTD7R4+nedGPXw6PO/w8OmvJ/wfqWdSldH+FMdTaoiv
nmm12VfPjGrqq2dWbfHVE/7PMg+fTn9Y5eHT6W9rPHzyT/yDf77O0D83ePh0
5sGNHj799URcWuqZJB6knimVofvTOJ5Wj/vqmVGbfPXMqpt89Syy5tqKfu2Z
rx37kOeZryfb+BgPn078ZIqHT/6Jf4hn5nv4dOq1wMOnv54J5a9nUj3pq2dK
veSrZ1pF6T5njmfUl756ZtW9vnpivIc8fDrFrPXw6cTxVnv8H4ef5QIPWI49
XyJw9z0ajofVrXa7z/P4P/56wj+XeibVeF89U+pXXz3Taqevnhl1qq+eWdXP
V0+sH7d5+HT0j3j4dHgr8PDpjNM/DXxu9vDp8LDRwyf/xD+sH6WeCeWvJ+Ib
Us8UtZfUM622++qZUU/76pml95KknvAnvPEixy7t9vDp1Cvm4dOxh7s8fDr1
3enh07GrOzx8OjyY4m/eeJG/nliPSz1TaquvnmnVwlfPjHrSV8+smu+rJ+Jv
CQ+f0Jfj2Lfd7+HT0b/Iw6fD8z4Pn868ttfDp8PzHg+f/nq6+V84nlTdfPVE
vF3qmSaepZ4ZdZGvnln1lK+e2F9Levh0eJA4/CSJh6gfFnv4dPiXOOb3Qx4+
HZ4Pevj01zOh/PV03wvmeIrKl/qkiX+JZ9Q2Xz2zxLPUE/bTGy9y9E95+HT0
l3jIcvy9wx4+HZ4ljvMAEke8yBR/88aL/PVMKn893fedOZ4mnqU+GeJZ4ln1
hK+eRZazXij18OnM4xLHfJT28OnMOxIPEM9HPXw6PEsc/qfE48pfT+xXShzr
I6lPiniWuHuPOsczxLPUJ0s8SxzxN2+8yNH/uIdPR3+Jh6yfbf0zHj4dniUe
pPWLN/7mrPtM8TdvvMhfT+z/Shz76VKfNPEscfd9Jo5niWdv/M3pJ2UePp3x
KHHEh094+HT0lzjOJ2Q9fDo8SzxMPHvjb/56Yn6XOOLDUh/E2yWO/SCpT4Z4
ljjiHjI+k1WdDfhJ9DtZjn993fvhJd7Mlwct11GW73x6z2vhPa/PWL7OoOH9
r4ghj3lWvyf1hcjP638/T8yQTzmr38ubw8qJGPLhJgzvPyY1PoPVK07vr8nz
k0XWat97qpOqDeUR4PmwEnSv+0GrGcv/lVXvzCsdOLF8PXIvy6+XofeRD6vP
2PnqoHLOVWbVJSxPaJDON5apVqx8vMd90Gop8NWUb7QZKyek73vf95/XwpXz
Wp5P573fZfoUWbNI/xFM/6zaQHkDr2F4jPK2HFb5rJyUfo/1CHtuUL/Hepzl
t01QHoqsaiN4wHuOJUw+pd6n+/3uY/f7hQ35gsP6HOYqhkepHWX+05Q+L13E
9A/pc78phkesXyto8+QrKbIs64kPm05b7BkvQV88o7bWvWlg9Nt1nnOnvc5O
Xdh+q8yfUr7ef2zCwYfvlPlBgqr9VzNPzf/Q+17w0M69Gwz9hxzXKTV0w8Vb
V0zx5jvr81DozS3PyvveY9b4EdvWntHSe49rafq7nlPv9uZz8cdj1povLuwe
O7DKw0/sjU8PX3TeMk/5Xc4/p2r+XHm/aEZl2k59+9fr5D1XWXWLr3yRtcu3
/JgV8eU/o/J861s+L/vyH7KG+fIZV4NrnPNIzWLZ38Kq3Wvvtqk2Ur4PEjS0
V1xd6SufMLR7VE070bdL22dLPXi3rPXBo3ujHn389Uyrfr79IaP+8G3HmOXf
LhGrTpeTf5233tuf/Xkz90P//mMadyY+TfU18WNqx787vv4unya7YRovJnti
6s/m8eI/7kx2wDSOTOPOZDf+fv/xH48m+2OyGyZ7axrvpnFnGqem8Wi2A7J8
zIvgD/rAb5M45j+Jw5+TON4PBx4MzX/twIOH9D0XwN8iHP6ZLAfzscThB/zf
+rvvU/DyY4byY4byXRx+ocT5cyOG8iOG8iOG8l2ct1fI8NyQob1ChvYK6Xw9
8L+B30L3Q/J2DFkv0v0k8MuBP0D3HOL9H+BD6P5M+OvA7yV53h9C1q1UPvx4
XT7pw9sxZOH+Sc5zyMBzyMBzyMBzQOe94jwH9HqH8xzQ+Z44zwGd54jzHND5
fTjPAQt5YTjPAQv3nXKeA1bvIQfXfvnjSsFzwELeAc5zwMK99JzngIX7yTnP
AQv3XXOeAxbuW+Y8B6xJxBvnM6gOkx/OeQuqDXT/LeetfL1C92lz3oIKeYs4
b0Gd74bzFlTN6L4gzltQ3+PKeQuq80me8xbU9/Nz3oL6nnbOW1DfB855C+r7
qDlvQb2u4by592Dwfui+Z8f5DCusUzifYYV7SzifYfV0p3k3fJTYKPCo6kT3
k3Oew/reD85zWN+7y3kOq970/j7nOaziJM95Dut7aznPYfUe6cnxqBpAenL+
w6omva/N+Q+rjcQP59/lmdsHE/9u/IHzFldP+uoZV+8QzvlJqr40fvlzk2o6
2Rn+XNev4PIuzvuP+54pL8fFef9xcV6vtCqme5x4f0jr+7t4f0irbXQvLm/3
tPqTcN7uaXUWlcN5S+s8ArwdXT15O6YN/KQN/GQM/GQM/Lg4H18ZA2/l/jjd
/8N5y6hb6d4SzkNG5RLOeciog1QO7+fuczk/GQM/GQM/GQM/WQMPWQMPWQMP
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
AcrXBRz253o7P6X3vYzrbBzyrv9wIbN75faH7FUrdn41qD6l86ujKN888Fsp
/3UPypONdvmW5PtRnmzgd5D8aGYnU2oR7K3hvaqLDP428go7eFj9RPltkVcY
OPLbIg+ulEceXCl/UPjbn5BfPU742x8S/qHBH+Z+r7uu5PGxmM5PjTyOwKfT
vRzI46hxynPHy3fXlTxOFbPwPstsFseIWcjbyOUjVn3av57E4lcRC3kb+Xon
YP1E+Xy53xjU8WfuNwZ1nJmvd8LqEK3XFhvOq78s1inIN3eH4Rz7KYb1C/f/
3XUE8m5KnPMT1+/Hcb86rtebnJ+EQj537icnVA/igfvJ5XaSeOP+eUI1pn0K
3u4JdR6td3j8PKVGUnxyKjsHm1Lj6Dzq3cwPSaks2SW+nsoY1lnuOoLHMyvy
vjrvi13M7FvEGk/2rQ+zhyErj57L+0nA6klx7CCbF4LqN5oXNrF5Iaga0Lxw
O7NLQTWV7NIAZpeC6m6yS3y9GdR5qJE3FDjyhx6ivKHAkT+Ut29SXUP68/KT
6mcaL8+xdURavUH8cJ5du8HbN2Z1831PLWYdInuCvJjAfya7wct37cYFbN6J
WMjfzeUjFvLXczxkIX8lr2/AQr5vHpcLGuInQT1ePja8p1OLjVM3PvOK4f0d
5GeV8hP/z/K98ZxV4j2gKvR+DfKtovyGlNcS+VaBn0X5K+MiLpShuBDn042/
tWX7uUF1GeVXRV5V4D0ovyryoMv6Ik+5xB07793fv85eRxzw4M+K95tyWjj7
73Exb06k+XG+vT+yWT93N+WRr4bf02fW3hfcRf6hO88i3oU89yhnJ5XD90Hi
+r1j5G0F3pLa5SDlGQXeiNqFzyOu/e/B+HTxPw3vSXVn7w25vCGPu8RrsHaJ
i/7pfd/5RtYuleYvKhd4sNrZ6yYN3qp+ZPzH1Q7irRnzl+KqFfk/5zN/Ka79
paeZv+TKz2TtEldbqXxuBxLarjZlPJj4TBjsQ1J9T/bklMcqx23SKkH2ajjz
lzJqoa+/lFK7yV5xPK1g3zjuzoNJe/x691lOf/mc8Xk++yO8HHfedNZNYQ/e
wn4PaLMHd/ahdnvwkr7fJVz+K8lTfnoHd+cR5KeXOPLTSxz56R3cnS+Qn17i
yE8v8TVsn849l4g89MCR13jo0t7N3HwV7vjqOf3AS+65LBe/yl7vRDX+C+Ud
Rr554PdRXmnkmwfegvJQLzH4n+MNfn4zwzoFeaAljjzQEufzS1xl6b4IJ+5U
oOXrUv565M8G3pz0R/5s4HdTfZE3Hfhq4gd506U+7XfOrOO+D2iK86dUnMbR
Mfu8IvpVWuenPou1b1qNIZzHydPqzPc3h3q1PmbtYv3KHUd1Wb9ycV6Oi3e0
/Vs81x0X37Nx4eID2bhw8VZsXLh4KRt37niZxPZJ3f5fl9kHF0eee7Q78t2H
bXvovmc6j/zMEWw9nlC3kB/7BotrJVTZs44/7JSP5yZUN/ITeP9x63Uhi7sG
rGspfngjiysmFfAA8zMzai3Z28nMvrn8NGL2zcV3M7vq8lON+oeDu/F8Pu+7
OF9HuPj3LK7rxm9/YO/zBlUf8vP/ZPwH1S/Ef237nDbO1YfVldRevB9G1Qny
Zzge1/exbGXri4R6jJ57gK0vEipIz13P3vd04zx83eHi3L6l1Snd6r1+z+5S
i+OmceS2C5+/QhbG+2E23l27zdslqmqRn9xe4HUJ37JgWhV3XRZVjcm+PbKm
MOzy4NqfkoI6M9z3blyc9+e0OpnqW8f2Z9y40+cPP1+jQYdSNZftE5l4i1g1
qRxevmldXO6HvLz8v7eeXEpxs5gupxWdM+F8Rqz9JM/7rbvP5dxT7N4Xl8P+
FXtw537knR7cucd5kwfneYVdnOfHleWv9+BoD4nzvJsuzvNHyvJLPDjP5+fi
PC+di/P8ai7O+ZT5oYo9OOczZuAzZuAzZuBTlr/egzv/oh6c8xkz8CnLL/Hg
nM+Ygc+YgU+pJ+7TjRl4lvmtij045zli4Dli4Dli4FmWv96DO/+iHpzzHDHw
LMsv8eCc54iB54iBZ6mne28xAM6zzG9V7ME5zyEDzyEDzyEDz7L89f+vsnON
taOq4njDw34hPIQPKIUgUNoAESTUyAfcxCApBCKIVqgGDQKW3pq2iEYBASsa
LaW0WJE0iJAoKhIy4KtgYE5NrhSBeridaq3TcjCnp+11KHduJ3dwyBTp2XvN
uv+1ZkWdb+d3565Z+z9775nZj7UU90dPcdS5a+gs7U8qjjp3DZ27hs7ST44b
TQB1lvmtJhRHnSND58jQOTJ0lvbHFPdHT3HUOTJ0lvYnFUedI0PnyNBZ+kk6
R4bOMm/UhOKoM3PUmTnqzBx1lvbHFPdHT3HUmTnqLO1PKo46M0edmaPO0k+O
404AdZZ5oyYUR50TQ+fE0DkxdJb2xxT3R09x1DkxdJb2JxVHnRND58TQWfrJ
8ewJoM4yv9WE4qjzwNB5YOg8MHSW9scU90dPcdR5YOgs7U8qjjoPDJ0Hhs7S
T9J5YOgs81tNKI46Z4bOmaFzZugs7Y8p7o+e4qhzZugs7U8qjjpnhs6ZobP0
k3TODJ1lfqsJxVHn3NA5N3TODZ2l/THF/dFTHHXODZ2l/UnFUefc0Dk3dJZ+
ks65obPMbzWhOOpcGDoXhs6FobO0P6a4P3qKo86FobO0P6k46lwYOheGztJP
0rkwdJb5rSYUR51LQ+fS0Lk0dJb2xxT3R09x1Lk0dJb2JxVHnUtD59LQWfpJ
OpeGzjK/1YTiqHNl6FwZOleGztL+mOL+6CmOOleGztL+pOKoc2XoXBk6Sz85
LxAB1Lk29KwNPWtDz9rQU9ofU9wfPcVRz9rQU9qfVBz1rA09a0NP6SfpWQs9
OX4scZ/PbJvi3p9RxX0+UVrvIe10Fffl3ak45vWUPDfs6HGzL0O+QDmepsfN
MH+btM/r89HOi4r7+sPxaYkvgTzEfXHdVHHMuynH5QrFMQ+ivO7bivv7/o7h
D+8jIL5q+IcVivt81RznFv3crjjmuZTnl4pj3kE57nTAOJ/jz6B9jidDHPMo
M8d8lswxL6McRzqguC8vxxVE/jfFMb+jHFepFfc68DoZtFMrju2dvy+wvcvv
mlHFsb1LO13Fsb3L76/M4LlhR39nYXuX31/6Owvbu7TP849o50XFsb0zx/ae
ieumimN7l99rheLY3uV131Yc2zvzk6G98/s55puX3ym8v4Y45v/ORbkKxbG9
y++jtxXH9s78LRFvgfgd0A8wfxb6AeaXQT9QCP9LxTHvqXzPP6B4D+JM8nvj
69A/MO9B/1AKfyrFMT8oc79uiuMHEr8F+o1K2K8V9/PUvJ6HuK9XHMd4Bh4X
So75R9kO5h+V7y0TimOeUea4/nw8fiTE4cd1pOPxhsBxXRbn30HO6zlxnWdm
cM6vgeteeB4W55FLYx83z8Piemnmf4Z99LyPez2sC+V1aOdC3FeOm0r5Pqm8
c0O+y40QN7vT5P2kPKOkA8XTpnyi5OePwzr/vcD78W8Dx/n9bpPX8i6w33GU
V5TyiRI/Lfh5E/ifubMCx3W2maN8nbgeMnNV4DhPXTT5NE+C/QuVWx38Xw1x
zwq3IMQ9w/W6A/dCyAtzu7GOF/cFDNwWOh/86caUtxR1KxzlUaV8e1QfyD7l
kyP9qZ5sDvn8qFzEKd+e57x+hvIXyvpGeQTJT+KUl478bOJ4h7x3ZJ845ecj
P+m688EfLhfaYX8o/5+0Q/nzPOf1M58P+Q4lHwl5E6m+NevHQt47qj/EvwB2
uF2jP9x+0R8+/3nQeVp8DLi/fF+OHL3/Bda/MPTk674M953rA5aLy0t5Jal+
El8C+mTG+bwe+JKQt1LWf8pHKM9HztelPIXSDtZzrs9YD7l+WvXZ0seqJ1b9
t9qjVc+tevv/1n+rvVv139LHqg/W/bLui3UfrXb0v9WrwX+tV1Y9tNq11Y6s
dm31n1b7tfpDqx+w6rPVf1r9ttX/WP2D1c+cB+tOuR7+BtZvT1sPOXxvoec1
10Mft5D2uXA93A7xutP40hCv+2XYFzlwT4V1+5vhfSBzZ9JzH+JMcty/AcTP
zNw5Yb/JXshHkLsNIe76Zsg7kLvbQ5z26yD+J8dbewnieeZucYib5/PI6Lhk
uyF/BPNzIe5r4U4P8bt+DXFc3+Uh3tcrkK+hcJMhX8MsyLvB9eqQU6fn3WD+
YcgPwvVtFuQHqYSdnuLzII8J188TII8J838P97PTfmfux44/e9Hmvzb7ncfj
N1/0eab+NFwvukXVq/l+Y3PD7wz5nnzejVeb+vbWGp936VrI/xLFoyH/i9+X
9GrDKc7DoeG+Er/8DJ8v4D6ICxHFd4Tz/f73qYZvDfZ9PFXyv9PktZkF+W46
bl7g18L5mTsu8LngZ+6+FK67E66bu3647mLIP1W6Y0P+qZtBt8pRnqzFkD/r
3e/BDZ5PQf4svu8+bIDel30x3MfanR7yhZWQR6x2VwR+N+QR43qye9h+pxT3
19X51Px3JfnZjeeFeIw+bxfVt8RdHfIojYp9cAeW+HW8Pr/Yc835i0M+ptNE
nqzzQ5zVkyCvU+KWLXp43sZzNoU4pXnDvxvsrAV/Bm5+8OdusR/tyLAf7ZPD
/uGZpj/8ebD/S8gPlbiRYGcj7BdL3EUhj9XXoVwD96ngz0+gvZRuZqgnXWh3
fH8Pu3h6+2X9q+G4h873558L1K9y/18N60PW1Nt1K2aufmxjFN8C+WUK95eQ
/2LFnpceXNfoEMWdcH4BdqL4icAPH/4m3nFHhTgPC8FO7p4M5x8Y9kvE03jm
A6Obnlj4euyG8RDITumOCPys9d85n+3343mfOXfXgdE8/jicn8b7fujP3zf0
s9/oT8/NMy6eft3SnRrsbxrmCYob+5cE+xHkL+P3nP1gf1p84+F3pY4P5vsr
HSc5EXGMvxjiFR8W/Kbznw778m4F+1yuHWCf+emgW+WuDOWaaexzv8LaF2/s
b90p9qXmYV/qjLOn61m5G8N1/XjOluZ+Xd25fvnBfZTnQbtL3EMhX1sxrOf0
HOHnqS8Xz19/Nti5Tez3PzTs918P+aEK984FP7j+4Hd9B/wp3bXBzplgP42v
Cvxr0A/z89GPE/L72Ixw+HE83r9D3M9X8nsacW+nr7gf/+R9AWj/X4r7I1d8
9vAfOA8X+rPL4DsU9+OZvL8D/RxX3I/PTyg+vL3T4g0ST4f2Ob8V+j9Q3Pvz
muLe/1cV9/5w3Hi0s1dxr/OE4t7OfsV9uaYU9/rw+Bted7fi3n7POH+L4n4e
7XeKex047j1xr+cexb39NxX3OuxX3Ps5pbjXQa87xfFtud5yj+Len9cV9/NH
WxW/afgPzynu5yO4nyHu251eL+p12624122f4l5+vV7U+zmluNdNrxf1uun1
otjPyHko/v4ivgT6GTlP1Fd8HfQzzC+FfiYX/vP3F153l8F3KJ5CfyLXlY0r
Phv6E+Z/h35DrjsaKL4N+g3mi6DfYD4H+g3mO6DfKIVuE4rPhn6D+RroHypR
rt2KnwL9A/Ot0D8wfwT6B+bLoH+oRHn3KL4T+odKlHe/4rOhf6hEefl7lvg2
aO/MPwbtnfkCaO/Mr4P2zvxZaO+10GG34nOhvTNfCu29FjpMKT4b2jtzbO88
r7fymbeuf2Ca/wtCnuingY/HtwSeQF7p2n0kcP+bnq88DuB/Rw1ffOHz87/6
KN3X0rWfXxmc7PcN+/34sRPnfOPWk3cJ+/L8yuC1wem6afzOp/dtW3Uv51Ej
3m5HcrLTcyMh/ir633NXj+x75dGnNoXf9DzrNfkd/O+84Z+D88n+wK384wV7
D8Y1RfsD973NqydmXSn3mQzc++8875sfWvaK0G3g1r7vo9HB91K0n7kjPjjj
5qMu3yrsZ27Nnm+/9tNfPC36tcwtH7lyz4pnyB+Ov7Hm2f72g/uI0X7uLp18
fOeiJS8Jf3J31Tlzjl76h22iX+7Gs8L4AOlOft0F5/P4zxshXyTaieL5cN1+
o9Mq8DNt+FIoF8czfBB04HGh40A3spMInXn84Xi4Lzz+cA/cx4I53Hdq5/xd
g+WSPDU4jzu9Z8H0+k/2K8O+5KnBeZzqSWi/epwKr1sb15U8NTiPXy2Hfqlw
7efr8XD/m8cNVkM9GW/uc7ufkvM4w/LWepXGN0N9pnbXjS+HekvtuhsfCfWt
0/zfeqifvG7tcdCf160tBX3GG7+WAOf3PbyPPC6E/UPW6P1e8DNv+EVQLipv
6W4AHahcpftKaz8j67PO74l2KtHedT5NLK98TqUG53WwI6Cbzv+I5/fFfSEd
0vgO0IHHE+6H/oTuV9eoh5KnDT8E2jt9J3TjVdDP8DoHPF/ng8PySk5+RnF7
vYrE852eFx2H9Zz3meLzNGn4Sug/ef/p94HzPkp8/vI+yhOhfx5v7NH4Ffov
edLY2xDG3/C6mfHcl8/xouH43Of4t6eG8VK8biaeL7wvaSHoxusYjwWdk+b8
e1r1zIWfHG/wydZ+RvYn48312+ut5GnDP3F0OcX1kPcB3QTvXbwP6J7W+ly4
w1vrs7xubfCoKfevoLykW+nWQDvNG35Naz9fu2Wgj15Xhv7L55fOV4J2aqN+
8rwwlZM42qHz+8b58rnJ6xlQZ96PvxjuF7V3+Z4TMW+tb4kol443SP7R9ZGn
DT8mxIPyv7PGX2ynRcNHWv1/9/5AebuNv6iPjkOF58v7qONN+d8cx6C9nifu
zX8s+tk/V1I9pPIO3BvAk6Z8aIfOl/eX10Xf1/o+nIvne974eQlwKm8UXwac
54nWgn2qDx23vvV9o+NOgf6Qzs/dbvgu6DR+Pdxqv3DzW79T5H0kO2m8DN5P
uo2dE+D7heen8H0ma/Rof69L3Jx9Z95w1Xq5fn3g5gKn8wt3DNjhOLc3Qv/D
cZLbv+M67t7W76Pcfav1Pa0fr2p9T7bao+RJYw/LS7znFoZ4VlR++js+Z/U8
l/+t416SXeLXgH2e/1oL5Uoa3u6/7G91nCvknF8J/ZT9lY7vh3YS4f/A0E3H
ncPzpZ8c/6f9PmZudWs9yRy2C95vfgbcXx0/DfWU7708f7cOeM/wk+f1sJ/X
85ios4w7pOMg4flyHk3Px6EdyTOD6/k4vG7XuK7kqcF1PBz0R/Lc4IXB+f2/
3U/JU4N3Da7jzKD/kucGLwxeGpzXvSPvGzw1eNfgkcF1vBd/ZAbPDV4YvDR4
ZXDu55H3DZ4avGvwyOD8fESu47T4IzN4bvDC4KXBK4PXBtfzcei/5Dw+g1zP
x6EdyTOD83dZu33JU4PrOAx4Xclzg/M4Z7s/kqcG7xpcxzFAPyXPDV4YnMdR
2/2XPDV41+CRwXXcAH9kBs8NXhi8NLi1X6xv8NTgXYNHBqd+QHK9398fmcFz
gxcGLw1eGZzHFZGnBu8aPDI46SB5YnC9r98fel+/PwqDlwavDM7flci7Bo8M
zt8dyBOD6/37/igMXhq8MnhtcJ5nRB4ZnL8rkScGLwyu9++j/5LXBuf5iHY/
JU8Mrvfvoz+S1wbn+Y7260qu9++jfcuOfM/R+/f9wePAyFODdw0eGZznc9v9
lFzv3/eH3r/vj8LgpcErg9cG5+9B5F2DRwbncW/kicH1/n1/FAYvDV4ZvDY4
lUu+X0UG5/Eo5InBC4Pr/fvov+S1wXn8qt1/yXncqd1/yfX+ffRT8trg5I98
7+J5w3Z/JNf79/G6ln35/pMYXO/fx/PlewLPG7Zfdzw+bc1tv9/+IzleXbuT
gXN/9QHg/N3Rbmc8nt1qJ3MnAef3rlNa7Xcc2fkPT8Ni6Q==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnGe4FMXWhXumz5zpHk/3MHMwo4iIYs5ZQQUjJsAcrmLCHDEnDJiuooAY
AC+KiSQgZkBABBQUBDGB+SoiKuaAYPjW66r7fD/62TXVlbrCDmvvmjYnndft
3GIURZ0aoygWvTOLovai3atR9KJeXFmIoj31+5EkivYSHZ9G0cvKv1b5nfT7
QZV/Vr9bqHyu5wrlL26Kop3LUbSj3q+hek+rTi/l76K8yXkUXaz0GqJ3FV2e
9gstoqi30q2Vf1Ds8tR/RnU6i+4lOlXlry54HPR5gdLbKR01R9E66mdaLYq2
Knv8uX53b4iibnp21/Mf/d5D+S1Fn0zdzoNK91M7V4U219X45+h3a9H19cxT
uq3oQ4n72boSRc+r/f2U3kf0QM1ZB6UPEr1TZS8ruI/DVWcjfcO5oov0PTOV
30vz9L3aOVfvj1Ld4/TuDNV5W+97ik5TmQv17hJ9w65q71C9X6xnV7Vzkui+
KneR3p+mdlbVc4rSHZT3kcp/pnYvr0fRmmpjvp5r9W6cxvqY6h4u2jV33vmq
l1U9zs+1Rr8r73KlO4q+pHZaqZ3r1U4flXlA+TuoXl31T1V6a435P6r/tMZa
1ftD9O4a1TtPeZ+q7g+qe5nq/qXnEc1vrDKHqsycgsssVL03Cq7ztfJfVnp/
0ZGZ99mqKj+upHnT++tEX1HePSpzmH7fp/S9Sh+hdCo6WM/RSk/UmLqLHiC6
luoPVP7v+q5rNZ5hauMQ0ec1rq6U1ZgatMf20F4oiW6tvvur/FaizXo6KH8V
5U8qu88uoqnyBqnMUfqdKH2/0kcqPVVt9Sl4D5Rip/dVflelb+S7lH5eZe5U
+mn1/0zis7Knyn+tMc1kfrRnW1X9XSs05tn6xvuUPlzlXk2dPkjlVzZ5v81Q
vTVVfoDylytvPPtAY/paedNU7mTOrOgv+pazVaYiOlD9tlP+TSo/VeVXV/lv
VH5P7a+tOVOit6nMBkqfoD7HaQwnFPx7VObztrrK19RWD+Ufo7wpGkeD6pyt
db5O785X/nTRe5S3reotVjub6NsWaCyjat4v5xX87k/WVum9Rfsr//owb1PV
/t1KbyP6mur/V+lE9InMvGYNtT9Vba2iPs5Xv7+p3Lkqk4k+oGeF5j3R2j1b
dtudRO9W2W2UzkTHFj0nbfX7arV1gcpfwxlV+52UvoK9k5nvcGb3yX0WT1Xe
pfq9us5ATd/UmHl9NlReLz2rKr+F8lcTPTx2uW9V9wX1da7KzlN6gtKnKL23
0udHTtf19FB6b5V/Q/mPqMxJyvuvxnqe8i/Qt7fSuxPV5jqinZR/nNJrKt1T
37a70oOUrujpEPJfVjvD1M5OOR+tvS8ykzlT3sN6ToB3qO5uKn+fyt+vOXlU
+Scqv5j5jExXvwWlD1V6PX3fWip3gsqvLXp3xWdgoOhctbOK0vco3U39TSqY
t5Qzn9ELVHeW8scWzKP+o3JrqPxQ0cHqd5zyT+NMZT5PF7HHlPeknp76/aR+
r6v0Exr/HPU1UmM4QnXvgBeq/vN6N1J7eoLO+FWib6r8ano3g/2vdDv19avo
IJUdo7Knqs15ev+onlOVN1LvzhZ9jzFWXPcHffsPoqvqeVF1orr7mqsy76p8
k9LjNZ4lVc/9xlr3J0Q3Ul9jRD/SGp0Dj1U7v6nMlmrnGNEvqp7v9ip/jtJd
lN9bdKmeaoPPyEsa90mq2010uuZkmfraXu/HID/g58p7T3mfKH01vABZot87
6P2ZGt9C+KryZuv5Vfk7hfb3UF89Rf/U2G5UvYs1tsNU/rrI83q80ncofYXq
nYMsUju99XsL1flIv7cUfVnvvlJ6O6V/SyxHevGNaruVnjdV53S9n46M07s3
1e6doqeLrqa8j/Rcqd/HqK/bRC9Ve8cpfTuyR+l3VfdjlblKv49V/r9FL1P+
VurvE73bumrZ+FaQj6/p3e/K31n5b2gc73G+yj5Ld2k8+4iWMvPw50U/rPlM
3avy/fXcojL9RA/Uc5raeZP1rXntblfeDVXLmKdU9w6l+6h8X9ED9Byr8q+o
fJeq99F8pddDPqpMG9GrlH+W0j+xb/VMUZs7qJ1HtJfaJW5zrsb8rto/WWN+
VPkbIR+U/0TVa7BQbb6q5wmV2U10QZhnxtoyM58nvyGz7INn3q+6x+j9zNzf
eLPK3yV6vZ5r1E4r5aeZ5dglyvtaZ2anyDrYISp7A7IMfkd90atUtpXyluq5
IfIcfqJxXqzxnqlx91Peu/qOL9Tn5yrTN/KccI44i+yjxWEvTVKbB6hcUfy5
knq/vS66VM+3KtNStCl1G5elXpc11M4C0Sd0vtdS/geii/TuG5U/W/2fkLv8
lRrnt2r7z4LH3VP5A+DxmfWrbdXOW6ILVfcrlTlLdYtVl79MZX/R99yidVuI
LoYMinyOfix6bPxeiN4jeqHoB8pfovzr9fvk3PPwlvL/pX5+Vf4Q/T4aXlLw
Xp9d93kYqfn7Q+V/Qi7k5uU/FrzXz9HvQchF9Cilf2bOlV47df7lyMOi63Jm
Is4hZ4G9l7rPt0W/VpmVBY+J8/qH0kOV/kZrfbB+d1S9JUofGHR1+Ov3em5V
mUVll71I9BO19ZfyLy6bf/xe8Hn+UvVWKH2X0r+qnW5BLvdSuQeV95HqLal5
DJdobJugp+h5AJ6Qen7WhW+gPxZdZ1Pl5UX3fYPqJErvWDVvi/Q8JHK98stK
d1b+D6J/F7zGDVWnr9D7SzSGYeg/2qO3524f/nANspU2NJ+N+l1A18f+yP0t
8LT3tEYflc3b36x7LsbWvD/YJ/DYi/S9eyp9gdpfpt9rNli3vEP7cmflfyM6
ILVOc7foQD0D0F9FX1R796K/Kr2lZMAk7bdG9bN+2Xu7UW3+VPS3D448d8wh
/H+hyn2sck+pr3/nnit4+xZ6X1T64bB/2EvbINNy7z10PHhkXc9YdGbkq9J3
6v17vNO6/oVswh7T+xvL7mcMskB029TrdkHZc/ME+1D0jbrPwxjWWe01Fz3v
r+n38fqOu/R+GbxAY1g18l5n326rvj5UmxX4uehslT9A5XsjY2Pnj0J3VPkW
St8huk3qvK4q97x+H4wtoHW8KnHbN2hNrtJYxil9nPIqVY+nP2tb9Peyf2L2
R5C5f3Hm0VVEFyvv8ti8CR0b3X4d+LrGdIV+/1drtYGemWXrgX802RZA316o
9Z6rth8WbVaZjSrm+YP0rp/anC1aV/57ZZ/rtZV+XenhKtNJ3zUBWacxz695
T92vPltktg3RA7EHsAvWRv7WbT9srjE/o9/raLz/UXrjzOvFXP2i8n0L1tW7
am8eqme5xvGz8m8v2LZ6V7r+qyr/nuhOeloqvbPoBSWfkYdEW+s71lL7e2mM
j4dv5FtHqf7jam80PF7fsnvFMrRz2XLjRZVfreq+6HMqPJG1E30Wnq/88fqG
pTWPk/EOLDqN3jkltQzaW+W/b7JN/bi+r1lt3qr8H5t8nm4rWK9tWXX6J+VP
QWdQehPRDZGPGud4dKfcZ/YL5d2o9JMhfxdsPrU1R+200rccp2/5Q+P6U3nr
F30eDkk9V6dqzJ8VbY8gt+Zn3q/YC3cX/b3oyi+r/NHYGKLbqsx4lXlKZV6E
7+ubTq9bH+ip9u5Wele9a6Pym6rsY/r9jsqM1vvBufnJh8p/XPnvlq0Db8K5
V/4szqq++TutySzRIvpO0TbeJJV/XO23VRt/RObz2JzYddhzG1YsR+E5o1lT
lT9a5eepr6rmoW1iG3NibqwDW++LJmMj1aAzYK/VlZ5YNyaCXtFPz7boZ5nP
WZeidYu1RbdR/kSll6TO31Xfc0vu/DdVvnPs/bY1spZ+Rd/BJqiZxx0tOkJ9
faJ6T9dsk6PXTVTfw3Kv5ccq/07gw/Djz/QcwDyJLit7D/cVXYK8RO6gj+TW
VVdX3ZFFrwW62jdl74s7RHfRd7ZW/iZgJs22eS5QeqLyuuo5GN6rOTlb/cwU
/VLP9pHxqx7KO17ppkbzImTZ5sit3HS45uMlPUcp/yzRi1X+SRX7XnRXrdOR
RZ8d8InuRet5X6bud/+y121kZF56T9GyuJt+l2PXpe/XNW/zVPYi9MSKbZ/D
RIfrux5RegR7WO9+4TxpXE3BnolVr6L3FwZ5hE6MbtxDZV/TuzfU5oVK/93k
OeDcrcDGK1pvHKoxra1xt0itG6GPoDMuDrri+nq+4pspD5aoObpPZaaLXlm2
vPpa+a+p/V6ajxvKtiXQQTLlj1d+3GhMYzZ8T2V+1vu+6IIqU8iNYX7HtCt9
acl7sJXqfMQeUP8rc9t12Hd3ggco3Ub5f4ou1zOkaJvo04LTaxTMPxgz836a
5uF69f1Zs889tvSJQTd7CB0lN24Kvrln5DMEzrgyMu5Iei/2D3u2aJyiX2o8
bnBiTJS6KyKvw9CwFuif2A7M7+/q40tsH9GjYuOEaxWsZ1Keb8QWvLRoOTFE
7bfgfKn9QUpXObOJ5QG8bqFoprKXFK3vIisfLHpOTsyNLaJv75YYw/slsU5H
GXRQ7LBWwV4An+mr/F9Fj68ZE4Mv3Rj0jWO1zyarrXUK5nvPgmdpne6AByk9
X2PZKrW+hi6OHo4uhq7fTnR6xTJuhmieWda8U7PtvIHeX45dXzb2O7NiXZ52
Nix4zpYq3VZ0/8R5G6qvf6l+o/LLddsZ9IVNsWpu3Oohtf1xzbjFGpntke9U
Zr/Eeihp9NIV6Gfqd2XVmBTYFPYFNjtjv1LtjdI3ztQ3Xiu6WOPcX+WnVmyj
oMdzZrC7GeOlQR8kn2+bCO6H/Vi1fJyg/BGZeQO8qaB3kzLb3qdwdlNjTW+A
e6u/4Zrny0VfBrtSv0Mq1gkvV91FohnyTekXI687Z3Zz5e8ebNIFQS/+JszP
abnHDVYAXwXXfUt0dT1/oSOBseXGbJaJbhobA2ROb9O7L0V/FN0vt50P1t0l
N55wlOiLmfc1+/zw3LZlz2DTMYZ99V1HKP8d5R+Jfpt6fbFPwR3Zh2CPYF2c
0ybRV1X/pthn/3I9GxVsI/ysvHtj4/LHlo23L0mMD8wWvUh743jlX6z8pYn3
CHuFdQXzO7loHe6i3HwOPtAHXU3pM6peQ+aKdbw6994rsU/ER77QeJepny+r
xvROrRrLhT/8nBunZ607Bh0AWdm7yfwK/eRfoiNTy+J9U2O7YLz4dQ7SWAfC
bzT26yvmezeIdkl8to5U+kvtiz5Kr9boPcfeK1Rt93Fm+N0t4FTfqf1cv48r
Go+4S+U342zVjOOCk1Dud/3eF+yv2TIc3g6PB1PENsRGvDnYiuWqbVZsQuxB
7ETsUNp9X+28rbH+G10J+Va0/2OR8hco/zbl9ygb11qp3weqT5xa4F1J7DTf
Bm4FftW1YqwBDOF3lT+xbKxieWLewfoM0/sfwXQDZjg76PaDRX8Ccw2YzCz9
vhNMtWobkD3/GHpVat6N/V4DV1J6qdYr0VhvVbp9Zj2INPLp/WBH9wp+FmRF
VWOpaO6+ASvRtzYnlglDEuMM4MCt1cYJZeNnOybG78Hxf448x8gjbLlzQz66
IPYpfGJMYt0cXRY99gP18bHyLtUYV2dtisYbE3Azpb/Lbc+CgR8oep/aaVS5
F/GjFYIuElkvps1iwT4QdH30fPQUyjQUrPuTHxcs754JsvLm1Dx268R6MbrB
uWXb748WfV6wfUlj/6bIYs5Vbl2GND4k1o913CC1P4oz2i7IwBuLxoTRw9DH
dknN278EP1B7q+j9Y3pGh28nzf6sYKuzh5usm9+v9Hllr+/zRcsIfJ0vKL2m
yt5UNB8G/7yo4DI7KF3Smr4D/6rZj/pc0To72Dy4DJhMU+I17Bf8lczPamCI
qcvjh8X3Sr06+pfGcL/qDxV9VvmVgnHF7urjao13abPxcTA6MO99Va6l0vth
EyXWcRpT6zz46pDxHVV+Y5UZULHvbmHQhdqovxL7R+2Pw9+qMn8wrrL5+19K
v42fKDbuBP6BL486e+h3o/L3FN0LrFXpTsGeYi+yZ1blO/V7XOo9wh5in6yd
m7ZOjKN+qHcdlN5M9d8vWk6tn3tPjsu819iX7Ld1c9PRyt8p8f4upbbvwRt/
Tu3/5RwUgp8Lf9Ehwa59KZwR/Hqk11MbL6TW4/CN4y/73xgPS4yPfJpaxwC3
el/pQwLW80FqvyffulZu3zXpsYl9fDOKntvJjK9o+3pqyXL/AWw/je3TojEf
7GPkPrr43+zn2H6p4fquDZVekXoOpodzB6bLvKGn4V/739zsnRhnnK/y09X+
+vgM6pbVjAe/2qTU7eBLXZBap38rtS0+uWjbHHwUPRUd9d2Qvj7YyPOV3iyx
nwl+gG92NPpC0froy+p3VtG4Bz4ryuO3AjvHp7qtvush5c8tWufDhiK9id63
UZ03ivZbMf7Xi8ZzWKNpSk8QPVhzsllsH1b7qn1V+Kyu0e9lyr9W9Omq9WAw
t1f4zqL9tfBGeOy8qv3CzHOCHqS+31L6bHxBVX8L/sHtiYuIjS3M0O8z9X49
ncF24Jmq92TmMU9T20Xlb5oE3STxecTfMzu1ro4fa3Bqfosv/P5gWz2Arp5a
t8ev9kBqnjYcnTC1PoB9O0p0k6rxY3wvyJHxyh+bms/gHx2T2o57UPTPuuXR
MHiafj8GHqT046ll7zthvThH+G9mhfYXKb1p1bETrC9+Reb5beVvXPU5Bfuf
U/ceeFP5M1L7QLDZz2wy334Y3p76nE9R+rnU++SdIPfxteKjIQYA3QQdBVwa
rIl9uG7iupzHJ0Un4HNV+mL1v3Nuf+t08AM9j7G/0VUz+7jxdXet2RYbpLz9
i8ZZ2gV5jFx+QPkfZcYcwGwO1DODvSDaObfPF98fNhx2IDIbfnifxnJd3foI
esnCwA85N/hsC80+81/VjAWACcwpOb6AOAPiZq4PafzmQwu2+bH3P1f9jvr9
eG6+ii2CPwQ8gDJgZMsK7hdd6IPMmNKg3BgS38j3N+UeL3vkMI3jGq3Jkmbj
5cwzeiD6JrgYNvMvIQ0+hs8OmwA/Er65j9FXE/OrzvgO6+Yz1FtL79fMrYdg
v+Aj+Fzl99H7I6swYWOA0zLr0ujUL2hPHqRX+5bNS9Grt+CMBl0KbAk9Oo4d
h4BsRT6Cg+ETQKdEnzw9t96ObxE+xtjxTU0om4/uV7Z8XlK0bwUbCF8X4/gt
pNEdz9C7u5DfifHm5UVjzsPQn5Q3FDncYF9wpnJPZ963+Bg3zS3viDWC77VR
+RvqlpPEviAr+xTtF8cnTnzLq0XLNbBS0mCvF1bN046C5paVxCzBi4gh2T43
zkQcALyUmJPXiuY/S0o+F31KjiuhX/C1sZn7R85vl1vXx5e6QdWyZMvcbROz
gqxlf9ImexIbC0wEXjYwlEFffC7zHFB3SmY9Bz8/vmbsXfxp+Cv+KNpOeFBz
8aTW4fGa8RJwE84e/l/WEJsDXxVz3i2x7fBL0fbDx6nT+KSwIVh3dGv847z/
PLc/4mdkOnI88zwfXTUGDBaMHdVS9K+ifQy35ZYLTwdfCrgeuuOQzOeFc/N6
9v84XxTKsB9WD7ExxMgwn6xxu6oxRr4X7BRMmL7AP1uHMYCVfF3wOcJ/j14B
Lrortm3i835+4viLU4ohviTxuT66YkyJuLT+orPKts0nVGw3wUeJI1slt06L
jcm+wh+MDXN/xbprQ2pfxKGx5SUxCHmD9SdiIbIG++uJc2hqsH8fX0q32LEd
2IDYiPiuv0rMJydWHLeGjkkcGXFxxIkRQ3ZKwXo8OnynEM/zQmIsE0zgANVt
WXH7Gyg/VXqX2LEoeW6dGdxpi9xnE7/JvRXrTnFqHb6jbNwnQgwVMvx8MNHM
3w1uQawUdtVlVceu4K/BbwPeha8XvoMvCD2A+sQ6IX/OKDtOBvk+OXH8DNgY
flrOKHPIu0vU91Bi3EQ3arRs+VC/t6k4hqy5Yp4B7+ihd1uENOcHmw/bD/8y
WAFrQRwFsWDURU9CN2Fs+PvBBcEHr1O6c4MxH7CeY8qOp/glNQ/pHjtuZ5vE
POE90fUrlnGnJY59xC8wXPTVmn3XxGvMUd+H6/2iuvccew+/Cb52sA70CbBK
dBV0Fs40/gFiQXcsGzMfxjoW7bt5IbLP7jTVfTF3zMkC5jp1HAsys57ap31F
7Ng4YurgMcRncQY5r/g6/04cP9OcGrcGI/pDeQc12Pd3IfKw0emy6Coaf0ds
/IrjhpgT7MWfUuMAfZR/m9Kt1Hdn0VfLjnECm3ilbHzsi8QxY0fEjrXoGOYf
DOuVms8EcU/fp7a/bqw47osz/GPiOFfiXZ9V+jFwdqUfzRwj8QXyQvS1svG0
3qq7l56+sWOQiENjzTdU3U1in2VkBLF0yGx0++U18wni0YhhOyx2/NXwzDIX
2btVYn74buK4JrCt6/BxJrYD0UuJT8P+PjCxz/nogEXcXHf8IvreBrmxXzBg
+Aj8BIxildRrCt5STT03u+NrKxhnBqPZVOuxs2h70Ra54wyJN/yh7rkmDrZl
sPmPqNo2xXbFPiUG7B97SOdrjuqPUHqu6BV1Y0PYyPjhiQX9Gt0zdozrryr3
jcq8jv6tMfdPjNGjJ1+YGhdEz8e3gX2D7UmcGHbD93WfLc7YB2pvh5DmrIEP
tVd6BGtcc6zQaJX/Gb5WsF8Gn8ymKjOZ81M2BrBHYsxp4wbHpOGD3azBMVfg
eN/p94cqs1pqLJ3y+HfAt2bVraegr6C3fKp3EwuOj5pZ8rl4SfRWzeH2qr+y
bpnTOsg+cGywQeJiluMjiYwfgHttDl6tMrXUmD863orEMVrE6aFjomtyVpGb
xA98Jvq1+piVGKtfJ3dsEjFKnDtwXbC7z6VrXkycisr8pPJbsndrjiM4PrYN
Az5KGl9Of9XdX2s7lnjmumXMJyp/U90+M3AG4icpu6Z+31oxJn9zxTEQxELg
T++j8qMrjhvcEh+b5uZptXlr3T45YsCY7+9j+8PAydctOl7h6LLn50e1/3Ts
NvnmPWPLC2QAMVzEzFGuOTM+un/VcRWUZTw3VYw5sR7EtcJnshZub2Vo88e6
Zfnp4A0tjEWTJoYZflZV3nNqZ3ut0bPwAz3Hqu75ZfstwNaYn8Wa5/nKG1Fz
XDTt0N61qffstIrPDGfnDdH1csfnE6e/VGMYr7rH4u/LHZNAbEKHEGsPTx+h
+m0aLC+ITzkmtszYqWwM7NHE52OHcF7WqLjMXsofltk/gO/lf2eJPohf5lvA
3ZCV8P/hyITY54ezk6nuKVq7gfquh+rGkrDXemkt+yn/GdGbcvuc8X1z7jn/
7SPjX/CPXVWnU2ZfMPED+KjxVaMHXKb6jxEb0eS4lb1ix6mcWXUanJ+ynUJ5
4ucPVLqa2C+D3CYWct2gT4AFEY+CHQUeyL0BxgMvIg6HuNNbU/t94AmH1xzv
hH75aOpYmmGR46Dap8ZGwZ2IM6XfjSPL0i4hfaPK791o23ZAbP4Cb7klNd6L
LY9+jJ6Mzx0MG38wcWnXoJNX7NvCpsT+xK68uu54PnC8q+qO4QYHeDszLyFG
4Evtt0s1Z6eAKandHTSGjqKfl3zXYHLJdz4Ojn3vg/ljHlmnD3PLC+Lo4J+8
I3a7K/p6bIyO+EnihIlrfSkx/tmePVYx34P/FSr2026eOAaY+xHE5HyhsT2I
bZk57g2bAfwBfBA9d+fE+xPdi/jr48qOH0CXQJdFp0WOnJQ6ngisB/7UIfCr
M4J+2Ca1nwtdjDhc4rHZD3sm1hE6Bj0NfxaYWQ+NcbXMWDV3JdC7GMuVmsMR
seUBsgD/2j8xtjXfxQCzXydzfDy4P36lbhXLGmROx8yxJKzFj0H34A5Jx9w+
L+6afCfaTu2vGfY2vOx00avLtovAl4i/qgdcCP8g+iSx833KtqPAnW4ueWw9
S46vIAbjmIrjl+Cfpbq/k+8lvoKYNHjqPuBEqWV6ObXuhp7P+PCh4Pv9SLR7
bh/O3Lp9hczzaWpvsL7525JjSDYJNhU+lL1T94u/lRhn8Epk+UlljwE9pEvF
d3aWJfZFgpWum9n/eCfrAt7OPKv9zsp/q8nzxP6ZmtjGRwdb0ORYtS4Bazkt
9rwjA8GgdlE/hbrztwNzLvssvJzYFscmxw7nbs4ekeOdiK3izM1IrC+fEnRm
dGLk7V+J47jIPyaxDocuhz+FOPPH4XuJ75Zgw4MljizYxsdOI5bt7NjxQuhB
4GNzRL/LHINHLB44HHgcGGBUsX3SoeLYyJ6xY565ZwG/OVzp4QX7BZF5xEvD
L4nvWy03n8PGH6X8K2NjvN30e5Lm9p6aY67gAfDsW5tsJxAb0AGsRjxkXJPv
fSCbbkodQ4YdSxwm+uw1sTEj7pGhb5yS+g4XWNqpSh+qPsaor9tqvg8GzgDe
CHZLfBEyIKsYXyJmjzs16KI92EcVj415xgcD1gTms0fZ/lrsbvxTxCA8RzxX
yft/Xsn30cAGn0ltq6LvT6v7vhAYDrgw8eT467pnth03Czb4cyHujvg7bIot
VeeWumO3/sEr646dB+tHP8MXgHzjbhy2M/YhvoJdc+8HYsW3zb1G3MXZSmUu
xX6pOCYYf+wOqWOgiQ3ZLjWuA74D/jMlsR2MPT4zMdYEJs+YwQ6weY8o2+8G
Rv1dzbyFO4bEOSNbNhcdqLV8qdH+vsPLxprBvbF92WM9IuPjYEv4Ec6r2s75
qsn2Knbrtoljyon5wOfyWmK7GZ7PnSBiAvArcWeK752f+M4XsVYTEt8f47vA
YLEBsf/gv2Bf4NXg1vSLnCK2gXtD7GH2MrYY2C+x8vjO8NWvnfiMMM/EYBCr
zz0F7it8H+Q99wWR+RsFPQS+AH8g5oB4L2I7iCWuZsbwsE3wuyEnuWeJ3so+
B7eclTlmNm+2zYbthk/3ONWpa27vEv01tR6P7U+MIrGgyGLWBX/REORL2TJg
84rvKGL7ELfMfQTqov9jXzL/4CZ71BxbeDA6Zmq7D92MexPcqUHXBbcGv+bs
HVI2fo+M7pNad71X6ZWpbTrub9Yqnlt0J+YKH+NQjeF2rdHxJfsL+uaWF4vD
vkX+Iodnxbavsbl+Tx0bVkrM+9HdiW9ZWDNv66U258fW0dHPb2myzkQ80rxw
ZpeJXtdk/g0eAhYAJoDOPxj/gvIm1I0HEs/FHdg4cTz08sCviGtdK3F5/Av4
GS6pG0foiU+hZB47smQbBAyMOeHu0upBv+V+CW0iVwbG9l2OCnWo+37J8UQH
BJ25f2yfL/OAvrdqKD8j2CzYLuuVLb+YH3zb4IHctbsizBXzC/YOFjE6cbwk
8SfETBIjTnxBrm98KTO2TzzdgyGumPhi/OvgosTng82Cxe8kunNqLBf89oHE
+C4+buISsRG+Cj4adLaa8nZMjcHCi7hL2Un5Dyf26+PfJxaLOC/ixoitGaD5
XV6yXkQsNvjEGqltMvQZcLzfmoy3cA+UGAdiUfgeYibBSc7C3m/03bNao2Mv
wHu5R9w96KXop71y35Xg7gCxHtgvYJcHFS2b6IO7t/jd8K28gm8MvbxmXzwx
NW11Zv9Mw5kCX8o8RmKI8E0gz55IfCY5m9wdOCk3LkRM/smpZRxzcl5uvsqd
kp0rvhv4Cvw5c7zT5cEXBj+BrxBXQJzi0MR3JdkDbSPjA9gg3IHDR4R8wU8E
n/lf/A5xJeiZYK/j1ddWDY5tQ49Bn5mW+F41Pl1kA7Y/mN9XdduV2ILL67b7
uC++iubhJf3eOPEdxpfL1k/eDJgYZ2hK3fIbXoJfDR84vnD8SdztBTOeXvcZ
PzdyfD0YL3EZf9cdi45P+GGldwzx8MTFYz/iT+MeJTzzn7ihzFjWC9pLtwe/
8Ogwnr+arF9wVxrMF1mH75yYGGQjfh3ijLEXOOPfouMGnRDMDfkwVWOYlFju
cE8EG5dYROzctIXvv3APJgm2GLGg81Tn7bLvOm3ebJu/FOaMOUYOb9ZsOxx9
gPs1xK5yt4j7hdg4D8LrCt5XfAO+UnymxDbcXTLPfLJk/xCydUrJceJJkPlg
APBJ+CVrhE/hsLJjFMDbp5ccM0Csz1OJ4xuIc8A/i1wmJg//L3FIrBv3z4+o
OVaNO49gP+h76H3EqqJvbpEYEwEbGZI7zhNeAa7QPmCGGzca4+ka7kFwj5++
0BvAesF/kRPTA94C7kI85MENxj26hHv93O/fp8H574O11e1feb1mXx4+6z+b
jKOBpy0tWS9HPx+X+D45mAh33/o0Oc4L3Jj7C5OK/r+Cd9Xm5IrjTrlDgb8b
3zUYGPIROblv8HsSxwO+g6zMRQdkvt/8bN39dA/4y/yAH4IjTgzx8MTFTw62
9uKSfV5gxdwLBIPFDiKW4KGyYzL/FF1Z9l7lDgNxw+hC6JrY3W1j/0cBevsG
Db6Hy35E3wQXxOfO+CuZ4+SRBQcn9gMSIxaLflK3H2ue5uG63HueOFx8Cvi5
uAeAjjpXZWbUHb/I3sAnjb7KPYCZdcckgxtjJ8ZF8zfKbZa6zU1Frw5YCrrr
UWr3qdh3NLhH9kjR/1fA3UvuYHLPBXk7PMjcRcHWRufZJ+wF9t+vie1v/mMB
vxr+NWLI2jW6zL9Lrjci1D0gYF3IZe6OEld4X8AtFoUy1wReDc9Gf4AvXZn4
3iJxEcRHzK86XoWY/BV1+wPOyex7+CdGN3GcCvEq5HPPmfvOxPx/GxvHBMPE
F9AJPabZmO7IMAbmb1TsOcRPAT70eeJ7NJzH/4Y4B/Rx7rKDMY6LPc/EveC3
5F4GcRH4rtfMrIO8EfQQfHj48oih5b4M9itninV5W3N3f8262IiAb8Dz4H3I
M2JB0cfBRbirNiYyzkmMK/J0YzAW/Z7CPg/yEd1kft14z8KwpsTtYONj66+f
Wna3CXXvjh23yjfz7dwNrzb6W77QmvYGixPtVzPOAzYNvoxuNSDgaeie/cP3
NlWsb3CPflDA0sHU/8isy2HfgVPhJ2A9uHdMfBOx7aun9pWDEeWNjlvOGu2H
BZsC6+Fu83miJ2fG8wYEHY//xeDuCOcH/Qk9ivsd3N/iDO5W8ZrcGcY5O/a3
U3fPBsc1gQtzR5pYV2Jf0TffDGVYI/Rm3nG/rXfkWFrsgwUhn3OE/spefzSk
J4e1YY2Iu2sVyrP31kmNhRJXRj/9Ql/4T+4K48R2Yu8R2879redi3ynAv4vc
2SGxzGRPDgo6ydjYsZrcUSWmaXjd3zowtI9eiH4I/gzGyf4nLpr73sQzD9G3
P1U3f8TGQX+Dn71VN4bDfxuMFW1bMW7AXa8OKrMIrLXm9KuReR13GNHV27HW
+j1Ye+mgmmN4sC/A525JHMs7JuiBxCk0Nluva4VcbHYMDxgz2BExwk2x786M
rDtmi3hsZAR6Gb5xeOxsjefemmNmkH3EIYPTcofy47rtPGLgORt9OWsln198
1j1i/x8F8T6sEbp+f5UZgu0heljBeuk/tkSjMYTGRsfgEotLrD54y4Wx/38D
XRT/4QL1Oy3cA+I+EHey8UHgi+CuDRgMeDx3M7F7wNWwN4/Ef1Xz/Q30fe6U
YmtxpviPEu4ZrRJ7vloHngxvvqnku+G/lXxfCD3nsKpjaImzeKDquwl8B9ge
53p22Ce9Q+w9911HBJuRfYvtQ+xSg9ZlTPBr499ep9G25mXhPhp7gz2C7xYf
Lv477oBQhrtOxMYwD2flvh86NzLGiP6wQm3MEX0ot03KnTbskjmxY/q5/8//
ABDTS2w/fHyj1OdubjiDnKFZ4RyBEcM/+K8SYhRfjf1fLtylJYaQWMJRQQ9E
HwRbvy5yrD13Qjnvv1ftt3w0nOv1Gi3j2jTa3wZfJPYLXnJf4Cf85ww2xIDE
9zW439I2tZ8ePSpKvQasBffX5hbC/whh9zZ6f7ZstHx+LPQLPntD5Ltp2GLg
VK2VfiZgGeCQxIpwx4Q7HbsFHkjsFngIvkt8mPgTyw2OeQYv/+e/TSLHACCL
kPn/B8GSxeA=
          "]], Polygon3DBox[CompressedData["
1:eJwtnAn8FdP7x++d+733ztzuzHS/X1lDUQjZsvtZS5YoSnY/ypJ9Fy0ihbKE
ylaRsiVLCVlT2lQUyVIhy0+E7KJN/p/3/zOv13de3/PMOXPmzMw5z/k8n+d5
bvPul3W+NMjlcgvrcjn95T6NcrnfdGKYyhup/JmOPySPlLyVyv+Uc7kVKld0
NFe5Yy2XG6Ty+cVcbmjN7f/K53KtdHQKc7mVqfpTeWsd0+Jcbl/JifrbSfI8
yQvV/muVm+s4XO03U8cHFXK5ZpLbSn5O9Weq/KfuUaU/3WOV5C11vtiQyzXS
8Q/jUv1Y9bef+k/V/85q847kW1Q3QPLhqp+s8XbVuVYq767yS/W53Inqb5bG
PqWay32nvvbW9f/o2pY6ZqltOx0L1P5JtXlYbf+X5HLPSl6m6xfr+valXG6N
5IN1HKHyStXfrPv1kHyMysO5v/raIHmYynuq/x9UP1ryNar/ScctkvtIbqvy
YLUZJPkhyW1U3kvtf5L8iOSetNcYLlV/w/Quwgb3t1bytjpmaKw3Su6g93ee
5ELi69ep3ELHTNV31LG5+tpG439B4z9W8maSm0n+Vv0FOneU7tdN995Zcn/V
j1D95aqvlzxL/yfoG7XSZFmtvi/Vsb3u95fa3Ku2X2t8T6ncl3mjvi7Rub6S
z9R1ayUPkby95Il6n7eqbTP1eaH6O1r3fEPjPUdt5qq+v77HCtX9rDZbq669
+qtIXqbrX1f9tbp+jOqe1DU7Br7mG9X9qft8xv1VP099RLruf3r2G3Tub72z
y3UcLHkx41Xb99XHHJU7qd2XundRx1bMF8mtdb8tdEzU+HbW867Rs65X+8l6
3lN1rqnqajo2Ubmrzl2j+h0kPyD5P5LPltxbR1uVd9c9F2p826p+oOo30rkj
VDdS498i8DPxbFvreFjlJRrbexrLCNVvrvrXdO4z1R2ua9vreF391UveWP0d
JHkX9VeQvInkiyRfrvarNdZNJXdRX2dLXiN5vsonqv5DXX+C+t5aY7hT5eNY
3yo/q/czWHJHya+p7TOSB0k+VvKrkmdIHi35DMlTyz4od9P7nqb3/a2ONpI3
UbuxGv/v+r9A7S/Tua9V3kj3vEry3pKHa7yzdG6M5P9Knqa+LtbYLtDzzta5
laq7Sm0Gqu4c1b2r/r7UM5wn+VZ9nzWSz1f9NZLPUP3vkk/Q9e/n/fxdVJ6k
Zzpb7yZSnwN170DHuarfQfV36dovi14r6IQvVP5H4z9a5e1178fV37a6/i7V
H8+aUflJnd9P5Z201l9W2/U6jpLcUucfU/s8czjvOc5c31XyPZI7S35Z8v0a
972Su0qeojGfFru/A1T+XtdX1f4S1e+hc6Nir3PWewvJt6n8mo5hfDvJb+ia
fyXfrPIKjf2NqtcJ6+VNnfuWd6bzu6j9o6xhle9Q/xNU/lJ1T+l+t0t+jmeX
vETy3ro+DjwHr2LNS/4x72/wj+61u97BSslDJe+mcoPqf8p7DIwl1bm+ktdJ
fljj76b+71L5A/U1T/3/qPoRqg91TFL9INU30v2eUZtFPK/kjSRPlPyu5F56
Jr3q3Aka+/Mq/1Dz+3tD98prbrdTf40K1jk36drfdc0Jeeu021RurfGVA+uw
LVRuovZ3qD7QMV71G9TnWer7Lf3/Xv21UpuC2t+r9sfqHpuqfWfJdWr/rNo3
lnyM5PWqfwRdpvZ5ycMld1D7v9VPF5Vf1/NO1/NuovZD0MU6nlb7czTGFSrf
zfeXfJHkB1T+WO2fUPuLJT8o+RPJT0oep/6fivxOeDfv6vlfVf1hOve56v/V
8UTo/eUx9fed7r+nymN07nXVNdYzNdE6aK13dIrGco6uO1Z9tVObl3SPv9S+
LWW1n6H256q+o+qP1LlXVL+y6vnJvH9D9V+pPgg8p07QuQYdEyLPWebutIr1
5xRds1zXJ7p/Ved2VP1cje9Yjf9U1Z2td36nyufq3JWST1XbFg3eE9kbl0r+
QPfbWn3/rWuHsP+r/GHk/f9O5ovKrXTNCPV/oJ7vHD3fjpJHSj6YPTD1PsZ+
1hJ9H3qP2Uvl58ree55W/Taqb8N8AIvo3AA9cxO1OVf3/5/kO9V2vuTz6o0P
flX7MZKvU19PgX/0LG/qmuVqu173+Fh9XaX603Xd5onn2pY6n1P9rrp+ma7f
QufOU93Bun4jVe2jSd6/5ve7TvVjdW6HyJikX9XzEayyQWN4XOdzYAZdv5rx
F9xHQff4R/WP6NwPWf//Ub/bqn5b1R+o8kjVnaFrU9WPUPkEjedn9gaVR+na
h/R/oOobq35U5D2tHn0Ueq/boHM7qr/26DP2EtWvUnmdzo/W9S/r/1Rdfyjr
I3T7nQrGZ+C0sToe1bFBffZKPCeZmyezv2gu7KxzVdXtpGuDBu9p6M4DK97r
aF9T/W6h5/YWkufqfkeozVq9py0lv5vN33WSN4uNxVI9+5Ca8eGawDoQXQge
/SuwDkQXMr+WS94mw5jdVX+Axtdf9Ueqvo3kbzI8fGniPZ69fjBrXvf6W3Oh
jeRZuv6voucga31R2XNzD8lfZfrokiTDv5LvkBxGnsPM5dvQ7+rvPp07XvV5
9XdvZP37peSmks/X9UfruVqp/UHoH5VPrRlL3qp7D1N5qK7plTdGvScyXjtW
7feR3FXlg3XUFbzGWeu88+mR9zy+xaGqL6l+ot73Lfq++0j+U/cfr/YDwC76
LoeqfpTkzVU+VfW7Su4muZ3qe0g+pOA9oCt4I/QcuV79b5F4TbwkuU/ea+US
td9Xp5/X+3pE9yur7ivV9dO5/4TWp9N0/8Mkr6r62jckH8J+o/pj9Mwj9Oyv
qe4b9d1D7/DqbC32VH8flIwF0KGLVJ6pe54s+UzJ+6k8izkp+SzJ+6vcVveL
NP4N6vt6XT+r5rnVoGdNwcO6/wdqH2NvqM29YEW1L0seXvH7ObNg/Yce3KCx
nSX5MdYH8yO2rjhN4/tN/W+pNt0K3q+bqnyyxrBY1w7g+6p8ko5PJN+EPlD5
yth1Z+v6d+ptP52u62/XuYrKLTX+RRpfomv2VPv3NcZxKndX/VvoWMnPSD5H
8gzJH9eMxS5i31d/i2t+NxdLXin57NhY7mS1vVryQl0/Pm98Ob1sPDlf92vE
Gk6sP8DGp4AnY+Ph7pKfBmOBhzXGHgXbWD/p+tm6XyeVJ6nft9T/drHn2imS
n673fjwj8J7F3vWB6vfQvWL184zqn4m9V7+g9o/We302kXx/xdi8pf5fVLB+
7xsaD0zJ9NWf6u9DjeFh9C7PpPH3U/2VBePD61X+o+br6adB/c1T28W6/nrV
/wEm0Zy6omAb61l931a65iP2S9XdqvHsoP+VvPfATmXjy/cD6zzWW0nXX6vr
L5dcp/Jc9f9JYBtqUGT7rmfBa4S1ckvVe9v2ajtJ5QfV5gFdW9LxALpXbZbq
+gN03766/wDJfQrGuC+CjyR/qvrN1P6sxPsTe8c9qt8l9RplrbLmwC+LWNOB
9+wDVd5O/UZ5f+ON2edDf3vW1Fu6/zjJA8HPqt9D9UfomY8BK+ZsT7QtG4vc
mLd9vlXo/RKbZDI2aOh3w5qcIfln3fPWwO/iWj1P69BrD52TZ98H30qek633
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
sqJ1Keu/s77XY/pe41Jz9I0iPzPPTn9JZH/klYl1Nrp7jeqvhotQ/c4Zxx41
Nh7tGJrfYL6CJ48JvSf2Tcx3/6prt8ob36F/8VXAwY7N3h9cOjYRtlGPxP4H
OJjD0CeJdTecI/6j1fChof1J31eN78FvvbFHEvsc8T3iY8XXepSOc3PmOH9M
rD+w3bEpsS3xKWHXYN/gy+0eW7eAgcHC7Ddgwd3gDBP70PClTc+bH+T9sje1
V/0riX06+HY6wIkn3j+w3ZHfTLznsfehc1epvEPsuQGngT8E/LxXZP/IL/A3
6OOyfTDwf9gw1xX9zDz7udwzb44Q/wwcBlwGnDP2PPzGhWX7INYkXh9g5WtU
/1Viny2+W+SvJV8d27eDTYltyfp6TvK1kpcntimwLfAZgefxweGLO1/yh4k5
LbgtOAO4A/yP3crWYc+mXiOsFTDr2tS4CHyEP2e+yuV625LMMebabpH5O3i8
Wfrew9nPy7aJ5te8J7I3rojMVz6ITV02RltYM8e9VnXbFcx9Y5Pdpfe3umRb
DZttL5X3LNmW6xw6lgC++kv4lMjjOQ3Omr217LXHGsRf1CW0boGf71n2HGGu
MAbGcpOOQ8rmK9/SePpL/i4yB/uR5Js1pn4qP1OxPVBSf7/kjGfANbejH8qe
w5/W7GMdHdrnhu8VzrRWcQwA/NBtkk8oG0MsVfuBkqdF5shnSk5CryV8lruV
zZm9pvrpgbk0fJrTQvvs8HWeGtqXjb7aWve5Q/Unlu2T/UL93Y29Wbb+egf/
jtrvm7d+75T5CNZjrxbsOzgt9FzHB942syGxJeHI52JLJOaveWe8O3QEuoJv
zreHY4FrGav7zVP7A9Xf5nlz9t3VZp/Qup31jx44ODR3jn5/LzIWRVdeofrz
VX9E6FgJOLAlqjssdOwKnPymet7VoXXxxXDEan9QaF8O+8GCyM/As4CfH8Ye
C713MN+Z9+h43sc5oXU/Pua3VB6Zt++ZmIjni/bJ4D8+NLSuxMdwXtk2e4+i
OX5s+e9DYxXWG+sOnYZu45vwbT4PbStjL96k8TSPrLvh5C8om5OCm4IvngO3
HTr2Bf2yNDLPC98Lxvk1NAYFi3bN5iKYE+zJHGOufRdaF7LeWff4+0YWzcnD
zZ+cmh/vqLpB6LbEfOWcyPwomBJseUDF9vXwxL5P5hRz6z718WbJ+KGzyl10
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
          "]], Polygon3DBox[CompressedData["
1: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
AS/zPoA7ijsczi8oDntV3r+b6pvs
          "]], 
         Polygon3DBox[{{4427, 1418, 1388, 3181, 2126, 3527}, {3509, 2087, 
          3178, 1373, 1433, 3510}, {3344, 3343, 4568, 2252, 2253, 4569}, {
          3493, 1615, 1614, 1854, 2074, 3494}, {3431, 1992, 2261, 4571, 3350, 
          3351}, {4415, 1590, 1589, 2043, 2044, 4541}, {4526, 2009, 1906, 
          1905, 2318, 3682}, {3396, 1405, 1423, 3187, 2161, 4561}, {3629, 
          2229, 1857, 1858, 2230, 3630}, {4560, 2159, 2160, 1756, 1754, 
          3390}, {3406, 1953, 2045, 1426, 1367, 4416}, {4524, 2006, 1902, 
          1729, 1728, 3518}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
uebX3KFZoHvm/iMN0BM+jPP5euKefmrwHs0NxwZ/rvRyXfjUxDq8AXFG4npV
hViQWNvXI05LrOcbSosnrlddo3VGxfKuI6onM/n8XtGarBr5PtF6qwZcmfcc
lXi+qE+cnngW6B2tsaqzp1P0jFQKd47WZBHuED0jHQBX4z3HJJ5HahLHJ9b2
VVUr4XvUd6O1XXn2NyV/duK+2ThYq0uzd4yezQJ76pA/hfzDOs/wCYlrbxNi
UeJa3TdaR9ZkfyVeH5l4DuoZrTWrkm/O63MT99ku0RqxAvlmqsWJ+3sL4rzE
GmBQ9MxWlz1z1JsT66sp8JOJddFk+InEmmoM/GBi7TQWfiix7podPMNqlh0Y
PTfW4ZgDojVxbTiy57DEdb5btGatRL57tI6srL4WrTWrwO2i55n94X7RmvtA
uH30PFkO7h+ty2vBFTnuEYn7Thfug724Hw6XLmHPQ7pn2VOB/zs8cU9pGz1H
Fcl3ZX8Z9h+Rubc2gXcH96lDpOHhg4ru9Sdlvk66Xl+kPvbJ8Oep+6R66MmZ
daVqVKk0UNF9/ERd96J7/Qlwz6L9hDP1uUX30zPg7kX32dP1/YvWG0fDvYrW
Emdl1rmq1SGzLtZ1qZJZB63IZ0xp5OX5zChNvSyfK6Vtl+Zzpa6Z6l7lzM/n
G/lMKo2sfrFfZg2uOlw2s45WfS6TWXernqeZ66bq7b66B4rua+fDg6SL4Qvg
AUX3tfMyz2QD8jlvWNH99xLyQ4vuvxdnnucG5fNcY/J/c/z5mWfB/vkMODSf
5TRHHpzPNerLw4vWEpeyfz48OXF96JK/V/WiCa/3kD+EPU2L1jCH5r1MNXN2
Zg0nXbcQ7ld0H5eu6V90Lz43r7HSe8fArYvWeAv0DMC/6HPzvqA+O0XPG/wr
PCtzHdSz01A1i/x38CS4VdF67yjVJvh78pMzaw/Nd4szz0x6Nmtl9jP0fK3n
Pnwlc337Bn41c139Fn45cy39OvVMoNr7VepzPCrXEJoDpCc/Sj0rqBZ9llpD
/VNDUs8l/9S01PPKPzUq95T0XHyZeqZRL/4jtb6WHyJvZIi0OZ9zWmZNqOOr
5k2STid/EflucFn4yMz1VHX1vdRzg/wWeS994ZQ9x+fXSOf/WHi05gn47Mxa
XNduETxYMwd8KtwH3g8+LvP8JD3wZ2ptKD3we2rdIF3xW2otPE/1NrWXM1c1
JLU/NAfenfpe7pb7FdKtU8ivS62v1Xe2pdbjqttbU9cQ+QzvpParVJc2pvao
VMc2596O/vadqTWy7uG1cGnwe9X3pLWnwhtSz2fHqsamnrfUmz5JrZH/6Qup
5x55UPKm5LdNh7ekPs8z4e2p/bZZ8I7Us4L63fup505psL0y+3DT4E2pvbrZ
8K7UntwM+F14arTH14HrXD34u8nTuzxYn2ju6x/sPaoXjAj2QNSLR+X6TXVl
ZLDXoT4+IdhzUE8ZGOxnql90D/a+1K97BvuN6n0Dgv1P9Zd+uQ6UZugBn5+4
R/fKNaSu+fhgL0U9ZUaw9yI9f3SwB6vZdkGw76qZd3qw/6O5YGG0dyadPzXY
/9FcMC7YD1H/Gptrb/XxicG+inrlCdH1RXPfolwjSaNNg+9O3KNXBj8jHThv
86NrYi/yB0fXlJ7wBdGejmaZw6LrSF/40Oga1yefPTUntlV/i66DvckvDX52
2pXaL9K9rJntzuiaIs18frRfpvnopeBnuQ37T4qu75pVl5GvRr59qWdSzS8d
4WOj+5xm2HnBHpr8n065LpLuejH4OW3N/pOje4nm663BfWQa/Hxw3R4Enxhd
izU7HxPdOzVT3xWsdeWZHBXsq8vH6BjsnUp3tQzu3dISM4N9OXnIZ0Z7mprZ
HyX/n8TncFG0l6r564Zgn7w7/EBwfda5vR/+NvF1uS+4nuvcnh7dkzQvtyJ/
UmJt80Rwr1EPeSy4X/TTNQ32G+WVzQ/2FeVjHxLsyct/mxvsK2quPznYu5af
Mxy+NrEmfDy41/SHhwX7jdLGN8Lvw93gM6J9Xv2u0TrXoqrlNwXPMupdHXLt
LQ18YrCHL2/nhODfIzSHHh/8u4ae90a5HlYNOyn4txL5UQ1zbS/ddVqw3vj/
XCD9KU/puODfTdrDRwb/DqJZ/vDg3xfkA9wRPG+qV9cO1mnSeKdGawh5ILOC
tY00zhXBM6n8peOitZd8mGNy7ao+vAT+FO6h7xatS+R11MrrrWr27cG/rehZ
OwJ+KrG3eXa0566Z/e7gmVHe0RvBPUg96p7g2U0z/s3BekDn9txob1339oXR
PuysfPZvI0+b/YvhrYl9uUvy66LZ6/zgWVI+2DnRnr78hEeCe6g8xgvhXYm9
zQuCZ0l5aFcGz7Oaax8O1sDyuI6I1p26Z46M1qwD4HejtbWeza3Rs2greHt0
z1Y90fMiX6s5vC1aW6s+7I7u8fpbtkTP1S1L/buD/KGzNN9E92bVnwXRmlvP
+EPBel5ezVnBs7a8vs3RM20L+LzgOVr+3vvROqATvCNaK6gWXRfsh8izvTrY
u5A/fG2w1yGP92J4HdyFz70m2PeQf/t0sN7Qd74qv/d03mZF/2am/RcFz7m6
Lovze0ke5pTo3410Pz9H/q/E5/PZYE07ED4qek4QXxY8a8vL3RTtR+h8nhPs
Ccg7XRjsP8jDPCVaZ8u7OzfYQ5D/uTNa96hfXE/+m8Qe9XnRv83IUzo7vwfU
ay4N9ijktS7K7zf5ondF60j5J88QWYmv+65oPafavj5Yl0pzaZbUbKjf1G4J
9ovkwR4fPcPIO50TrXdVf24L9lvkmWv2lw6RHrk12DuS335HtH6Vt7MheEbT
9Z0XrbP1zB4erb9VP+9lz5+J/cA78xqrWjE3Wk+rbj8VrAN1/zwZrCFVh5fk
NV9e/f8AInLD2w==
          "]], Polygon3DBox[CompressedData["
1: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
/oZ6eKSTsvA4eic9zTFZeGS9jh55f3iFpvDO7bnnC/7e9lm8fz3NAvRlRjW8
jh7quCw8td5q6zLu9Tf4W7YqIxZ8ps/esgy/bYwYK9uU8VtdU66t7cqIBdeU
a2vnMvyZc+xcjy1j7o1pY/sa/uZXfJc186iHriri+3bNw79fBn+qX86jfhhd
xtox5oy9beG8KdaUa+tzrj+gGr/R37rId2L+qIW/+8I5gj+Ez4M/hfdT32uR
3z+D99cv1cI/TSzjXavpavuYMrTCGDaWx5cRu8aosTqhjFh1jpyrncp4tzOz
qAe+KiJXfMrzzzeflKFdzoFzcTXjX1oP5FGf6In2YqzSFF5pwzxqG2ucO+C/
6TngpfDtcKMMvVxSC333Gq/tnYf/tKbZk+v/qkatc2cR9VCfPPz6nY2oHfUM
egdruj3gP6tR65U8/yQ+/1IL/W9Vhp4vrYW+t4bPNL/XIh+tDB8LL66Fno8r
I9cYs8bu9mX4V3OQuagoQ7++q0X+uJS/+Qm8eh71TAvGD4MX1SIfTDNGufdD
zl3MtXXGZ+pXapGPWpahV1/UIt/sUMZaMWeYO77knoNd74z/Hf7E32w+rkW9
87HvGH69FvXxiDK8qe/cdz+8DK+sZ9W7zk5+ZwW+7wPm4zLetXPoXG4CfwaP
gafDM5P/qnL9/c4Xx5qM3e/fMJcVUc+tl0d9O4D7X62GRqqVo8qYG+fUuR0J
/1GNOXPuhpVRf+vp9fYnJD/UnOc9BA9l/Dt4AuN7mc/gxfB4eE/zN/wtvDO8
B3x88kcrcv+DjYhpY7ttym+fZ1HLqslqs/lP794u6dkQnvc5Y2M5t3sjagpr
V2tYa40bOL5nfJ086tlf9AlZvCO96o1F9Gd65lHP71pGPXhWFvWXv8Hf4jN8
Vpc8tE9NUVumlFEPnpFF/Ta5jPry9CzqgV3K0HI13fr0I+7Zh3tfq0X/5EN4
b/1ULerjSWX0U07Lor7YrYxcb863XsvL0JP5tcjHU8uob8/Mon7Yooy17Tvw
XQyE365GDWEtcVMR/YV18+hPOAfOhXN0HWODy+hNuQZcC/Zo7NV0yKN/NYjx
hdXoYdnL8p377hdx7kquvYTjYz53zKN/4Zw798bE9UXEqLHqnF1RhAfaLgtN
1hvZE/O7rJrH8/uRb3o1hWfVu5r7+sObcezB5zn6gqbIv+bhbkl/b+f8xVy/
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
UtLPuA==
          "]], Polygon3DBox[CompressedData["
1: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
2Ul5afGBtgPjjmeX5NXEevYQ+z8ui7py
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[CompressedData["
1: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
PlDdUP04JjyZ+62hM+gs/wc6MEyw
          "]], Polygon3DBox[CompressedData["
1:eJwl01toznEcx/Ef47HNtgfjgkJKuZBDmjVXhhySNnbjMLMZFzazUTJmkiWn
TZnTxSzGKMVKxIOhSNHKrQuTwkopp3Ioy+H19Lv49Py+7+/n+/3+Dv9nSnVD
Wf3QEEIBDafu0SGcHxHCJKrNCOFRMoSHdN+6DduUHcID8UfKHxZCK3YceyO+
rPaCeDJN4X+HVVCB9XaeBvrLcxersl6VFcIMw6/n6Y9txPJoCX+veCHvbOv8
ISEcS4TQKF5KSf3zqIJ3Yn4I+7AO+bO8nXRRbaXcPevblMF7OSeEx+m5elWZ
WyP/RHwCHydfjC/lTeLtWK1+H9zHMmwU9suMYr8LsuN5JuQ6D1+v9SxnGOS/
Ij5MFdbraafcTL37nO+W/q8yQ5iv/qdeleqfyjWK9/MdspcfeJH4KV8X/xN1
7/Fq6zasXW5AfIqOqplDJ81pVrfF3BrxCt4yrFu8HJ+HFVEPtlu8iFaLx/Jd
wfaI6+ylz16G618oV6n/pfTdDotnWMd3Vb8PYyJfK15DKfsroZReI/BM+qbf
yNx4pkLxXPqOvciLZ2oS76V/2EU9q/WZypswa0f6LbznVr8p/A4dtZcjdIDn
lvgmlattotuJyFsyom+82l3ethM/l4jfwTa+h9adZjfzHcTqsUvYa6wHu5GM
d3Udu0Z15j931i68Q36l/ZbSYLpOLtddLcbvZsRvMP0e7epOUL35n9R+Scb/
z1T5LvosfjsmfpdD1Q+hZfr9phLsi/d9Zj/97ukPtg3rz4zfzUusxp2e0f90
Ir57uX4B3yzelIh3N835+/FWtS32UepOc0aF8BXrxjZkxe//j14t5o+Wz/ab
RQN0Vb/pvuUDfBv4U+r+A5Jsixk=
          "]]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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

          "]], Polygon3DBox[CompressedData["
1:eJw1mAuUVlUVx8+M8333fuPcD+7nKkUseShCgDwF0xmsVAKsNIqHqaRWi5dA
PAKSkkGRUd5gPI1qJWCgIG/Qyh5a+WiJWqiJBMwA8giQh4hmj/+P/3Wtues7
++x99z3n7L3/+3+m+d2j+o4sDyH0KAuhQr/rSiH0L4RwlSY/n4RwTxxCjXTd
JA/Q/GDp79XcBbL9TRrCMj0n8iFcJv1jxRDWSn+T7K6Q3F7vL9ZzVrbj5WNv
VQgzZD9R9pfqYycbWd9B+qHSR3p/mHxXa9xV7/eTnzXy11u/l0uuwT4KYZfs
vySb9zVeV7Ttq5o7KF+v6htflq5e8jTJy/T+bPkczP5ke5fG3TRurXe+Ir+1
kvtLvl7yZfLXSs8leref1vdipXzJxx7JN8jmkMb/k/6w5F6Sm2g8SO/3kp+W
er9a6wuSj+int/RNpS9IPin5DsntJS+Ujw8k1+ip11oX6zw66jy66Hs3avyo
bM7oISbbpW8p+y0a79XcLO1lvubGy76XDB7X+mL5PyH9bfLfTjZf1FqaSDdJ
T63G7+idHvrtKP12+Xpacqp3OuqdBvlaX/I+2M8R6ZvrWSRdhd6frPO6RvLr
WX40aPxdrXFbLoQJkqu03w0l75P9/ivx2jn7npJ/qO9skn6KfgdIPi39VOKt
8YXyv0j+39MzXeOZWuPHsj0j/a1lPuOZGk/UuzdKvk42t8nmA819q8xnPEvj
vol9DyQfNF4Z+Rw4j7OSt8ln49g5Rv6tLzqXXwuO58+knyP9ENmflO6obK6R
bpXmfitdrpjpNDdf9lfqeU7j7prbqXGkQtindbWSz+VF50O95E9LXij5ezqv
dxWvT0k+X+f1lOY6azxHa1wq/w8mjs0K+WyROEfJVWI6T/Jxrecmjes010a6
S/Sejj/s1/OhxgMS5yo5+7Zs5+jbc7WGYbI/JftdmrtUuvf0zJVtTz27Nb6+
zPXypvQyOxcjYvVt/V5V5v30Kbget0vfSfI3Cl43679WNsc03gEeaH6s5nbL
0Xdk/8fg+gcHqE++NZZzKbk+wI7bNfdgbHyhdrvI/puyX6HzOiT5Ac0/WnK9
8Roxn6q5nRKqC86hV7T+kbFjCV6BWwf1vTYaf1XjMyXX+x+C8QMcoR5bBJ8P
50QNkMtLY9cG+UGt/wCd5Db6/g3lzjHO6EDR9fUF+Tot/TNF48dq2R2UPE+/
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
          "]], Polygon3DBox[CompressedData["
1:eJwt1F9M11UYx/EHQn4/CErqojZXrbI0TUvMuhCsbDi1VUrLrGlrtjW5EBqa
FW3hLOwP2lxtGpveVNDCWjWUslpt/V1d5FLU/mgoZNq/JZGp3dTr7HTxYd/n
fT7Pc57zcM7v4mUtjc2lEdFAY2j07IhLyiJ6KyO6aUTcWB1xobVJhYi1xYi/
xLMqIs6TeLg84hDdif9YE3ELfivt46/n68JXl0T0K/44tVZFzMQHrP+h3mLe
I/KOYrP5DuIn1bsf24RNFc/gG6vOZnEHbcceS7nYLvELZ0Wcr5fr1VqEfYVN
8v25/VbQSmtt4k32HlS7W/7VJbnnZqyFpxaf69wfOvM8+VvUP0ln8H7N86Z+
Dogfoh6s3Z5DfCvUeBL7GBsWz6et4lOkXOyuykrfp7F/6H213qKDvh+mV6yt
Ue8bufeqN1yRz9OFNWA/WD/B12ptt7zvsGXFPIM0i+/Fx3gflbPaWQaoR7yT
92eeZ+gzvml8PdjrhTzTNNuNWD/vTXIfMIMWGsUqx0ZM1/R28+ijsnMySzNK
s2q1R4Nau6hJL7freZoas9yX4+p1ijvwJeY8Ip58br5PbXIfoT/5WuW2qbNf
H1eU5p7TPfjb+gmqxd7AmviaxWfy3VGS++vGup1hMl2Ed2LzsHb1Gmk+3+/Y
ddW5r0b9LE93g+d0de5rnbiUPqjJuUf+fwML/blP/C4dV/+5Qr6v6d5+6385
zvcXzvIlVZrLUryPZzpdaW2QZ0Dug+nu0yA2h+eedHd5rqEp2CG+u7DXCvlt
pTd2ANuW7pT+bhavc+6dVfk+lznHZqxJfx9hQ9i/2K88v1B9Rc7t8P0ELbC2
HCukGap3rT1qrHfZcyO+3vpate6mJvVuw1/kaecRxl5/FmG92JpiPnc6/wLs
Jewy8hn7sMvt8SpPHTYTmyBebHGbeCJdkO4p39vprYufok/SO+QZxm7Qz43p
zWK12DvYMZ6n6VPsqnRPsaHUC/Vjl2I7sMOpZ9qBjcfmYL+V57mk+dS5a+9h
IzzP016+Or6fsA32fLYiz6dcz3uwlc6xqpjfXXp/E/Fecb3cunRXxQvxl8UT
SBj7na2TlphlffoNi/xbV7TYNybPOc17VPwfVHzAJA==
          "]]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{993, 1, 872, 327, 3280, 16, 3288, 31, 3293, 46, 3298, 61, 
       1616, 1432, 1372, 3211, 1411, 1462, 1430, 1525, 1570, 3223, 1571, 1463,
        1464, 4452, 1431, 1461, 3246, 1370, 1410, 1459, 4460, 1460, 1429, 
       3232, 1455, 1368, 1523, 4482, 1522, 1521, 1427, 1362, 1407, 4451, 1361,
        1424, 1363, 5, 1820, 4, 1818, 3, 1816, 2, 2169, 326, 993}], 
      Line3DBox[CompressedData["
1:eJwl1GWIFlEUh/Gxa+34Yi7Y8cnu7gIxUFFshRUDTGzsbsW1d7FbDOw11zXW
7m4FE8QE9Xfxw+Nz5n/O3Lnje2djew1uNyhNFEXV/NM+QxRlVPePiaJKisqo
gkm5o6gqV0N11EBNjJDX4tqogx3uq8v1MFmvPjdAQyzWa8SNMUWvCTdFM+zS
a84t0BKt0Bq75W24Lbrb2xfXrezvuOtl1jgqO4aT8h78EsfxCkmynhxjdqnZ
Pups6hzIjjGyIpwLufFT/wcWy6dzfyyxRhKvxhmcDuvLZvAqLDI7gGfYUyP1
Cesk4WR4prlTfBpncBbnsE2ezOeRguXuu8AXsV3vEl9GKq5gsP5VvhbW0L/O
N3ATK/Ru8W3cwV3cQ7z8Pj8M72l/SzPp2WMBTrXGRtkGJIT7+Tbm4j3Wy0Zy
obAPs7/Uv1HUdQnMVm+UF1cXQywKoiKG6V3UK6wepR5irTt8FR8wGmtld3ke
Lpgdyw/tbYj6h/vmux6HNeY28T0kIhzMBJ4gL6m+rr6BFPd94mvhN9Ebzp9x
OTxDL5U/YqXepbAn/EWy3lr+g3UYGt4d5+QDeRbiUCy7s+bxiZ650BozZafC
uTN3NsyH84d3OCp7ywXMLjCbh/MiP/Khn954+TT+jm/oG/Ypy6n/OvwO1njD
U3ECvXBYFh/eIfTN9uYu9lQ/nNVwDlx3wxxzR/gFpiCL3mHeKq+gfqZ+Hubc
d4jLyw7qlePSKIM4vbK8V/+A3lN+grSyWXo71WnCtx5+N2zHTHmn8D2gI2Kd
s6z2F2duvzUWyiaG78RcB94Wvi3swXTZbp6EfWY781dkdm8mdFVvkmdQZ0R6
pAv7k5XiR+Fbtcbj8J54gPvh/0+2hTeH58T8/9v2D3ButIw=
       "]], 
      Line3DBox[{1821, 7, 873, 3176, 1617, 3235, 1618, 1619, 4447, 1620, 1621,
        1622, 1623, 4486, 1624, 1625, 3240, 1626, 1627, 1628, 1629, 3251, 
       1630, 1631, 1632, 1633, 1634, 3233, 1635, 1636, 4458, 1637, 1638, 1639,
        1640, 4456, 1641, 1642, 3217, 1533, 2576, 840, 9, 2173, 337, 785, 8, 
       2600, 877, 335, 1821}], 
      Line3DBox[{1827, 11, 1644, 1645, 1646, 4457, 1647, 1648, 1649, 1650, 
       1651, 4448, 1652, 1653, 1654, 3218, 1655, 1656, 4491, 1657, 1658, 1659,
        3241, 1660, 1661, 4480, 1662, 1663, 1664, 3256, 1665, 1666, 1667, 
       1668, 1669, 3257, 1670, 1672, 1375, 75, 3311, 60, 3296, 45, 3292, 30, 
       3573, 344, 995, 15, 965, 580, 1833, 14, 1831, 13, 1829, 12, 1827}], 
      Line3DBox[{892, 91, 3649, 438, 1001, 3340, 106, 1066, 459, 3356, 121, 
       855, 4419, 1700, 4473, 1701, 1702, 3225, 1703, 1704, 1705, 1706, 3263, 
       1707, 1708, 4472, 1709, 1710, 1711, 1712, 1713, 4500, 1714, 1715, 1716,
        1717, 4474, 1718, 1719, 3229, 1720, 1721, 1722, 1723, 3228, 1724, 
       1725, 4461, 1546, 3972, 892}], 
      Line3DBox[{3355, 105, 816, 4418, 1673, 4471, 1674, 1675, 3224, 1676, 
       1677, 1678, 1679, 3259, 1680, 1681, 4476, 1682, 1683, 1684, 1685, 4495,
        1686, 1687, 1688, 1689, 1690, 4477, 1691, 1692, 3230, 1693, 1694, 
       1695, 1696, 3227, 1697, 1698, 4462, 1559, 4016, 941, 135, 3673, 475, 
       797, 120, 4002, 925, 456, 3355}], 
      Line3DBox[{1386, 151, 3361, 166, 3364, 181, 3376, 196, 3763, 568, 1023, 
       211, 991, 639, 1937, 212, 1938, 213, 1939, 214, 1940, 215, 1755, 1444, 
       1402, 4466, 1492, 1398, 1420, 1561, 1487, 4449, 1562, 1395, 1515, 3215,
        1483, 1584, 4504, 1394, 1586, 1391, 1585, 3268, 1583, 1482, 4468, 
       1514, 1390, 1582, 3267, 1481, 1560, 1480, 1389, 1479, 3266, 1385, 1438,
        1386}], 
      Line3DBox[{3362, 165, 1757, 1758, 1759, 3222, 1760, 1761, 1762, 1763, 
       1764, 3226, 1765, 1766, 1767, 4453, 1768, 1769, 3272, 1770, 1771, 1772,
        4465, 1773, 1774, 3231, 1775, 1776, 1777, 4509, 1778, 1779, 1780, 
       1781, 1782, 4454, 1783, 1785, 1406, 221, 1944, 222, 1945, 223, 1946, 
       224, 2395, 575, 1028, 225, 962, 574, 3400, 210, 3386, 195, 3374, 180, 
       3362}], Line3DBox[{839, 217, 2393, 571, 1027, 1942, 218, 1082, 573, 
       1943, 219, 955, 3183, 1786, 3237, 1787, 1788, 4450, 1789, 1790, 1791, 
       1792, 4512, 1793, 1794, 3236, 1795, 1796, 1797, 1798, 1799, 1800, 3276,
        1801, 1802, 1803, 1804, 1805, 3234, 1806, 1807, 4469, 1808, 1809, 
       1810, 1811, 4467, 1812, 1813, 3216, 1532, 2575, 839}]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0csrJWAYwOFPzdlgwSzZsBwcxhiXhNw2nDFkxXG/DEmxItkpkp2747Ii
WZOsTbLlpGmaJCTZzfwFlKdm8evp3bx9b1/u4GT7REoIYU4tkRA6PoTQxEp9
zAhh1JzDaRZxgTVcZwsP2M0TjvMnZ5nkEh+Y4D8e8Y1nTLf/ktmszrSTrcpT
TA1aTgshnyss4CqjXGMh11nEDX7mJou5xS9MsITb/ModlnKXZdxjOX+kh1DL
NlXomxr16H2feMMsXjCNp3x1xyH/cpP3XOQ1Z3jOMR4zzn3GuMYqzjPKKVa6
v8re7xoxN7NeL6neZn7mMJ84xEcO8p4DvGM/b9nHP+zlb/bwF7t5wy4mGecV
Ozni/rrI//9/BxyWQxQ=
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0Ekyg3EQhvE3OwukiCmJoaLKkuIIjsDG3gFwBnET8zzbIonDYGOeVflZ
dHW/z9P//qq+2vzi7EIhyYx6bE/WO5INddmdPMib5rlisqVfYU9YSd6Wy53J
MnbdlTzjPXjDnFJS4Xbs9GIvXJ8+0pZU8V28X37Fb+2vurGHDXP7+gD3xjXx
cWxCNczv2KR5SrXkD7ls98CbGnaoF3z7zs1PrsIdYaNc3X4Tr2Jf3KB+zI1x
K1yLG8K+uRtz0Z0l+cTOvf6Dr9k7levymf77/7+wc/OFmvbuDyoUMms=
       "]], Line3DBox[CompressedData["
1:eJwNzLlRAmAYhOEPBWcM0BEKUFoQtQIyIymBVEXFCy88SiFQAtCxAe9jJHEQ
YlITOhDRJ9jZfffb/8+VNorlRESs0Fw6Ynkm4p33MhG1qYgL+WA64o13dce6
CZyiE/lM1/bmUE7qxmmkO8Kv3izhqjzG65P+kl/0i3hP/va2YZ/A+/jZbUHe
lb/0N+478qz+E1/jEu7IFR62f3ybnmxS2YiBzSYe0S9t0aNb0i1vX8ZD+qE+
nfrrw5t5t3V8bpuxreIHecDX9Fd2LbtbfK9f1V3qmro7XOD/sNIxmg==
       "]], 
      Line3DBox[{4114, 4409, 2973, 4113, 5002, 4321, 4115, 5003, 4322, 4116, 
       5004, 4323, 4117, 5005, 4324, 4118, 5006, 4325, 4119, 5007, 4326, 4120,
        2980, 4121, 5008, 4327, 4122, 5009, 4328, 4123, 5010, 4329, 4124, 
       5011, 4330, 4125, 5012, 4331, 4126, 4707, 5089, 4332, 4410}], 
      Line3DBox[{4128, 4619, 4913, 4127, 2987, 4129, 5013, 4333, 4130, 5014, 
       4334, 4131, 5015, 4335, 4132, 5016, 4336, 4133, 5017, 4337, 4134, 4620,
        4914, 4135, 2994, 4136, 5018, 4338, 4137, 5019, 4339, 4138, 5020, 
       4340, 4139, 5021, 4341, 4140, 5022, 4342, 4141}], 
      Line3DBox[{4143, 4621, 4915, 4142, 4622, 4916, 4144, 3002, 4145, 5023, 
       4343, 4146, 5024, 4344, 4147, 5025, 4345, 4148, 5026, 4346, 4149, 4623,
        4917, 4150, 4624, 4918, 4151, 4625, 4919, 4152, 5027, 4347, 4153, 
       5028, 4348, 4154, 5029, 4349, 4155, 5030, 4350, 4156}], 
      Line3DBox[{4158, 4626, 4920, 4157, 4627, 4921, 4159, 4628, 4922, 4160, 
       3017, 4161, 5031, 4351, 4162, 5032, 4352, 4163, 5033, 4353, 4164, 4629,
        4923, 4165, 4630, 4924, 4166, 4631, 4925, 4167, 4632, 4926, 4168, 
       5034, 4354, 4169, 5035, 4355, 4170, 5036, 4356, 4171}], 
      Line3DBox[{4173, 4633, 4927, 4172, 4634, 4928, 4174, 4635, 4929, 4175, 
       4636, 4930, 4176, 3032, 4177, 5037, 4357, 4178, 5038, 4358, 4179, 4637,
        4931, 4180, 4638, 4932, 4181, 4639, 4933, 4182, 4640, 4934, 4183, 
       4641, 4935, 4184, 5039, 4359, 4185, 5040, 4360, 4186}], 
      Line3DBox[{4188, 4642, 4936, 4187, 4643, 4937, 4189, 4644, 4938, 4190, 
       4645, 4939, 4191, 4646, 4940, 4192, 3047, 4193, 5041, 4361, 4194, 4647,
        4941, 4195, 4648, 4942, 4196, 4649, 4943, 4197, 4650, 4944, 4198, 
       4651, 4945, 4199, 4652, 4946, 4200, 5042, 4362, 4201}], 
      Line3DBox[{1217, 2862, 1218, 2863, 1219, 2864, 1220, 2865, 1221, 2866, 
       1222, 2867, 1223, 2868, 1224, 2869, 1225, 2870, 1226, 2871, 1227, 2872,
        1228, 2873, 1229, 2874, 1230, 2875, 1231}], 
      Line3DBox[{4203, 4653, 4947, 4202, 4654, 4948, 4204, 4655, 4949, 4205, 
       4656, 4950, 4206, 4657, 4951, 4207, 4658, 4952, 4208, 3062, 4209, 4659,
        4953, 4210, 4660, 4954, 4211, 4661, 4955, 4212, 4662, 4956, 4213, 
       4663, 4957, 4214, 4664, 4958, 4215, 4665, 4959, 4216}], 
      Line3DBox[{4218, 3070, 4217, 5043, 4363, 4219, 5044, 4364, 4220, 5045, 
       4365, 4221, 5046, 4366, 4222, 5047, 4367, 4223, 5048, 4368, 4224, 3077,
        4225, 5049, 4369, 4226, 5050, 4370, 4227, 5051, 4371, 4228, 5052, 
       4372, 4229, 5053, 4373, 4230, 5054, 4374, 4231}], 
      Line3DBox[{4233, 4666, 4960, 4232, 3085, 4234, 5055, 4375, 4235, 5056, 
       4376, 4236, 5057, 4377, 4237, 5058, 4378, 4238, 5059, 4379, 4239, 4667,
        4961, 4240, 3092, 4241, 5060, 4380, 4242, 5061, 4381, 4243, 5062, 
       4382, 4244, 5063, 4383, 4245, 5064, 4384, 4246}], 
      Line3DBox[{4248, 4668, 4962, 4247, 4669, 4963, 4249, 3100, 4250, 5065, 
       4385, 4251, 5066, 4386, 4252, 5067, 4387, 4253, 5068, 4388, 4254, 4670,
        4964, 4255, 4671, 4965, 4256, 3107, 4257, 5069, 4389, 4258, 5070, 
       4390, 4259, 5071, 4391, 4260, 5072, 4392, 4261}], 
      Line3DBox[{4263, 4672, 4966, 4262, 4673, 4967, 4264, 4674, 4968, 4265, 
       5073, 4393, 4266, 5074, 4394, 4267, 5075, 4395, 4268, 5076, 4396, 4269,
        4675, 4969, 4270, 4676, 4970, 4271, 4677, 4971, 4272, 3122, 4273, 
       5077, 4397, 4274, 5078, 4398, 4275, 5079, 4399, 4276}], 
      Line3DBox[{4278, 4678, 4972, 4277, 4679, 4973, 4279, 4680, 4974, 4280, 
       4681, 4975, 4281, 5080, 4400, 4282, 5081, 4401, 4283, 5082, 4402, 4284,
        4682, 4976, 4285, 4683, 4977, 4286, 4684, 4978, 4287, 4685, 4979, 
       4288, 3137, 4289, 5083, 4403, 4290, 5084, 4404, 4291}], 
      Line3DBox[{4293, 4686, 4980, 4292, 4687, 4981, 4294, 4688, 4982, 4295, 
       4689, 4983, 4296, 4690, 4984, 4297, 5085, 4405, 4298, 5086, 4406, 4299,
        4691, 4985, 4300, 4692, 4986, 4301, 4693, 4987, 4302, 4694, 4988, 
       4303, 4695, 4989, 4304, 3152, 4305, 5087, 4407, 4306}], 
      Line3DBox[{4320, 4414, 3171, 4319, 5001, 4706, 4318, 5000, 4705, 4317, 
       4999, 4704, 4316, 4998, 4703, 4315, 4997, 4702, 4314, 4996, 4701, 4313,
        4408, 5088, 4312, 4995, 4700, 4311, 4994, 4699, 4310, 4993, 4698, 
       4309, 4992, 4697, 4308, 4991, 4696, 4307, 4990, 4412, 4411, 4413}], 
      Line3DBox[{4455, 3412, 3768, 3567, 4883, 4595, 3964, 3411, 3580, 4716, 
       4543, 3919, 3921, 3920, 4470}], 
      Line3DBox[{4459, 3419, 4841, 3773, 3587, 3968, 3949, 4768, 4519, 3606, 
       3477, 3950, 3925, 4592, 4767, 3926, 3604, 3476, 3818, 4617, 4791, 4110,
        4111, 3603, 4107, 4098, 3772, 4896, 4037, 4036, 3969, 3600, 4908, 
       4610, 3771, 3418, 3601, 3582, 4872, 4589, 3597, 3831, 3830, 3598, 3475,
        4790, 3594, 3829, 3828, 3595, 4720, 4544, 4483}], 
      Line3DBox[{4463, 4578, 4851, 3810, 3716, 4018, 3366, 4779, 3536, 3718, 
       3537, 3962, 3367, 4594, 4780, 3538, 3720, 3539, 3368, 4616, 4830, 3740,
        4109, 3741, 4104, 4057, 4853, 4058, 4056, 4094, 3742, 4021, 3743, 
       4909, 4613, 3369, 3725, 3813, 3726, 4874, 4590, 3370, 3898, 3540, 3729,
        3541, 4831, 3371, 3899, 3542, 3732, 4752, 4555, 4508}], 
      Line3DBox[{4464, 3744, 3815, 3745, 4892, 4604, 3381, 3551, 3746, 4756, 
       4557, 3382, 4077, 4431, 4479}], 
      Line3DBox[{4475, 4040, 3983, 3790, 4608, 4848, 4049, 3425, 3980, 4567, 
       4723, 3791, 3426, 3344, 4569, 4724, 3427, 3991, 4573, 4725, 3792, 3428,
        3653, 4600, 4887, 4041, 3992, 3793, 3915, 4050, 1989, 4088, 3994, 
       4042, 3995, 3794, 3916, 4051, 4900, 3429, 3654, 3645, 3795, 4849, 3430,
        3655, 3647, 4726, 3431, 3351, 3658, 3796, 4850, 3432, 4099, 4100, 
       4101, 4911, 4614, 3797, 3932, 4052, 4478}], 
      Line3DBox[{4481, 4415, 4541, 4712, 3566, 3403, 3283, 4709, 5090, 4485}],
       Line3DBox[{4484, 3482, 4433, 3483, 4794, 3300, 3853, 2067, 3596, 3484, 
       3301, 3854, 4769, 3485, 3599, 3486, 3855, 3302, 4770, 3487, 3602, 3488,
        3856, 3303, 4795, 3612, 3970, 3613, 4842, 3304, 3615, 4097, 3616, 
       4856, 3305, 3857, 3489, 3605, 3490, 4875, 3306, 3951, 3491, 3607, 3492,
        4863, 3858, 3307, 3608, 3774, 4737, 4565, 3903, 3308, 4796, 3619, 
       4445, 3620, 4492}], 
      Line3DBox[{4487, 3470, 3585, 3924, 4764, 4591, 3923, 3471, 3586, 4789, 
       3413, 3965, 3966, 4432, 4490}], 
      Line3DBox[{4488, 5094, 3405, 3284, 3466, 3570, 4787, 3406, 4416, 4489}],
       Line3DBox[CompressedData["
1:eJwNzrkuBGAUhuFvZmwjtiFRYuxbIrE1Gnqa0dC6AGK/gkEjQeFWLA0Sxo1o
RE2Jp3hzznm//5z81Z292m4hSQ2XlWQD6/joS9o7k0ccdycV86l6gjL3gG19
D3+kHqKNe7d70ZtsmQ+wj1Z+Up3CuWypK5nQj6NF9mWn5M6YeVF2zzWj4e2C
+RnzaOLeuBX9lbc3uEa/3ZLsDnOyUe61nBTNw/oRzPJF76r6IRRkA+ogZmQv
7jb8I/wqt4Yz7kk2jb+O5Jv7QZ2vq8v8L//p7qbdGm7xD5tmJZw=
       "]], 
      Line3DBox[{4494, 3353, 3660, 3820, 4857, 4576, 3352, 4575, 4748, 3819, 
       3657, 3350, 4571, 4747, 3785, 3646, 3349, 4570, 4746, 3784, 3644, 3348,
        4601, 4888, 3996, 3783, 3914, 3913, 3347, 4899, 3911, 3912, 3782, 
       3993, 2629, 3346, 3652, 3930, 4087, 4876, 4611, 3345, 3642, 3781, 4844,
        4568, 3343, 3641, 3780, 4843, 4566, 3342, 3981, 3982, 4745, 3779, 
       3640, 3341, 4501}], 
      Line3DBox[{4496, 4444, 3444, 3802, 4730, 3999, 3998, 3997, 3443, 4812, 
       3672, 3659, 3358, 3442, 4811, 3671, 3670, 3937, 3441, 4877, 4069, 3938,
        3656, 3668, 1997, 4013, 3801, 4012, 4011, 4089, 4891, 4520, 4010, 
       3800, 4009, 4008, 4809, 3665, 3440, 3666, 4729, 4574, 3663, 3439, 3664,
        4728, 4577, 3357, 3438, 3822, 4727, 4572, 4048, 3437, 4858, 3821, 
       3651, 4442, 4499}], Line3DBox[CompressedData["
1:eJwVzjsyw1EYhvEvlQojVqCLW7AF+hQhihC3RFwKSpc/YQvsAjM2IHpjhlFo
lRJ2IDFm/E7xznPe5zu3sa3D8kEuIspyNRJxORixhN3RiGW80O+HI1r5iF/s
y96Qzu/jOb/AzctO6vwbt2s9x83KtvUZ38c/sybO8EWpW78PRPSwIY/2NfkJ
7995/zvdKxWzTXl2/pb/sF6UV30dM+c2cNreKXnha/op/4Nr6Q/cZLpbVvUT
s6/0P8nMnty7wh/zXW7cHxrY1qv8EXb0Al/HB73izKd+gyW5ln9jUzEW
       "]], 
      Line3DBox[{4503, 3713, 4446, 4615, 4823, 4105, 3714, 3908, 4873, 3695, 
       3809, 3459, 3715, 3895, 4870, 3528, 3717, 3945, 3946, 3944, 4878, 3529,
        3719, 3847, 3848, 3823, 4859, 3721, 4055, 4530, 4824, 3811, 3722, 
       4020, 4531, 4825, 3723, 3896, 3530, 3812, 4532, 4777, 3724, 3897, 3531,
        3728, 4584, 4778, 3849, 3727, 3532, 3731, 2472, 3850, 3730, 4826, 
       3533, 4439, 4441, 4507}], 
      Line3DBox[{4505, 4440, 4019, 3379, 4556, 4829, 3738, 3548, 3380, 4609, 
       4783, 3549, 3739, 3550, 4513}], 
      Line3DBox[{4506, 3390, 4560, 4832, 3751, 3556, 3391, 4708, 5096, 4514}],
       Line3DBox[{4510, 3396, 4561, 4761, 3758, 3558, 3395, 4710, 5091, 
       4511}]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzzEvg2EYRuHHQkkT1c34qZXEWINNOhk0sXViMDRRIkw2EYPEooO2g7YS
oiYpo1ibSFgYOtUf8A80dXU4Oe9z7g5fk+1KcW8iIjaRTEUM0UI3G7HAk6mI
pZmIB+8XbYWz7ll9jpvak7aK5+mIeX2k3fGVu4p12xuf6on+imt3DRu2Hp/b
lvUv1N0NbNku9G+t533sXeI/9ye/u3f4w2/XtAzfYKg3uWzrc8G2yG3c4kj/
4aKe5874e/keJ7aSPtAK4w2PONOr2q4t53//ui9R0w60w3TEPv4BZIQvCg==

       "]], Line3DBox[CompressedData["
1:eJwVzr8rxHEAxvEHF0dnIQbDHTMpK5tiPUzOKGK4nMGg+AOsilExK1HCzCI/
BmZX/gADWRSD1w3v3s/zfL/fz/czstxY2GhLMo/DrmSzmDTw3pdUu5NVudaT
rHDTNm2r6Et6mU9tNXnC3sSc3NmfjMtV+Y3LeMWsXvBsSJ6RX7iIR+w6Z6r1
rTzJD/zN2/Yv/sSi+23pz/ITPuS69+4wpt9jFO3+cWu7lG94mC9QwbV+3Oo8
yEc4cc4An9sOuBdXtn0u4cy+x3VbgX/0Dt7Buu3PvX6xVkr+AScFK3U=
       "]], 
      Line3DBox[{2766, 2974, 5002, 2767, 2987, 2793, 4916, 3001, 2807, 4921, 
       3015, 2821, 4928, 3029, 2835, 4937, 3043, 2849, 4948, 3057, 2863, 3071,
        5043, 2877, 3085, 2891, 4963, 3099, 2905, 4967, 3113, 2919, 4973, 
       3127, 2933, 4981, 3141, 2947, 4991, 3155, 2961}], 
      Line3DBox[{2768, 2975, 5003, 2769, 2988, 5013, 2794, 3002, 2808, 4922, 
       3016, 2822, 4929, 3030, 2836, 4938, 3044, 2850, 4949, 3058, 2864, 3072,
        5044, 2878, 3086, 5055, 2892, 3100, 2906, 4968, 3114, 2920, 4974, 
       3128, 2934, 4982, 3142, 2948, 4992, 3156, 2962}], 
      Line3DBox[{2770, 2976, 5004, 2771, 2989, 5014, 2795, 3003, 5023, 2809, 
       3017, 2823, 4930, 3031, 2837, 4939, 3045, 2851, 4950, 3059, 2865, 3073,
        5045, 2879, 3087, 5056, 2893, 3101, 5065, 2907, 3115, 5073, 2921, 
       4975, 3129, 2935, 4983, 3143, 2949, 4993, 3157, 2963}], 
      Line3DBox[{2772, 2977, 5005, 2773, 2990, 5015, 2796, 3004, 5024, 2810, 
       3018, 5031, 2824, 3032, 2838, 4940, 3046, 2852, 4951, 3060, 2866, 3074,
        5046, 2880, 3088, 5057, 2894, 3102, 5066, 2908, 3116, 5074, 2922, 
       3130, 5080, 2936, 4984, 3144, 2950, 4994, 3158, 2964}], 
      Line3DBox[{2774, 2978, 5006, 2775, 2991, 5016, 2797, 3005, 5025, 2811, 
       3019, 5032, 2825, 3033, 5037, 2839, 3047, 2853, 4952, 3061, 2867, 3075,
        5047, 2881, 3089, 5058, 2895, 3103, 5067, 2909, 3117, 5075, 2923, 
       3131, 5081, 2937, 3145, 5085, 2951, 4995, 3159, 2965}], 
      Line3DBox[{2776, 2979, 5007, 2777, 2992, 5017, 2798, 3006, 5026, 2812, 
       3020, 5033, 2826, 3034, 5038, 2840, 3048, 5041, 2854, 3062, 2868, 3076,
        5048, 2882, 3090, 5059, 2896, 3104, 5068, 2910, 3118, 5076, 2924, 
       3132, 5082, 2938, 3146, 5086, 2952, 3160, 5088, 2966}], 
      Line3DBox[{1119, 4120, 1134, 4134, 1149, 4149, 1164, 4164, 1179, 4179, 
       1194, 4194, 1209, 4209, 1224, 4224, 1239, 4239, 1254, 4254, 1269, 4269,
        1284, 4284, 1299, 4299, 1314, 4313, 1329}], 
      Line3DBox[{2778, 2980, 2779, 4914, 2993, 2799, 4917, 3007, 2813, 4923, 
       3021, 2827, 4931, 3035, 2841, 4941, 3049, 2855, 4953, 3063, 2869, 3077,
        2883, 4961, 3091, 2897, 4964, 3105, 2911, 4969, 3119, 2925, 4976, 
       3133, 2939, 4985, 3147, 2953, 4996, 3161, 2967}], 
      Line3DBox[{2780, 2981, 5008, 2781, 2994, 2800, 4918, 3008, 2814, 4924, 
       3022, 2828, 4932, 3036, 2842, 4942, 3050, 2856, 4954, 3064, 2870, 3078,
        5049, 2884, 3092, 2898, 4965, 3106, 2912, 4970, 3120, 2926, 4977, 
       3134, 2940, 4986, 3148, 2954, 4997, 3162, 2968}], 
      Line3DBox[{2782, 2982, 5009, 2783, 2995, 5018, 2801, 4919, 3009, 2815, 
       4925, 3023, 2829, 4933, 3037, 2843, 4943, 3051, 2857, 4955, 3065, 2871,
        3079, 5050, 2885, 3093, 5060, 2899, 3107, 2913, 4971, 3121, 2927, 
       4978, 3135, 2941, 4987, 3149, 2955, 4998, 3163, 2969}], 
      Line3DBox[{2784, 2983, 5010, 2785, 2996, 5019, 2802, 3010, 5027, 2816, 
       4926, 3024, 2830, 4934, 3038, 2844, 4944, 3052, 2858, 4956, 3066, 2872,
        3080, 5051, 2886, 3094, 5061, 2900, 3108, 5069, 2914, 3122, 2928, 
       4979, 3136, 2942, 4988, 3150, 2956, 4999, 3164, 2970}], 
      Line3DBox[{2786, 2984, 5011, 2787, 2997, 5020, 2803, 3011, 5028, 2817, 
       3025, 5034, 2831, 4935, 3039, 2845, 4945, 3053, 2859, 4957, 3067, 2873,
        3081, 5052, 2887, 3095, 5062, 2901, 3109, 5070, 2915, 3123, 5077, 
       2929, 3137, 2943, 4989, 3151, 2957, 5000, 3165, 2971}], 
      Line3DBox[{2788, 2985, 5012, 2789, 2998, 5021, 2804, 3012, 5029, 2818, 
       3026, 5035, 2832, 3040, 5039, 2846, 4946, 3054, 2860, 4958, 3068, 2874,
        3082, 5053, 2888, 3096, 5063, 2902, 3110, 5071, 2916, 3124, 5078, 
       2930, 3138, 5083, 2944, 3152, 2958, 5001, 3166, 2972}], 
      Line3DBox[{2790, 3168, 3169, 5089, 2791, 2999, 5022, 2805, 3013, 5030, 
       2819, 3027, 5036, 2833, 3041, 5040, 2847, 3055, 5042, 2861, 4959, 3069,
        2875, 3083, 5054, 2889, 3097, 5064, 2903, 3111, 5072, 2917, 3125, 
       5079, 2931, 3139, 5084, 2945, 3153, 5087, 2959, 3171, 3172, 3173}], 
      Line3DBox[{2960, 3154, 4990, 3170, 2946, 3140, 4980, 2932, 3126, 4972, 
       2918, 3112, 4966, 2904, 3098, 4962, 2890, 3084, 4960, 2876, 3070, 2862,
        3056, 4947, 2848, 3042, 4936, 2834, 3028, 4927, 2820, 3014, 4920, 
       2806, 3000, 4915, 2792, 2986, 4913, 2765, 2973, 3167, 3174}], 
      Line3DBox[{3212, 3178, 2087, 4773, 2241, 2088, 1871, 3189, 5092, 3258}],
       Line3DBox[{3213, 2099, 2264, 2098, 4881, 2583, 2582, 2086, 2240, 4772, 
       2085, 2611, 2731, 3196, 3242}], 
      Line3DBox[{3214, 2133, 4826, 2363, 2132, 2529, 2344, 4736, 2122, 2342, 
       2121, 2523, 2324, 2537, 4733, 2302, 2322, 2301, 2421, 2636, 4730, 2285,
        2635, 2284, 2668, 2418, 4911, 2748, 2283, 2747, 2282, 4857, 2439, 
       2097, 2263, 2096, 4880, 2581, 2559, 2580, 2084, 2239, 2083, 4879, 2579,
        2610, 2216, 2406, 4796, 2215, 3255}], 
      Line3DBox[{3219, 2066, 4794, 2203, 2449, 2450, 1856, 4738, 2076, 2222, 
       2453, 2454, 1865, 2536, 4742, 2224, 2245, 1984, 1873, 2619, 4745, 2247,
        2617, 2686, 2687, 4848, 2691, 2690, 2269, 2688, 1995, 4858, 1887, 
       2103, 2308, 2713, 4905, 2714, 1895, 2584, 2114, 2328, 2008, 4882, 1904,
        2648, 2347, 2348, 4823, 2750, 3244}], 
      Line3DBox[{3220, 2102, 2307, 2711, 4904, 2712, 1894, 2113, 2327, 4775, 
       2007, 1903, 2738, 3199, 3243}], 
      Line3DBox[{3221, 1902, 2006, 4774, 2326, 2112, 1893, 2001, 5093, 3262}],
       Line3DBox[{3238, 2716, 2755, 2754, 2431, 2696, 4853, 2697, 2695, 1913, 
       2014, 4824, 2429, 2356, 1906, 2009, 4815, 2317, 1896, 2002, 4810, 2315,
        2296, 1888, 1996, 4891, 2736, 2645, 2294, 2547, 2693, 2546, 1881, 
       1989, 2735, 2545, 2276, 2544, 2692, 4899, 2543, 1874, 1985, 2256, 4805,
        2254, 1866, 1979, 4802, 2230, 1858, 1973, 2404, 4842, 2210, 1847, 
       1966, 4896, 2666, 2402, 2608, 2678, 3239}], 
      Line3DBox[{3245, 2058, 3195, 2059, 4720, 2194, 2479, 2067, 2204, 2068, 
       2206, 2485, 4864, 2077, 2223, 2078, 2486, 2226, 4801, 2089, 2246, 2090,
        2497, 2411, 4843, 2249, 2618, 2250, 4723, 2416, 2270, 2689, 2271, 
       4727, 2440, 2505, 2104, 2309, 2105, 4731, 2570, 2585, 2115, 2329, 2116,
        4735, 2512, 2425, 2331, 2349, 4873, 2332, 2538, 2428, 4851, 2351, 
       3209, 2352, 3269}], 
      Line3DBox[{3247, 2706, 2707, 1855, 2075, 4800, 2221, 1978, 1864, 2732, 
       4741, 2242, 2243, 1983, 3264}], 
      Line3DBox[{3248, 1854, 2074, 4799, 2220, 1977, 1863, 3197, 5097, 3265}],
       Line3DBox[CompressedData["
1:eJwV0D1LQmEYBuDHQTKxhhyEJMggnVqam/IX6NogODQWDVFGi7S5Bo0J1dgH
5VLaWFMfSx9zGEZz0O51hov7ee73nPfAKTU36xupiKhznYtosccwH3Eg9zMR
i9mIvL0iyzQmIzr6QzL6H/uII3uBk5mIruzpbjgz38k+p8569nvzgFvzg3zk
ybxEyjdy7r2Ql6zypd/27pbnhuY/vmnp/uUKE85eErpnmeWNd+ZIu/NTfjDP
rHuLybeYdlZzx3JyZi9x7p4puaav6o/NXa70C3Jd3/aPfr27I3d5ZQxaji4q

       "]], 
      Line3DBox[{3250, 3206, 2197, 2401, 4908, 2729, 2728, 2609, 2209, 4795, 
       2403, 2211, 1857, 2229, 4803, 2409, 2231, 2620, 2621, 4886, 2622, 2560,
        2255, 2413, 2629, 2630, 2273, 2628, 2627, 4887, 2667, 2643, 2644, 
       2292, 2642, 4809, 2641, 2420, 2295, 2313, 4814, 2297, 2424, 2316, 2335,
        4817, 2318, 1905, 2355, 2441, 4859, 2357, 2694, 2756, 2757, 4830, 
       2442, 2372, 3205, 3277}], 
      Line3DBox[{3252, 1839, 2199, 2437, 4791, 2758, 1967, 1848, 2213, 4856, 
       2438, 1974, 1859, 2233, 4804, 2234, 1980, 1867, 2235, 4806, 2257, 1986,
        1875, 4888, 2631, 2632, 2277, 2548, 1990, 4900, 1882, 2549, 2550, 
       2298, 2646, 1997, 1889, 2299, 2571, 2715, 4906, 2003, 1897, 2337, 2338,
        4818, 2010, 1907, 2358, 2359, 4825, 2015, 1914, 2742, 2743, 4909, 
       2373, 2752, 2021, 1923, 3275}], Line3DBox[CompressedData["
1:eJwV0K1LQ2EYhvFnDJmbOkGLwaD4DxhnsInJNEzOtGiYZc0mJsHqypizabOI
xVmEDQwGFRQEHQyOwRXB4vzA38LF/dzXe573HM58ebtYSUVEEefjEVU0MxHJ
dMScHBmN+MpG1KciBvKEW0Se/9aP+B95xi1hhh+z+8v94YJbQct8hZSzS8/U
zC1+DWmurXdw5+yaW8e+u+/1BB39Qy/JNz2bizjErT5hvyyX+Ul3NPCgb+HR
/ISF4bfbP5bPfBUv5lcUcOqsy+3gXe8j595VmXB7KHnfJmb5DdnnDtDTd/23
T/ON/Af0FTRw
       "]], 
      Line3DBox[{3254, 2189, 3208, 1970, 4841, 1851, 2535, 4737, 2200, 2405, 
       1976, 1862, 2496, 4740, 2082, 2238, 2708, 2709, 1870, 4744, 2095, 2262,
        2460, 2461, 1878, 4748, 2280, 2746, 1993, 4850, 1885, 2281, 2634, 
       2000, 4812, 1892, 2511, 2111, 2321, 2005, 4816, 1900, 2522, 2120, 2341,
        2468, 4862, 2469, 1910, 2131, 2362, 2472, 2473, 1917, 4752, 2141, 
       3200, 3204, 3273}], 
      Line3DBox[{3260, 2303, 2323, 2304, 4734, 2737, 2647, 2123, 2343, 4819, 
       2124, 2588, 2589, 3190, 3271}], 
      Line3DBox[{3261, 5095, 3198, 1901, 2125, 2345, 4820, 2126, 3181, 
       3270}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1: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
g7xZ5P89uacW7reUt2Vs+4TfuUefKlQ4jocVyzPia8Q5Ml28eGmlvXfZtezL
Bh2zaHj53P16z4unvo/ea+hhJfDbCnwe3Xhqnmzx4VwvkAatrxrOmsLNM2T/
U3cflrzQgy5KDpQD/Bd5QD4kcrkD+yoJfRE90YVf9PUQ5CB6K3J9BP0S+Yo8
IiCfNz8ol2otW63IsCqeFz3v+WXYyIe8u9jQFcs22dLh8+Gd9w8N4bNPszTv
GBHJDfNOyZNtQOr78+5oei1nfMH7nNsjU+t9sfHUb/9i54HrT5B+4clHg2YE
0KXpVS7s2hpDRZaMzVmlP9NjvfHGmatpyHDr/FtZNjCtb/LEun8vNxI6hK4G
oEfolnUI/YvbHBzeZe89urJcz7NfTDzPeLt9Z+vr56lpYV+jXQdv8MqhXz5b
bdVwdJs9K2IvHaaPW9R8Mv9GzKtrXZdBt6xD6LfDfHMw/1TMK/PJ/DGYVxd+
odtS4UmmX/A0UXgo+jt4QCeDTi4GOlMrx9TCG6bkM4WAzqVKXlRVyYv2QF7T
wC/wjyZhvUuxfuHHTMBlPbK+762rVrOhdXLv8eV3RmNehDyL44eWjXI1OHCW
NkI/8yr95G7Qz3teVSqNiffkfBdPlGiQV8NZnN1PF3lxnOTvBZ/gkb8XfIJH
Fz3QV7IEP0RvsU6aDH5MwHqFDqErE+gRfs0Fn0TfqgD/CtjHfuC/AL3NA/5V
AN+c8lassKx7HJsMsrpWzOMxv96y1XrbEnvKg3mfqnkpK+bNg/XCvpPt+jX4
00jxh3zAH1180PKfyXFtbkGq2ygyilv46tfd2yGYJzlkjXnY0Jl63fRYuZpi
uOSzeUuObQuk7F+ODKznfOGn63Nq4QUUfTxQ0UuZQWdl6E2C4hM9AH+up9Q3
+nJN8VnkKnIW+YpcRc4iX5Hreci5HOTbX8mVLis5k8FWJd+W4K/wewr4nFBI
+TV72Fc+4LGAvoq/3Y55q6fMo5LzyWbQJ9GvN9AryaMkTn4onmI8aY//VXK8
UqxtjjxN/XlEC4NX8UVjeVpQ7ehF789TXeQNkkfEI3+Ie1us+c3FQdxWf9bR
eieieer7HE965tKdVwh/hd8FwOd2+PtY4JsGPJInSd4k+ZLQJ/QKnbrmBd+T
5SD5iehHP8hB9GQx9KOe0hcaAz0RPZgLvdgCfZC8jZDHrUD+Jnl2LehLRujJ
FcwLPWWZV/B0VXjod+DRysdY8rF5ik4i6PVk0PkKfItWfKPh/zPfSPj2LGVe
SsLnQ+DvOPV3NBHjW6bMV0nWK+vRtjvxa7+BXrE71B2kXXfUB98tMV74L3mn
dl3QIOV4lvGp1X+Zr76W3MU+xV7FTovC7/WFn84Kvyf/LoL/nw3wrf49PmZf
G87b8bs79MG5XlnTrt/Z8I+Wz89M8+G+Oe1aFlgfx9xu0PoHZ111jjdT46id
+ju6jvGTV30d42oVT7fbZs8ec9yTHvhYjZ6Yy40ao747iTpD6juZT+a/Bjwx
qPeqaNUjpphvIOZ3/g6duuCnphv0n3/Xiz96e7y7OjieD58xfbmx/RnqvMxx
2KSzj3hu8Ssbnx6J44Zrd2axiDtLHzBO/u4gxr8H/KKC0zHAZ+LvzRU+IuCx
wbqagB+bsa6OKdfFsq65yLefqnybNyPfbt5O8Xes4jffB59D1Xj2w/hNGG+u
xvMojL+H8Vp8IOHDd+TO7bXkbou6Y5eqO6gJ6g6hYyXWIfWC0F0F6xD6Tys8
dBR46mnh8cL6hA+ynpFYn6xLa9+A16TUN9LWN6lneqt6iqWemgB91gd+ofMY
6DyDOqvuD9Z9qYWbnWlYceNsH76eL3PBsdZx1Mps7cm1J13pGPh1EnTVBz3n
Qd9hwOsArrV/5CD7SI9ht2LHD7HeweCL8En0Sg98ET6Jvad2XVr7WvJvMrli
vN3YxIXMRvT4dC8hnjYFdg92be1GYp9ir2Knu8EH0UfRwylD730K/z2c56lf
GtS0xPatRW219zdI9jcIecU7lVfQLOQVVZDPTFV/RzryGZJ8Zgjom6XopWag
82friS54kwHLRx3R9+P2B7bF/OkfSzZXnL8aD3RN3leRfUHZV5G6tBHq6DDU
p7Kf6IB9TtlXlLz8DuogqQcl3mvnJ7mw33EI9ZE56iP41W91WEq/irqSaqJu
8kZdMA38nQJ/2wZ8Rj5DUVr5jOQl+5HPjEd+gvhLiL8k8bc55Poe+jAT8p0C
PaiqpT/bVJxO/t2FeC3j5O9kfALwQu9oNvAjT0imS+hBfkXa+ZWsU9Yt650O
vgifhD+oz5P5KvyUeIa4RyfA/4OQk8htGOQlchU5i3xFD0QvRB9Ebwpq7UvL
fo3oXfh39m3S4enwvxKutc/8w+cI6fB0+M+AI37zf3uulw5Ph/+V8Mcpz3/T
/Wc6/JfAvVLeB0i+h4DzfdI+3zdJmZcmn0tGI4+Vc+YE5LHPkffKuZCcB3VL
mSez5Mk7kVfj/Jf7I6++lDIPZ8nD5dxIzpHk/Gg48nzZf2qOPD86ZV3AUhdc
Qh0xEvu7U1FHfCheqU+LdYG08HG7y13axrDzm0YF77y6oF2nsNQp8bW9X5be
HUKXh7kaeVWM4klNTAdvOH+RpK6WOlvqnV2oizZjP3MP6iOpi6TOlvoa+/yk
vc8v50ZyjiTnR1IXHcA+tNRHsk/9FPvWQ8EHqc8Hol6XOl3On6ponWNKXaS9
Hyjn99twvtkTcpS6SPb55Z5GAdRFLjjXygg9KZiyvmb/79xbkHpJzpPD0uum
dPjfCK51X47D0vPSdPg/GC55w0Pks2/+5XnsyB5NCkfZxfPezJqK+v73+bJz
86Ijzl+mjiOqlHrzTMPeUzLen773IoVpvnpXrn6U8t1eVvnNdQ2XtClb5PER
e6pTdK9FfP1/L3/SCr5kyaWZDjuCucPkYTc6TI3i7Jax3qtr3qLzzbPkd3ge
x7ttF1jlquTDYx+8Ma//1pmq3boc/G6thkfbbanVtoozmeZYnr94jV/3jnGG
pN9tJhpr6yy2VTQ8ZF3CpGdGnqTxqrWvi89Ttn4fkH+FewzHL8668NXSuzTw
eXHDWcdjuIRb5nWnOz3jEOPZudy33qX+12pOzRsUz8b1jheYudONbO9tHb7a
7xa9HumQK7H/bBtNCYvE/rMzi75Z9iN9Yys4he3s2vQOLbAqZVSymoaKnD3f
8JPZcYq5EpaQa8gDGje63PbCtvH08PjiVQMyXqABjcbNjz7pS5mLPX3y5Gwc
VZrZpRb5OlKoe2hRm+oetGauXh+DbnHcYv+Ibns8fTDvNpPnRoEutdbFc4MN
e7eWy+gl49kK41thfIL9mnfhzUN4a6end8b3D+Xo48PqDH/nT63aDRmXpU00
v9g+7OSa9r50xqzV0IhPz2jJkGpZEvudu9Tq/Smxr/vWBS+sPHfeprCaxQNL
LXPmiZcP18m7XUPPjpsb9mh6kSLWx+1dvt2FF3V3L7e39zd41KzPzYs50qmz
c4bvXHOHH00PCB5zNJ6i2n2te7ekK+S4zMGnhLnDjK+xXNa60th1eZ5Sk+dD
mz70dSKnl7+ftPaO4WYljLYMOOBPzlX3Hrv/zJfi8r/ZsHR7CGc+aLr24Ppw
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
vFZyZG05dlJyZ5G7N+S+RdVfnBf11xzUX9s6vO5W8uIzLnKj12xN61jqZP06
y755ut8bGfZu1oqqF4PYv9vXiR5Po8gr//CuDcLcqemFOTkS6ymHulZ+ifXp
M78tlRPrlJqu5vbmxnG8283gVqvZvjSz3dyYdW++1YMnJp92vRTN5+fu6EfW
tynsYbmPI3oEyr46D1D76lQT++oL1bkA58W5QAacCwyznO9Qd2kYj3meYcRj
5yfsPDFqwqvfQ2i02rfnMWrfnqZi3x7nDvxqScpzB+UfLjp44RynAvbnB6pz
E16Fc5N6ODfRgz9pNSDbmbnVYtja7tNcv4hAGlyh8PH2QV50amTWT16rIznU
3HJS3w9BZK7oJKHzGugc4Tu0aNmP0ZQzzvpaBrcbXKvDde9BCwKFP3RJiz9y
HtEY65qIdTVR/Ccn8P8J+A95UQDk5Q157VByJ5F75+/IPa3gH6P8igxfHs9r
sq6YX3GdB2/3LXgqu+9tOffh2kq+rA/5ZoE+zMU5Sy3oA86V+AjOlY7jXKnL
/K956hYKZe/P+woH3/dmb/u1x/32hSePv63Gk4wfqvjP9RX/qS74L+dbDwuu
eBHQyJ/1jiy0MqofS10VfvIFfi/gz9myU0ihwzFkYNmy2Q0HR+68OaL1nMEB
VBXnX68wr5x/Zcf5UW3oeVWsaz7Ov3qDD6LnTuqci2qocy6aK+dc0Un8pHKK
nyT8/KL4TKZafC6n7JG8lT3yLNhjauUodlRVnd+x2JHY3Tycl02HfuZQ/OFq
ij/UFfypq+5f8SGt+1edIMcYxWd6CD6/V/e4+IzWPS6RV5ySF70/rOTVDfa7
Xtkv1Ulhv9tMNuB8sCHOB6sof86NlD8nL/jzjpB7rBY9rXGuuhX4awC/nG96
gD/vwJ/12B+rgP2oFtiPem2l9tPqq3jKroin3bA/1gD7WpbY1zLDflpR5c95
BPx5auW4BP6/lPID3AF+oBf8fITyG3wffqMO/Lyr8jMcAD8zDf78lvJXHAt/
NQD+eYbye3QTfq8g4vsx3FsriPjeTflPPqf8JwXCf+5AvH6ndf9NrWO9Qzvl
h2k1/PBpxH1WcZ9OIu4rPTlu8gjnsIXg50enzCuoNuI+6KdZoP8G6Md6yQPr
jcF6a8MPC3+egz994YfDwU+Jm+A/afN/uro3SE/+x3uD/68cw5HvtVVxn+8h
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
P29z7jNLHOtNPb/oyHpNzy/S+64rjnVKvOd0FtcpmZXr/bir9n6c1OS8Rteb
LTl/SaL+ynGH6x7gueu6O5T99pm0QxHOW6/a81azhnZb7rwXKXov8l7W6flZ
7+g6/Tj3heezP6n3eZX32Zt8Ns1HVd7nUvxSKH4ps+2T03lfTG4hjyIa/1aW
OLk7/m0m/vB54p9c/O4J5z62NGYf+w/mhcnM408zL5RnXijBPH6OeYE8fJmP
H+uOX7oNv7QWPxaHX1L+NDzqAId6F9xQeNSygDx/L9zQBnBEn4AfmuLMczAt
qT/jxTBeAvzrfqwjitj2EW2f9No56P6aORx0T+0K/mQn/kS5mEvxGxnxMZXb
rRxv5Xcrh1I59soFjoZbqRx75QIfcH6v5OJ70/vdoPEio2n/zNrh9ZbrPSDr
/2d4OnK/RnmrdeBbloZr2a7gmBY+bmWn+Da5fXzLoz0T7/PxK3VfyOqN9/yK
H8vPPkbw/tu+Dzv7uaod6sT4OavrnrR81ZJwVZWzqnzV690OjvtNIZ095Th/
P+rYp4r1/Mn8WMry480SePWL4cj7y9U95tH9K9V/jHlW51/Vcw8c+g/Qo7x7
vXf8u713bJQTfRbOaAs4rgWc/SJdbb+YI/TL9W636y1vcWP0sCHfJ5lO9q+s
ujC4UruIH7TdDO0mi2i3FsRL79r4RxKIf0pPsvHSeBsvSXvipVjiJeIr0fiq
Af2yAP3vo387flXnwWFZHNdJznjD5MGfPMG+zRXrr0w+/JVyi1fAMVZ+8Xj4
5fDMRf2V8s4nwt1V3u717q9/mjyKczrl0r/FeVwMPGPl0mfENU5PXsvyhtX/
eHPBHVbevN6LVO688uaVR63c+ez63szK9b2IFPzYL/gxuPX421hvBfj1ys/W
+itHuzX8bP3er/neADcdPalt/5qfnp58APP+jqBx9FB5fz+aTXCqq9GP5+hf
5Vc/iPzXdsnV1s1e7x1fv8Shfk1TJKKeJ/LzVf+8caece+Xet4J3/5mNM009
G2eabsSZd7IeX8X6+h3i2HvY1wplnyTfcBsP17ZxgsywcYK0zSBOuMu57yoJ
7B8iF92PVXlr4swN+Ns7spnDfr3le533eWUZcf56Z/vLM7R/Gdtf5qjtL9Oe
/rL6dhPPJATimaD3WCSG91h2OtcXZia/u5b1hfZ7O343s981oGvtH5JzbDC3
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
8LsnKT/EqV+2U/4/AB/eFLo=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{302.29403875300864`, 203.02222011106213`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 2}, {-1, 2}, {-2.0199897487286775`, 2.478131493909571}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.1845339225845908`, -2.7908532278069305`, 1.5026701724217857`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6817108040498934`*^9, {3.681710863409289*^9, 3.6817109222436543`*^9}, 
   3.6817549646837378`*^9, 3.6817605626239214`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"u2", "[", 
          RowBox[{"x", ",", "y", ",", "t"}], "]"}], "/.", "sol2"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "*", "x", "*", "y"}], "+", "0.7"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817111254312754`*^9, 3.6817112068259315`*^9}, 
   3.6817114140087814`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 13.25, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 20}}, Typeset`size$$ = {360., {141., 148.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$4704$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$4704$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[{
         Evaluate[
          ReplaceAll[
           $CellContext`u2[$CellContext`x, $CellContext`y, $CellContext`t$$], \
$CellContext`sol2]], {(0 $CellContext`x) $CellContext`y + 
          0.7}}, {$CellContext`x, 0, 1}, {$CellContext`y, 0, 1}], 
      "Specifications" :> {{$CellContext`t$$, 0, 20}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {191., 198.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6817111769512224`*^9, 3.6817112080320005`*^9}, {
   3.6817113968548*^9, 3.6817114149378347`*^9}, 3.6817549646997385`*^9, {
   3.6817550407210865`*^9, 3.681755064789463*^9}, 3.681760568086234*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817809676220207`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681780967645022*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817809676710234`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817809676930246`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681781125642059*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817811256680603`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817811256940613`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681781125720063*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817812683072186`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68178126833222*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817812683552217`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817812683872232`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817815743507233`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681781574373725*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681781574398726*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681781574421727*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681781771963026*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817817719920278`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68178177202803*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817817720570316`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817818103092194`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817818103612223`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817818103692226`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681781810389224*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681781862922229*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817818629472303`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681781862972232*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681781862996233*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681782649810236*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817826498342376`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681782649859239*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817826498832407`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817826499652452`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817826499892464`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"sol2\\\", \
\\\"}\\\"}]\\)\[NoBreak] is neither a list of replacement rules nor a valid \
dispatch table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817826500132475`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \\\"::\\\", \
\\\"reps\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681782650038249*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Goal", " ", "is", " ", "to", " ", "make", " ", "PDE", " ", "over", " ", 
   "the", " ", "following", " ", "mesh"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6817119833273444`*^9, 3.6817119994762683`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meshMixed", " ", "=", " ", 
  RowBox[{"MeshRegion", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], "]"}], ",", 
      RowBox[{"Simplex", "[", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5"}], "}"}], "]"}], ",", 
      RowBox[{"Simplex", "[", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "6"}], "}"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.68171178446297*^9, 3.681711905668903*^9}, {
  3.681711960613045*^9, 3.6817119729007483`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     MeshRegion[{{0., 0.}, {0., 1.}, {0., 2.}, {0., 3.}, {1., 1.}, {1., 2.}}, {
       Polygon[{{5, 3, 2}, {3, 5, 6}}], 
       Line[{{1, 4}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "VertexAlias" -> Identity, "CheckOrientation" -> Automatic,
         "CoplanarityTolerance" -> Automatic, "CheckIntersections" -> 
        Automatic, "BoundaryNesting" -> Automatic, "SeparateBoundaries" -> 
        False, "TJunction" -> Automatic, "PropagateMarkers" -> True, 
        "ZeroTest" -> Automatic, "Hash" -> 6770903022794378786}]]}, 
    TagBox[
     GraphicsComplexBox[{{0., 0.}, {0., 1.}, {0., 2.}, {0., 3.}, {1., 1.}, {
      1., 2.}}, 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       PolygonBox[{{5, 3, 2}, {3, 5, 6}}], LineBox[{{1, 4}}]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "Graphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{3.681711906897973*^9, 3.681711973545785*^9, 
  3.6817549648397465`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "New", " ", "boundary", " ", "condition", " ", "will", " ", "be", " ", 
    "something", " ", "like", " ", 
    RowBox[{"v", "[", 
     RowBox[{"1", ",", "y", ",", "t"}], "]"}]}], "\[Equal]", 
   RowBox[{"Evalutate", "[", 
    RowBox[{
     RowBox[{"u1", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], "/.", "sol"}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6817173000994463`*^9, 3.68171733390138*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"u1", "[", 
       RowBox[{"x", ",", "0"}], "]"}], "/.", "sol"}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "y"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817569871774178`*^9, 3.6817570507720547`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
5Sx2nbiloUgU/unw+Prf+aL58Qv3p/omCL+Vnui53pHyRWO0ei131EgQCleY
TlE0z2AvvWncrSQuJiSlYw77OUD5kxJZnmcTbXf1srqd3V2kPI8JbbfKr+e4
hT5Snmckbbde088tjnzJYz89aLuTu/2yaGecw36a0n3Df2JL0+inGeznW+dj
333N4oQNsR1fVK+U8mkZ5vMTzVJjhTeLvj/5O5+mXdQvxCw1Rah+8tr27zxP
mxE/L2soUoTcpUW9Bb149lN97OX2VN9koXL8VA2Ne2nsJ5/GE1+s6BhbuyqT
/YyhvIeVLD/Th7ZrpHZ53MIEKT/Tkrb7PsS5zFw1j/38ou3GDFPfaLs3h/3k
0Ha1vMfvFufBwU/kwCWDFI5JgnOLu1P7N3zHfrzpvjpzwITHZ0oS2M+F1G9l
vmZvhWfKDZ3+zoMVG0em+Zq9Fz4uy5j+d34G42xRwa3Vk/yl/Myjb6ZOGop3
glpogofPsGT2c53qGkaWxQTNffien6MO1bznpwv1q99q3zucxc9RFjR+2H+W
akh/lxx+jsJnvTmxZ3a3kc7T/83T5LDnAop/f9fUGg7P0RT/szd1zzkszmbP
Dyn+86uMw1e1yGLPVyj+WoYnj69rmsGeHSj+wGMD34Y4pbDnTRT/sFNW3rrm
Uh7MhOK/76pm9nceLI7iffVPzvS/8zPjadxy9fj9eln2ryXPOrWSfM0yhdEj
FwwY/zKBPaNO5HPzNekeVqns2WVPlLdZaoYQ26veIXHcCp4xHttiqY2Z0fdM
9ns48ewJDUWG0PPflFMaCikPtojyHodk+Rl8us3I/nVVN1PKN1L811Mtxl7y
lvIzARR/mGbtie5j37PnfhS/z93HI3q+T2XP1yj+zIaBi2Z1e8ueW1P83b5c
8wivjJbyuhS/y4R+Y//Og+nWjPfnCLdn1VNK+is/c4PiHdTgfbeW/73fwXO7
3Demqb7ZwqrArIAk41j2jHqiW4OUflTpvWXPykMujHLUyBYGe66PbDUrlT3/
Of+zhKLkSO3AC+/Yc9HB1Z0UjlnCxEdZx1/YSnmwQNTny/IzOhT/qYZvKw68
kPIz+GzwJiR9VYs09tyW4l9ov7TWvmUp7Pkwxb82bua8bRffsmclil/FYXRe
nmcce7ak+JvdvjTu5Y9I9lxA8fdN3zHo7zzYMcPYlgrHPOHExV53/s7P1N40
ZI+GIk+oEzG4meHpUPZsTfG23xy7V8yzwfOf+0qusHCec+tpn2LZ85KSta99
zXKFiDoRu8X8CTzHt4oZ7qiRK9ypcNubb5jMno2EwR5mqTlCSkpCuxiTVPbc
HnkkWX7mKMWftDG/MKLnW/arTPFH5l3uf/JxInvGZ3nCU7/FOxPYcxHF36my
2Cpqfhx7XkTx96kTZmajH82eYyn+92aVA77XlfJghhR/0+7Xc/7Og334ceWq
WWqBUBJ+/uHf+Zk/zysFgku7rtVlI5+y54TJZvZivcuKNe9PVsa9YM+oX9X4
tWDl2OVR7PnJFf35qb75wqIFPfUjjsew5/7hl8N8zfKFzQ32JTeviGPPf56z
84VOQl6zVoEJ7NmG8h6zZfmZEopfLb4ys8mRGPa8hOI//nvbgSerYthvPMW/
t2+nDUMvRbNnfLoMVNES9F6z50CK/4rS5SIxbwPPOhT/be1p3Xo3C2GfE+9u
7CfWFb1SZCYldXFln0+TEi6YpRYJHfcqf3zbxZd9DlAe3lDhWCQsCUkaN/C/
4x8+UUd0eMyhywXvQ9mnGsWVs6rJ+4kLw9jncfsNs8Xnp9WjgxdsHxTFPuu4
xYf6mhUKy65/bTC3s5TvSqS8R7wsDzOB4g/e1NT75n/3cfh8QvHf7HPvYZz6
K/bZn+LXVv1u1MvmJXt0pfgb2uktyb73nH3is/ibx/dBV6Xr6q3lBo98zT4I
Ze47AxcWObG3jkdcejpqfBCEemfLLkxzY28nfFXPmKWWCF8ffFy+rc599ob6
w6JWFl7t/B+yN9sGby01FCVC635nnJX7P2VvpfR7lm22VYk7GMzeli24Pj3V
t1iY1KRxnaF1n7M3Pcpv/JLlW9wo/lPmy4wWT/Fnb2oU//yH0aEzywOk9x2K
39N83bqnqx6xtzoUf57D8/5N5gewLxuKf23W5mbem/zYm0rbf4xSfcuEjO4l
Fhd05rI31DcNb+ddomW/i72Vrk3WcNQoE4wd+9dXiTjO3pZRHWLjkwbHHMIu
SXm/xzdqKRxLhZS26lkpxjfZ28T8hps0FKVC1r7wINftd9nbU7reeNxdWLDH
+QF7O855lWl5f+dV6lD8bh27jNuaup+92VD8aQvrLK1v6sTePlD8rceebHFr
+2X2tpTi36Y9dsJdt2vsLYHiV3Zts/jziOt8PXSh64x2hfUgx4/ezMvpetKo
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
wMMkOp7/H0a07cc=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
FJsrP6z99BVj24JjWMVr/wdQH6j/
          "]], Polygon3DBox[CompressedData["
1:eJw1mgf8T9Ufxu8953w1NVQ0KEU0tVFEew/RlialRbT/FRmpjCRtoaKQUpSi
EiqhKBoiGSlR0R7a/+f9e06v1+/87nnuuet77ud8xvPcHS/s3LpTKIpiof4l
batXimKWthsLv6n+glgU/YSHCHcQ7ircqCyKg7T9RnhjtZka30jjb6i/gdpU
4Yrwa+qvr/aacBKeov5E3aSezt9L538pvJ62DTS+q/YdoH417XtVOOj4V9Tf
VO1t4U2E31K/lo45RXgvHd9M/aB9k4T/Fn6J66lNEY46/lX1N1Gbze8SnqH+
rTpnHx17sLZrhHfQ9nyN76t9LdRfqDZAeKiOv0Tj2wq3Ft5b483VryRf7y2N
T6pwo6LYWpsGGt9X/SVq9wiP0PilGl+h7UrhLTW+s8Ze1Pn11d9b/VXMj/Ac
jb+df++32j9C+AXhLswnzy28Su0N9dtrvIn6h6q/iHGdP1f4nfx7/9G2lvDO
usc+OvZCbXdS+137fuMd65iX1f9X+yarv5HaW8Ibaux19VfqnDHCY4RHCe8k
fIHwfjq+pfobat804Woan6r+ZN2/ocb209hqri28i/D+wl8JV0t+fzOD71dT
2200/rX2vaf+BI3vILyHjl+p8Q2F39XYnGwvX2j/aOHRwk8yn8KjhEcJPyF8
hPD6wnV1jSPVX0/nvyM8W+Mva/xT7XtU+DHhkcKRZxb+p/T7+03HDxdeKTw2
2/vDwg/r+MeEf9D4A8Kflr7fWuG+PHvp8TXCdwq/K/yo8Ds6f6Dw3Tp/qPCP
Gn9QeEnp5/85+frLhEdjf8JbCrcS3kH4G+E7hOcKDxeuI1xD+AThOsJ/Cz8j
/JPweOF/hZ8V/kX4eeE5uv/dwoN0/2HCHwk/JPxQ8PNNFP6f8P+EHxL+Lvl5
P9L5I4RXJ49PFX5E+BMdP0x4uI5/XHhx9Hw9Gnz898n3W1B6fn/S+EvCL2r8
c+E/ku3pW42PE/5T+Cnh74SfFd5aeInwIh3/tvCvyff7QuNPCa9Lfn9fCj+N
fQuPE/5ZeILwKuEbhV8THiL8QfR8Pxg8fz8l//6lpe15e+EthE8S3l54i4rt
bQsd/w5rIfr99g3+/Q10fG3h83R8A+E3o9/3ncH3ayO8SV5bHwjvrOO3E27H
ehduKFxH+ALhhsI1Kl6vNfLv3bzi9b+58Gz1y4rn7y8d/6L6S3X9wcIjNX6Z
8DLhe4WfEL5ceLnwfcJPCl8hvFnF9r+Z8Cz1v9b9b8VflbaHj3V8f+FHNH4x
8yf8iPDTwp2EvxQeIjxW+Er8n85fJrxYeI5wT+E1wt8IzxXeRnip8Cd5/taq
HaJrbMZ8Y9vC7+H/8vmF2nPa/KrxF/j9OvZw4T2Em6q/G/FB+BLhXTXeRfv2
VP9Abb8mNkT/nh663sPCu+r4nYQv1jG74A813lB4N+HGvBu1w4R3F26ifn0d
v61wW+H6Ov73ZP+yVvgZ7E/HjBV+WdfvKpyS4+GM4PhC/NmodEy4H5+vfbeU
9sn4ZuLJpqV95hP4QY135/l5Ro3tJ9yN3yrcQbgOz1g6Bo3Udit8bOkYdx/P
lBw73hDurn5LnT9OuCPj0XO9v/CFwhfpGQ/R+LPCl+HDiK1qW5WOIa9r/FDm
X/hy1ghzIzxe+ApsQri2cKt879vVP1T7DsAWtW9ijj+7qH9Y8G9vrNaDWKx9
HTV2kPDdwscJXy98TvT6OVDH76WxdtHr4SDhvYX3UbuOWKV9F3IvYjT5BTYQ
fc091D8q+F4Ha3st8ZM1FX2NrqWP4dqcs7v6RwZfizneVfjw4LnnHewmfETw
uzlcbYLOv1L7hmnsCOHnhTvh44RLtX8Lx/izcpwj3tUXTuq/qnfSWP1DdL2F
Orcz71i4uraLha/i/Qhvqu2nFdsx9nyE9h2vc27Uvmvy77kiOm4SP3cmxkbn
WeRbRxIDgvMW8pc2wmeQM+j+B6jfUv2Pda27cr5SV9vPhG/K9om9XaN9Nwhf
Tf4lfBmxoOL5ZP6vFD4u+H3sK9wp2sd8VTonwfc0Fx4mfKbwbcLNhIcKnyHc
m9+WbB9Xat/uGns82Hfjw4nFLbTvGeFLhO8VJn/6p3DOciZ5mcaHa3uWcJ/o
9RxL54hXaLuhcCq9xrkHOdYqYnHh3Asb61LaBrC9jcnZSvuAPqX9QbXSPud2
bdtG++umes5GvB+1gdp/rPZdF22T+JcWwbbalDnW+DHad63GJqiNVztR+0/K
bYrGry881lqtuvqNgv3/6dHxfJ9gf3UKzyi8Z3B86Rnsq/Fx+LpjtG+ScFfh
0cJnCM8W7iU8lfcl/LLwNfhw4WOFJwtfLfyU8PHCrwhfKzxO+AR8qPB1ws/h
e8knhX8qnIOdpvGZwj2EpwifLjxLuCcxlvtHx899g/3zyRXnCuQM5BYnRtcR
DYPzmT4CvwjvKrwTv1dtuo6/Wfsm6dhWwtOEbxJ+Sfhk/B/+Otg/nxCrTKRo
EByvW6u9ruNv0b7JGhiQvD4PCLa3Vvhnfktw/L1d478RD4TrCR+nceqdnYPz
qTZqb+h63fD5Gjua+CvchZgq3C3Hj5raLtXYmWpva7y39k2LronI5cjpyB3P
FX6/dA0xO9qG8YXnBtv2PcG5EjkTudrZ0fGoifbvWfGawvbaBa+184nZOn6Q
9s2NXmPY3jnBa++h7Auqsya1r4n2DVD/6Lzeu2rfi8IT1Y6qeH3fpv4heb0f
qX0vCHcWfly4b/ZN65f2N1wD33FyvnY7tfmlc4hZGuuXfdMG2p6oYy7S+Cel
c5R5rB/hRaVzmPeE2wsvLp2zzI/OQZaXzjnITai5Piudk1CLnaW2jfqNde09
NHaB2sLSNda70TGG2NM6OPawJom1rYLX6lnkQzr+Nu2bHr2miS2nBK/1c9Tm
la5xZ2qsbcW5PTkgueDZwnOE+xA/hbtH+46ttV1GrJV91dL4+9rXS/3rtK+9
cF3h83TMuuh69lXd77mKr4FvuCP42tgcc9892BZ/ia5PJgXny9g4sahbsO2T
n1C/TQ7On3+PrnenBNcD2AhrdXCw7fwRXX+/Fpwv/xVdv00Lzr/+jK7XpwbX
D8wpvuXe4LnmnWHr9wW/S3wAvqV3sG+omlN8afBcsybwNX2C1wr2gy2eFHIs
is4vThfuXnHMayl8TI6F2CS2eWxwbCJGtRA+Ojh23YyPED5NuBvxTfgk4VOF
bxG+ER8k3Eb45op9JL7xtmDfiU/Dl/YK9nXYVKfSMQtbYw12Lp0zsDaJCVeV
zhmIFdgEvqpfsK2Qk6/W+OOFc/Wfo/mIl4LzSdYIvmpA8NrZSjbyCb5CeKZw
LeFPC/Mv5P9bCi8S/jCYrziKGCi8I2sa36vxhcIfBPMzrCFs84HgtVVT44tZ
Szn/hzOBO9k032+j5Hx8bjA/szb62Z8Xvkp4Y43PY20F1/fjhGvq3usLT8Ne
ci5Yo3SNxxpnbd2f1/7mOn4BazuYT6gh/LHw+8H8EDGC3POm4NhBDkusvyw4
tyUGkIveHBwb8KH45ruCfSsxg1ztluBYQg5BLnJpcG7xVXR9PE54jPDonBtv
rm374PqG+vOp4Pr7m+j6+bng+p9YTm59Y3BMXxNdr4wPrj+/jq4/nw2uT/EZ
xLL+wb4kJvNhbwbXbz2JqdiW8K35ecl9Ogr3E+5NTChtw31Ze8KDStvwHcyt
8ODSNt9PePfk3LMjNqmxvmqP5PxrcPQ1h+b8jHudqn5N9f9S+1P33DI6DyKm
DdW1Ls25Zlk6n21NDcKxar/nNdSz9BpkbbFmiR+HFl7LrMHeOZ6wNu8UHiJ8
uvA9wncIP1x6DgZF8371/rsHOZDw1sIfFuaDyEfgg9YTPgxfqfM7CO9YON/f
XW174WrCPwbXA9R+5Gjkas8n55K7aP/7FfuEXqV9DL5i++i6jRz5CR3bh3dS
2if1j+bl6uc5+1vXmJSca+6v/kcV10TURtRnIzX2UnJuup/GP9RYD7X+Of72
im7MxdnBYx1z7VBoG6Jtghh6VGFb4ZrUg7Wj78U7P5ffHmwLPON5/NbgZ6dm
/750zUotjw21U//8YNuaHszV4fPx/djUOcSmYFujxoeLYU2wNrChi9W/JNi2
yDewrbbCPSt+px2ELw5+17zT9sIdgt/1teQYut7m+GSNfaf936pfB3sV/lZ4
rXBtfGw0Z/G1+iMLcxl7B3Nd5MjkynWEazP3wT6TaxJb9wq+FzGWWqZZcOyt
qgmFmwfbDjU8XCcxk9i5Wvu/KhyzGwrXCra9b9Tmqf9LcL64juPxMdnWvqcR
Q4O5C3wCvgGf+Zvw+MK+FM52nfCEwlwuczYg1wvM5XT4zsI5As87O5k7oEYj
Pg6Mruep6+FSdlT7Sff8gRgANyq8hFgt/B3zKbw0mBP94b9zonNCrgXHvU10
Tgf3XVf4h+DfUze5XoTbhbNgPQyI5sKxQWwRm4fXht9mLbyePP+sSeZ3RcV+
Ff86BttNzoWYY/iK6mrz1V/Nb1T/GrXP1Z/I+tV151XMkb8u/A++NJnrhrOg
kGAfY1+oXQ83qfYl/pUlpP7jybkvNTG/799ormQl/kpjK/H5wTGN2DY6+VmZ
Y+YHH/pHsL/Dt8JZEteIb2PhKpP7cCDML/fn2bcQfjqZs/452F/AZeN/4KKp
eah94Kw2i67R4bLQPP4K9gFoIS8kx3ZsjlrlC41/Hhxj+f1rQ7bT0rlmbfjF
0muoV74/dRv1223JHAA6CnoK3MACYlJ0PX+Rtu8JL9c1p+Pfou8HR8Sc3pRc
76CtwEERH8h30T7gvIbDJSbPPTkBuQEaUI1oDgRtCD4E7o0a/R71v9e+FzS2
Qu3q5JwGLQZNgFxn/2RfCKeClrBHcqzCB6OVwKnCraJf3AHXkRyr4EiqtIbk
sT/U7kyud+7ROU9E12+sGdYOMYX3g81j+8SQ8cnvnHdPTOJ9dNH5T6o/qvR1
aKNyDsE1T03O56hhyT/aJMd/aljyldbJ+SE1MflN/WAfqL+q2hN+gLyilY47
Re2E5PyUmp3a/eTk+oAanVr9pOT8mhqeWv7E5Pyamp/af37FPo01Vj2/b+IK
c3pXcgzcM9omsU04263y8XC5cNBw0XDgcPHkjHDHcNI18/tGq9kWn5ecQy7I
/pjcEk53y7y+4IrJSdEO0cjIVcn50AbhUMkF4Yjh2slB4Y7JeeG+4cTJhXsk
+2Jygk3VH5JcW8KBYV/LK65zWfMjNLak4rqTYx7J64UYs1zX2E74oeRaFs6N
9Yc9rQvmIOHuidnoZOhlxHLO4dw1eX6OJ4YVjmG9k/k9uGQ4pXuT+T24azil
+5PXHGsPzmpQsuaA9gA/gLZGDgkf9liOH8STVbl+IH6Qg6JFPVo4NyXHRAtB
cyH3RENCS0LTqNLGKuYfhuT4jb+BY1xP+x5M1qzQrtBE0M5Yr3CKzMnDyRoO
2g98BNrO5BwvXyms3aGR/ZPjJ9onGiXaLDUn2iWaH5woa3JgcryBo9yY35is
kVFPU1/Dj1DTfpvzDWpd+EH4Dep5+Ds0JPgR+A74QjRNtFxq2A2y/VHLoHFU
1VIVc3zko/CV08kngm0IW6JmoXaZgT1XrGF9WFrzQttCIyyDa3S0Q2qGz0tr
UNQS2NcW0TH66mhNb0Zpfg6tDw0CfgW+CL4OjqhZ9qH4UjiC5tmHds/2u100
Z9IjmjNGp8Bn4jsn8r6DYyCxEI0XzpP6FO4dTrdljtnEbjiFH0vXPOtyftsi
x3BiORx0k2yz2C75PxoD+S75O5x002zD2DKaK1o9nMCGOX6ul+Mz8ZuasFqO
H8RT4hk5PT67bzK/BX/YszAXgeYEn9mjMN9FvlAPPyp8d7QGiV5BTUhtiOaG
78SHUmsPqlhHuUB4hPDdFesk5ws/Fh2v60drOGiPaHJogfCRaHXwqfB51PzU
/mju/wbXPC9m+61Ec/bEHzTr9aM5e+ILx1MT/C3cL9lH4CvgrPsn17ho59R8
1L7kSORKcJIDsv19FexDiZfYJ5o+mnutimMAseB54qTaQO0bUTrHHy58FzZb
ugYYGs35kK+T75PPwvmgBVOTwgXBOaBlobnCRcD5oJVS48IF8fvQGAJrPrlG
RWuEs4jZ/qjx0SC3qpgjqOT6Ae4ADYxvLeCo0MaOT+aD4KjhquGUfs35MPUG
nBLaNPkyXNODFfP/1NjU2vcKjyldQ4wRHlxxzX6R8Kjo+oX8ekLOVx7Q+NOl
a+hnhe8XHlu6ZnlG+D7hp0rXKGOjNW+0efg8tHA0YbR1NFy04uOSbQMbgfsl
n0bzIke9NsfoGwpz+sTuP0rnflU5LLlCstbZMq9N8lVy88+Cc1uemWdfFpx7
/UYMIJ4LX10pqnI8ct0GORd7Mzl2NM6+4VhiTGGOFq72jeR3R45HrjcsOTdr
ln3PB8lcApwB9eL7yVwCHAP14HxyjsIcA/XfO8m1PTUytfLbwgcXrvmp/ecm
1/bU/NT+c5JraWp+av/BybEQH4wvnpdc+1LzUPuwxnmX1Ais/Q+TuQxqburX
R5NjRfPsKz9K9g1wBtST05LXGjUItciCZC4BjoH684HkWNc0+7L7kmNxk+z7
Oqv9UHrOV2tf5+T3gU1Ru12V/L6o2ajdGiVzf3CCcIPki3AV8CLUTuST5Prw
KtRmHdVWqD9U+xbp+muCcwdyiHrqb11xbkTORe5FzTaS2BZcy/FMnPtM8LN2
Sn5Wanpq+yuT1zprnlq9P3NWuoZ/QOd2SY7VxGxq3RnJuTcxg9hxefL90PDQ
8qrl42fpftcID1B7rDRnMETnXEHOULgmpzbnmE1yvs65lybnKuQsaG+XJWuD
cKBwoVU2HXwPbL1bci1YlaOSCyRzHXAk8CHvJsdCOBC4kEbRtVOL0nwnc8xc
8w62rVjDQYdFj6Ve4vufg/E9tOhcl1qIfXwPBH/KtY6lRWs+8AvwE+Tjp6l/
eGkNDL4JjQodEg6J+g2NDn5px8J8BPUiHE494e0q1pzQIRtmfz8rmX9AU4W/
RtPj2xE0RrQ+NEC+BUETRxukpqS2xOfge9Cs+HYETQgtC5vD9vhGaJuKcxDm
j5yX3AS+hFq8bmFuZGYyH4KmDJ/+lnCjwpov/DmaHd9WwJeh5aGx8S0EGgva
G5od3yKh8aHlobnxrUzVN0jCr+HvCnM88C9fJPtifDq+/fNkX4yPxlevSNkX
l/bV1yXX8suzP/ws2ffjs/HdXZNrxSV5faxM/paBHIFcoUfOHagByKU+TubX
4EDhq6Ymx2pyenL7G5K5gBXZH9dL/q3YELb0SfJaYg2wFhYnrwViLrF3SrI9
YVfUUuSS1L7Uy3xPQX3HXDAn1Adt1P+xcM0JP7lI+9oWXrOs3SXJsZ0chlxm
ebJ/JAYSCxcm821wuHC5nybHfnICcoOlybkPORG50bLk2pSYSezcKXltYMPY
MjUhuduqvP5aJnPDXB/9sAUxvPA3G+hnr0THm1vh2oQPTtYv0cTRy85N1v7Q
zOC72ybrD2hs6D9nJ+sBaKToP2ck54LkhOgtZybrS2jK6EfkuHAd5BzkHucR
w5h7rhHtU+kPC/a1HZP9JRohWuFBws0Lf4PC9yEjo/NE6nj0zrOS9Ss0c/Sf
fYX3LPzNCN+OHJKsP/BNA3orv/lNYl3huWierMei+aMnNknWF/mGh+9JDhU+
u/A3C+i71CBwLRvleNgsmfsjHqKfNk3WH/kmiO9PDkzWL/nmhe9V2iXXStRM
6EvnCN9eWINEL9w7+dsGNCm0qX2Sv33hmwe+fWicrNfCJ/J9zl7J2hWaFtoW
c4IWzDtmri5J1lrRYNFiL06uJakp0baPSdYn+SaGb2OOTNZn+IaIb4kuSK7d
qOHQG6m5ZhTOccl1DydmFP5mCX3n6GQ9k29u+PbmqGQ9h2+Q+Bbp9OS5R5NH
D70wWTtG80WPPCK5VsAf8K3TeclaO5o0+tp+yfNf9U2R8EXJWjQaNPolfgX/
Aif1e2kb434Dg20PjgzfDocCl4Kfwl+xhqiDDkvOXfF36E1wi3Cb83OM76Dx
+wtr3Ohx7ZO1bjRx9LHzk+2ZbwTQs05L1rf4pgF99/9U58iz
          "]], Polygon3DBox[CompressedData["
1:eJwt13m8TfUWAPDr3HtTRIYGSfVUlJJek6I5lXmI8IxXmSMqYyUNKpQhXfM8
ROaIVzSgIvNMpiLKC0kKL6m8912fff5Y96z1/a299zl7+P32LflE57qdUhkZ
GStFtpicmZExSezNysh42sDDsH+ejIx+ojDP67M6X2W8qs/X1PfZrqOx2qwn
G2mb+eoPxHny9ayo2KAvn57l4n71C7a9nQ1Rrxa12AD2COti21qsBxthH++r
54k67Dk2V197fQtYfuObWTGxnRXSs1JUUffRdy97Ut8aVo8NYTXY86wG68aG
2ccs9WzRne1jp/Ut0NdDfa7xdayIWM/OYyvEA+pe+sqzd9SF9O1gV4jd7KI4
J2K/+g99C9lz6nWiPstltdgLjtuajWDrWF+2ha1lj7F3WM3YluVzjA3sQrGR
5dfzhbhb3VXfTSwnfgsrqj4jvo/zrX5GfCw/zmbr+11flv2tZAXE6rgP9Hwl
Kqtf1XcP66DvfH1b2KXia1ZYz+fiLnUXfeVYC301WXc2XP8c9VxRQL6VFRc7
9BXRk5etVReO38zOZVeL69WnRD5W27Yj7XuEKB7fwWfDVHKd4nodSB+rmn3N
VM8Q+9PXtCqbpp4q9rEurDIrEcEuFzmOMSD9HeO7fp++56rreUo+S/6dY47V
96PxTmw228/GsUPsKBvFvmUj2Vb2MxvN9rJRbDv7iY1k38TvYdvYdPGe+M5Y
V2NVHPeg/Hn5En3P6fsweuTTxFXyQj5bxrXWN834T+q96m7qU2KO/EBcczEj
O3lu4vn5If181mBL5DfJW+m50j7qG5/J3pMfZdfE+VX/R7yibwVbLh6zba3M
ZK44zn+N+0GxTN9t8o56Ssc5VXcWC9ghNoUds91xNokdZBPYHvYLm8h+YOPZ
bnaYvc22sa0ixzHasylspzpX3159T7J32S42lO1jHdjUeP7YMPYde5Z9w46w
qTG/qI+IITFnsMFsrb5/iQvlf/Az4rLsZD6JeWVTbC8uYcXET/KjYp+x4jFf
ioXqw/b3LvvFvtazBmwoq816sR9Z/5hHYl5lK1gl9iSbwBqz4ewqVoaVk5eM
uUN9TExIJdc2rnE73+Mv9klcC/VvYh7rGPcG26Mebn/77aMdG8e2sEFsFzvE
3oy5mfVny1kbNoZtYgPYDtaWjWWb2UC2M+4Bx1kVi4fIIz5Wj+QjxG79HdkD
7Hf5PPlJ287VfsT4RtaYjWH12assj97l8dyLr2K3eh4SHWJdyE72G/tPyVew
/Klk3cpMn5fxqeReiXtmcnbyLMxNJeckzk1n9l/2PjuhnmPbw/b3IGvPxrNG
bBh7gDVnb8d6x/qyTNt/xc6P9Y9l6Tkr/1v+t88GMTeJC/RtV5eI+9LYhfp6
ix/VpeL+imOnn62X2b/VH4rRtruclYr5R601o4Y/RfluVjLmGFZMT0PRR71I
Xxe2RF8j9npcB9aNLWP3sEfZy+yuWMvYlexaVjtP8hzH83wHq8Q6s+tZG1ae
Pcg6sTKsNbuV3cvasqtZS3Yvq8teYXeznvEb7XgPuyrmQHapnnKivLpJzOWs
sb4i+naxf8S8yC7Rc4Uora6pT5pRU98GSSM2OuYg9gqbH73qG+QnYm2xrwtY
MXZdzCHsYvYH+0j+F//ItieMjclK1uxYu4uqx6rPiEVxPdkiYyczk2fr0/T9
Hfd5F/v7m30mT4lP8enM5OVpmTpbLFX+yf6nb6k6K+Zydibm+3gHkY+K8xfr
lfpPsVjPWbbY2Cl+li1hmeKzmI9Y2bg35O31/cXfVJ8W82O9ZO/HWqBvcjw3
8jfZZeop6hvF7fE71Jcaa+TzNzY9lcz3Me8fiPe7eL7U58Tc6rODOKlvpr5j
sZ7oO2hsPLvYZ19WiU3ISp7XeG6/jLlcXOSc3M+ayQfrq2bsDdvcx5qyQawq
ez2uH5vBfmbT2Q/senYLq5MnmZNjbi7Dbma14rqxhuy6uA/iXmSnjfWL9Tgr
ebeMd8wiekarf431LZWsl7Fufs9vYRVTybaxj+asMXuDfcK6s89ZE9Y3rjfr
wb5gpeO8suasAKvLqmYl781D/PYp6nfFNewG1lhffn110uvb4FSypsbaOk7/
JtaEjVU30NdH37Xx3LAWrCCrx3aydmw2a8NyWV32ApvHOrKP2A7Wls1ireP9
lH3N2rCZrFW8e7PNLIdNZE1Yf7aVPc4ms2ZxL7Gb2B2sWdxXrAmrEut8zJPZ
yf8N8f/D2Hi+xB5jTxl70Fi1rOT9Kzc7ed+Znl4/VrMLREHRVV09/R40NDt5
l4t3utFilNiVXgvuN3aOWCMvJNb6LnmNPZI+3iBj4+IeFQXl22Idj/cGfUWz
Eo/xb+Txz08lPZXT+WD5BGMTRWH5TnZlrKO2vVjPw+l1bWB28hvHpntjm2/T
5+KhmP/lreUz4l3Ntm8br8d6sfnsKbaIbWEt2CTWlPVj9WO9YAtizWIfs8fY
i+wD1oktZnex2qw3q8C6sQbsJbaQPc0+YXezOuwlVpF1Z9vYE2wKa87eYhXj
HLJn2Y0xz7A7Yy5hT8c8y9qyf7I7WQ4rwZqyCnFu2DOsLGsX71LsNbaYdWVL
2c2sAnucXc6asVKsLGvKzmePstvYrbFexTqoHhRzhugX8yHrGfMMf4INZavZ
a2wja84GsM/Zi2wVy2ED2ResN1vNWrBB7Ev2ElvDmrG32DLWi61kt7PbYl2L
9VI9OJ4NkRvvAayPsQ08l+XPTL5zfPeh6pZimL417PV4hzTeig2P+5a9wTaz
YaxAZnKMONZw9f8B8PEFHA==
          "]], 
         Polygon3DBox[{{1219, 575, 378, 377, 776, 1168}, {1190, 800, 407, 408,
           801, 1191}, {1184, 792, 392, 393, 793, 1185}, {1175, 783, 377, 378,
           784, 1176}, {1215, 563, 363, 362, 767, 1163}, {1213, 552, 343, 342,
           756, 1157}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0scuRVEYBtB99c5IvfqIhCcgegsiiAkiYoaEKV4AA1PCnLFEeQG8gN5L
PAARETFhnRh8d33/ybln71Mqp+aH5mIhhDVpVaLe4OeNvYkh5HGE5ZxkPWfZ
yCX2cZVj3OSWzOiHXOQJV3jODb5yhx88YCwphGPusti6nXJmbmKR5Cf4r7mA
FyzkJYt4xWJes4Q3jLNUbvUy3rGc96zgAyv5yCo+sZrPrLGnuDW75MXczBKJ
29upOYdH/HXePt+5zReu85TLPOIC97kn0/o6R7nMXi6wgdOs4wTLomdpjR92
WDeXLaySKcmJ3gGzo/OZxXFmcpQZ/HIv30yXHtfscfxLb2caux3r1j/1No5I
avQ+ZFhP4SCTOUDbCf1MjL4HunyoNZTG/r+XPyuSPeA=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{843, 1156, 548, 842, 1309, 1053, 844, 1310, 1054, 845, 1311, 
       1055, 846, 1305, 1312, 1056, 1201, 1306, 1313, 1057, 1202, 1509, 1157, 
       1213, 1490, 1203, 1158, 1314, 1058, 1204, 1159, 1315, 1059, 847, 1316, 
       1060, 848, 1317, 1061, 849, 1318, 1062, 850, 1319, 1063, 851, 1491, 
       1160, 1064, 1161}], 
      Line3DBox[{853, 1214, 1397, 852, 560, 854, 1320, 1065, 855, 1321, 1066, 
       856, 1307, 1322, 1067, 1205, 1510, 1162, 1068, 1206, 1511, 1163, 1215, 
       1492, 1207, 1164, 1216, 1493, 1208, 1165, 1323, 1069, 857, 1324, 1070, 
       858, 1325, 1071, 859, 1326, 1072, 860, 1327, 1073, 861, 1328, 1074, 
       862}], Line3DBox[{864, 1217, 1398, 863, 1218, 1399, 865, 573, 866, 
       1329, 1075, 867, 1494, 1166, 1076, 1209, 1512, 1167, 1077, 1210, 1513, 
       1168, 1219, 1495, 1211, 1169, 1220, 1496, 1212, 1170, 1221, 1497, 868, 
       1330, 1078, 869, 1331, 1079, 870, 1332, 1080, 871, 1333, 1081, 872, 
       1334, 1082, 873}], 
      Line3DBox[{875, 1222, 1400, 874, 1223, 1401, 876, 1224, 1402, 877, 586, 
       878, 1498, 1171, 1172, 879, 1499, 1173, 1174, 880, 1500, 1175, 1176, 
       1514, 881, 1177, 1178, 1515, 882, 1179, 1180, 1501, 883, 1225, 1403, 
       884, 1335, 1083, 885, 1336, 1084, 886, 1337, 1085, 887, 1338, 1086, 
       888}], Line3DBox[{890, 1226, 1404, 889, 1227, 1405, 891, 1228, 1406, 
       892, 1229, 1407, 893, 788, 1181, 894, 1502, 1182, 1183, 895, 1503, 
       1184, 1185, 1516, 896, 1186, 1187, 1504, 897, 1230, 1408, 898, 1231, 
       1409, 899, 1232, 1410, 900, 1339, 1087, 901, 1340, 1088, 902, 1341, 
       1089, 903}], 
      Line3DBox[{905, 1233, 1411, 904, 1234, 1412, 906, 1235, 1413, 907, 1236,
        1414, 908, 1308, 1415, 1188, 909, 798, 1189, 910, 1505, 1190, 1191, 
       1517, 911, 1192, 1193, 1506, 912, 1237, 1416, 913, 1238, 1417, 914, 
       1239, 1418, 915, 1240, 1419, 916, 1342, 1090, 917, 1343, 1091, 918}], 
      Line3DBox[{922, 1344, 1092, 920, 1345, 1093, 924, 1346, 1094, 926, 1347,
        1095, 928, 1348, 1096, 930, 1349, 1097, 932, 1350, 626, 934, 1351, 
       1098, 936, 1352, 1099, 938, 1353, 1100, 940, 1354, 1101, 942, 1355, 
       1102, 944, 1356, 1103, 946, 1358, 1105, 948}], 
      Line3DBox[{947, 1104, 1357, 945, 1432, 1252, 943, 1431, 1251, 941, 1430,
        1250, 939, 1429, 1249, 937, 1428, 1248, 935, 1427, 1247, 933, 1426, 
       625, 931, 1425, 1246, 929, 1424, 1245, 927, 1423, 1244, 925, 1422, 
       1243, 923, 1421, 1242, 919, 1420, 1241, 921}], 
      Line3DBox[{950, 1253, 1433, 949, 1359, 1106, 951, 1360, 1107, 952, 1361,
        1108, 953, 1362, 1109, 954, 1363, 1110, 955, 1364, 1254, 1434, 956, 
       642, 957, 1365, 1111, 958, 1366, 1112, 959, 1367, 1113, 960, 1368, 
       1114, 961, 1369, 1115, 962, 1370, 1116, 963}], 
      Line3DBox[{965, 1255, 1435, 964, 1256, 1436, 966, 1371, 1117, 967, 1372,
        1118, 968, 1373, 1119, 969, 1374, 1120, 970, 1375, 1257, 1437, 971, 
       1258, 1438, 972, 658, 973, 1376, 1121, 974, 1377, 1122, 975, 1378, 
       1123, 976, 1379, 1124, 977, 1380, 1125, 978}], 
      Line3DBox[{980, 1259, 1439, 979, 1260, 1440, 981, 1261, 1441, 982, 1381,
        1126, 983, 1382, 1127, 984, 1383, 1128, 985, 1384, 1262, 1442, 986, 
       1263, 1443, 987, 1264, 1444, 988, 674, 989, 1385, 1129, 990, 1386, 
       1130, 991, 1387, 1131, 992, 1388, 1132, 993}], 
      Line3DBox[{995, 1265, 1445, 994, 1266, 1446, 996, 1267, 1447, 997, 1268,
        1448, 998, 1389, 1133, 999, 1390, 1134, 1000, 1391, 1269, 1449, 1001, 
       1270, 1450, 1002, 1271, 1451, 1003, 1272, 1452, 1004, 690, 1005, 1392, 
       1135, 1006, 1393, 1136, 1007, 1486, 1138, 1139, 1008}], 
      Line3DBox[{1010, 1140, 1141, 1518, 1009, 1194, 1195, 1507, 1011, 1273, 
       1453, 1012, 1274, 1454, 1013, 1275, 1455, 1014, 1394, 1137, 1015, 1395,
        1276, 1456, 1016, 1277, 1457, 1017, 1278, 1458, 1018, 1279, 1459, 
       1019, 1280, 1460, 1020, 705, 1021, 1487, 1142, 1143, 1022, 1488, 1144, 
       1145, 1023}], 
      Line3DBox[{1025, 1146, 1196, 1147, 1508, 1024, 1148, 1461, 1301, 1026, 
       1281, 1462, 1027, 1282, 1463, 1028, 1283, 1464, 1029, 1284, 1465, 1030,
        1396, 1285, 1466, 1031, 1286, 1467, 1032, 1287, 1468, 1033, 1288, 
       1469, 1034, 1289, 1470, 1035, 1290, 1471, 1036, 741, 1149, 1037, 1489, 
       1150, 1197, 1151, 1038}], 
      Line3DBox[{1052, 1155, 1199, 749, 1051, 1154, 1485, 1304, 1050, 1484, 
       1300, 1049, 1483, 1299, 1048, 1482, 1298, 1047, 1481, 1297, 1046, 1480,
        1296, 1045, 1479, 1478, 1295, 1044, 1477, 1294, 1043, 1476, 1293, 
       1042, 1475, 1292, 1041, 1474, 1291, 1040, 1303, 1473, 1153, 1039, 1302,
        1472, 1198, 1152, 1200}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{331, 549, 1309, 332, 560, 357, 1399, 572, 372, 1401, 584, 
       387, 1405, 596, 402, 1412, 608, 417, 1421, 620, 1345, 432, 635, 1359, 
       447, 1436, 650, 462, 1440, 665, 477, 1446, 680, 492, 804, 1507, 694, 
       507, 1461, 740, 707, 521, 1473, 746, 720, 535}], 
      Line3DBox[{333, 550, 1310, 334, 561, 1320, 358, 573, 373, 1402, 585, 
       388, 1406, 597, 403, 1413, 609, 418, 1422, 621, 1346, 433, 636, 1360, 
       448, 651, 1371, 463, 1441, 666, 478, 1447, 681, 493, 1453, 695, 508, 
       1462, 708, 522, 1474, 721, 536}], 
      Line3DBox[{335, 551, 1311, 336, 562, 1321, 359, 574, 1329, 374, 586, 
       389, 1407, 598, 404, 1414, 610, 419, 1423, 622, 1347, 434, 637, 1361, 
       449, 652, 1372, 464, 667, 1381, 479, 1448, 682, 494, 1454, 696, 509, 
       1463, 709, 523, 1475, 722, 537}], 
      Line3DBox[{337, 752, 753, 1312, 338, 761, 762, 1322, 360, 770, 1494, 
       771, 375, 779, 1498, 780, 390, 788, 789, 405, 1415, 796, 797, 420, 
       1424, 623, 1348, 435, 638, 1362, 450, 653, 1373, 465, 668, 1382, 480, 
       683, 1389, 495, 1455, 697, 510, 1464, 710, 524, 1476, 723, 538}], 
      Line3DBox[{339, 754, 811, 755, 1313, 340, 763, 815, 1510, 764, 361, 772,
        819, 1512, 773, 376, 781, 1499, 823, 782, 391, 790, 1502, 827, 791, 
       406, 798, 830, 799, 421, 1425, 624, 1349, 436, 639, 1363, 451, 654, 
       1374, 466, 669, 1383, 481, 684, 1390, 496, 698, 1394, 511, 1465, 711, 
       525, 1477, 724, 539}], 
      Line3DBox[{341, 834, 835, 812, 1509, 756, 342, 765, 816, 1511, 767, 362,
        774, 820, 1513, 776, 377, 783, 1500, 824, 785, 392, 792, 1503, 828, 
       794, 407, 800, 1505, 831, 802, 422, 625, 1350, 437, 640, 1364, 452, 
       655, 1375, 467, 670, 1384, 482, 685, 1391, 497, 699, 1395, 512, 712, 
       1396, 526, 1478, 725, 540}], 
      Line3DBox[{346, 555, 1316, 347, 566, 1324, 366, 578, 1330, 381, 1403, 
       590, 396, 1409, 602, 411, 1417, 614, 426, 1429, 629, 1353, 441, 644, 
       1366, 456, 659, 1376, 471, 674, 486, 1452, 689, 501, 1459, 703, 516, 
       1469, 716, 530, 1482, 729, 544}], 
      Line3DBox[{348, 556, 1317, 349, 567, 1325, 367, 579, 1331, 382, 591, 
       1335, 397, 1410, 603, 412, 1418, 615, 427, 1430, 630, 1354, 442, 645, 
       1367, 457, 660, 1377, 472, 675, 1385, 487, 690, 502, 1460, 704, 517, 
       1470, 717, 531, 1483, 730, 545}], 
      Line3DBox[{350, 557, 1318, 351, 568, 1326, 368, 580, 1332, 383, 592, 
       1336, 398, 604, 1339, 413, 1419, 616, 428, 1431, 631, 1355, 443, 646, 
       1368, 458, 661, 1378, 473, 676, 1386, 488, 691, 1392, 503, 705, 518, 
       1471, 718, 532, 1484, 731, 546}], 
      Line3DBox[{352, 558, 1319, 353, 569, 1327, 369, 581, 1333, 384, 593, 
       1337, 399, 605, 1340, 414, 617, 1342, 429, 1432, 632, 1356, 444, 647, 
       1369, 459, 662, 1379, 474, 677, 1387, 489, 692, 1393, 504, 735, 1487, 
       736, 519, 741, 742, 533, 1485, 747, 748, 547}], 
      Line3DBox[{354, 759, 1491, 760, 355, 570, 1328, 370, 582, 1334, 385, 
       594, 1338, 400, 606, 1341, 415, 618, 1343, 430, 633, 1357, 1358, 445, 
       648, 1370, 460, 663, 1380, 475, 678, 1388, 490, 732, 1486, 733, 505, 
       737, 1488, 738, 805, 743, 1489, 744, 807, 749, 750, 809}], 
      Line3DBox[{534, 719, 808, 745, 1472, 520, 706, 806, 1508, 739, 506, 693,
        833, 1518, 734, 491, 679, 1445, 476, 664, 1439, 461, 649, 1435, 446, 
       634, 1433, 431, 1344, 619, 1420, 416, 607, 1411, 401, 595, 1404, 386, 
       583, 1400, 371, 571, 1398, 356, 559, 1397, 330, 548, 751, 810}], 
      Line3DBox[{541, 726, 1479, 527, 713, 1466, 513, 700, 1456, 498, 686, 
       1449, 483, 671, 1442, 468, 656, 1437, 453, 641, 1434, 438, 626, 1426, 
       423, 611, 832, 1517, 801, 408, 599, 829, 1516, 793, 393, 587, 825, 
       1514, 784, 378, 575, 1495, 821, 775, 363, 563, 1492, 817, 766, 343, 
       552, 1490, 813, 837, 836, 840}], 
      Line3DBox[{542, 727, 1480, 528, 714, 1467, 514, 701, 1457, 499, 687, 
       1450, 484, 672, 1443, 469, 657, 1438, 454, 642, 439, 1351, 627, 1427, 
       424, 612, 1506, 803, 409, 600, 1504, 795, 394, 588, 826, 1515, 786, 
       379, 576, 1496, 822, 777, 364, 564, 1493, 818, 768, 344, 1314, 553, 
       814, 839, 838, 841}], 
      Line3DBox[{543, 728, 1481, 529, 715, 1468, 515, 702, 1458, 500, 688, 
       1451, 485, 673, 1444, 470, 658, 455, 1365, 643, 440, 1352, 628, 1428, 
       425, 613, 1416, 410, 601, 1408, 395, 589, 1501, 787, 380, 577, 1497, 
       778, 365, 1323, 565, 769, 345, 1315, 554, 757, 758}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
+KQG9z3mKn8M981ct8qU4AOOvb45mE+9oMcOzKeMnUOI4Am6Eau1ME/jIYlF
mKflqC1bYDwF2aiUS9UFPNAyeGb1SoJ/GGLDIyO5RUhoIkaggMe5GWrcBe63
6w5DvmbrNbHQbmSmI84WnDQA3+YmtI7zDMErzSWrTgu3otJo9sW/06mQ9GjP
bumTTNhONVHa0vwZnb9glPzbggEeVCmp+ww6HO5vMI9lL0PtS78/2jXMBKHr
R3/KthPXsbXJ6Narb9E6M6XCz0UssL217vEPFRqo3OrJ0Z7drdX+l7PPX841
15+vV7n6FgS6OgqwPlyv+xHWS5wOvEj4Q7rvlgX/NTeTZ7C/xS1JIyIPsC6q
vMR5Mu8sWYvz1A9ZbiLyg/9rn0U4v2+W+06c/7iHQRjRFzoGGmevE30D+rR3
4b51yYnxBB+I6fDNxXwMdm66i/lcHg3kIXiCZ77wasxzznw2CfO8pO85ExrS
jiQb5OhqkTFaAvcnqpD0ONQK7oi52tuMWtfndFywaIVGo7u6HzeNQan+g3tb
1GrRka+jknlHSXDzZKB/T9owpPdnubwu+YiyVCZFnlnT4LLgsVszSiwoflsj
KrC3CLlXOLTcfseA0qdmQ8p7GaCwZ+pezpos1BjjHaAgzILJu0baDTM00Diw
KLr6eiLSfJThmFbJAuHFvjSenf/hrPg/nDNU0poJPdCsoxf0ZbvPLugFrVNf
E/7wSH7/gn/CKpkF/zCSoCqRB7STVi/kWfF76UKeXxbH/In8EM+bsJDfxSXv
Js4ffZT0jOgLCVSHhb7V/KnXcF/7G5SnBB+409LUjvkcEFXXwXwid02y3w5p
hw9nnamYp37L7krMs62JIzltOrYkaXbwE/GvVvDveeK/CehfyaFc7/+gJGg0
T3evbBvcbfylEHlqHKIDTqR5bAsr2bL7OvjlkYB9w57X4QYj8GBPUei5b8El
epUZcVXE9akvfXfb78ss2GoZfHpJuV/JF/cz423E9Raxjieq6SwDyPMe3Mw5
jxIvG4rXvBQLbgQPfenmooO5a2Sb51GbkiSfnIfTn4j97McC6Xe7/8N5bNd/
cy6PN1zmddRG68VfveRffcO+nzKEv9aFv/43//oLLl8dROTR+u88mcpPHxP5
tXT+5jf4mz/Wub2E6Kul8Lcvx9++b8bP7iT4aLn/5RP+l0/h3tEszLFNIeX/
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{439.09163024567135`, 238.2109848744092},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0., 1.2499999107142858`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.368273559359947, -2.1876164879728557`, 1.027430995048244},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.6817570512650833`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"u1", "[", 
         RowBox[{"x", ",", "t"}], "]"}], "/.", "sol"}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "y"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6817584368813357`*^9, 3.681758452042203*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 20}}, Typeset`size$$ = {360., {141., 147.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$8281$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$8281$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[Evaluate[
          ReplaceAll[
           $CellContext`u1[$CellContext`x, $CellContext`t$$], \
$CellContext`sol]] (1 - $CellContext`y), {$CellContext`x, 0, 
         1}, {$CellContext`y, 0, 1}], 
      "Specifications" :> {{$CellContext`t$$, 0, 20}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {191., 198.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6817605085308275`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol3", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"u3", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
        "\[Equal]", 
        RowBox[{"alpha2", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"u3", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"u3", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u3", "[", 
         RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"u1", "[", 
            RowBox[{"x", ",", "0"}], "]"}], "/.", "sol"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "y"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u3", "[", 
         RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u3", "[", 
         RowBox[{"1", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u3", "[", 
         RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"u1", "[", 
           RowBox[{"x", ",", "t"}], "]"}], "/.", "sol"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u3", "[", 
         RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}],
      "}"}], ",", "u3", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.681757987070608*^9, 3.681757987117611*^9}, {
  3.68175820529309*^9, 3.6817582287324305`*^9}, {3.681758321371729*^9, 
  3.681758374588773*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve`FiniteDifferenceDerivativeFunction", "::", "ddim"}], 
   "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Data \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"27\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\
\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\
\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\
\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}]\\)\[NoBreak] is not a rectangular \
tensor with dimensions \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"29\\\
\", \\\",\\\", \\\"15\\\"}], \\\"}\\\"}]\\)\[NoBreak].\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6817583962800136`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve`FiniteDifferenceDerivativeFunction", "::", "ddim"}], 
   "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Data \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"27\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\
\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\
\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\
\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}]\\)\[NoBreak] is not a rectangular \
tensor with dimensions \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"29\\\
\", \\\",\\\", \\\"15\\\"}], \\\"}\\\"}]\\)\[NoBreak].\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6817583964370227`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve`FiniteDifferenceDerivativeFunction", "::", "ddim"}], 
   "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Data \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}]}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"27\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\
\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\
\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\
\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", \\\"0.`\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"0.`\\\", \
\\\"}\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}]\\)\[NoBreak] is not a rectangular \
tensor with dimensions \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"29\\\
\", \\\",\\\", \\\"15\\\"}], \\\"}\\\"}]\\)\[NoBreak].\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6817583965960317`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NDSolve`\
FiniteDifferenceDerivativeFunction\\\", \\\"::\\\", \\\"ddim\\\"}], \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.681758396621033*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] through \
\[NoBreak]\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Abs\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/take\\\", ButtonNote -> \
\\\"Set::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817583967870426`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \
\[NoBreak]\\!\\(\\*RowBox[{\\\"-\\\", \\\"3\\\"}]\\)\[NoBreak] through \
\[NoBreak]\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Abs\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/take\\\", ButtonNote -> \
\\\"Set::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817583968240447`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "take"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot take positions \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] through \
\[NoBreak]\\!\\(\\*RowBox[{\\\"3\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Abs\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/take\\\", ButtonNote -> \
\\\"Set::take\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817583968520465`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Set\\\", \\\"::\\\", \\\"take\\\"}], \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817583968770475`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol3", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"u3", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
        "\[Equal]", 
        RowBox[{"alpha2", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"u3", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"u3", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u3", "[", 
         RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u3", "[", 
         RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u3", "[", 
         RowBox[{"1", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}],
      "}"}], ",", "u3", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6817591130300093`*^9, 3.6817591512381945`*^9}, 
   3.681759191142477*^9, {3.6817603932142315`*^9, 3.6817604028607836`*^9}, 
   3.681760444654174*^9, {3.6817604815172825`*^9, 3.681760483388389*^9}, {
   3.681760651484004*^9, 3.681760672971233*^9}, {3.681760929243891*^9, 
   3.681760941336582*^9}, 3.681760975177518*^9, {3.6817610278975334`*^9, 
   3.6817610281535482`*^9}, {3.681761137000774*^9, 3.681761150952572*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnmd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"alpha2\\\"}], \\\",\
\\\", \\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"alpha2\\\"}], \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]\\)\[NoBreak] does not evaluate to a \
numeric matrix of dimensions \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\
\"3\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]\\)\[NoBreak] at the coordinate \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\
\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnmd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817609421606293`*^9, 3.6817609757055483`*^9, 
  3.681761028501568*^9, 3.6817611520386343`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnmd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"alpha2\\\"}], \\\",\
\\\", \\\"0\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"alpha2\\\"}], \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]\\)\[NoBreak] does not evaluate to a \
numeric matrix of dimensions \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\
\"3\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}]\\)\[NoBreak] at the coordinate \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"0.`\
\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnmd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6817609421606293`*^9, 3.6817609757055483`*^9, 
  3.681761028501568*^9, 3.681761152107638*^9}],

Cell[BoxData[
 RowBox[{"NDSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox["u3", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], "\[Equal]", 
       RowBox[{"alpha2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["u3", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], "+", 
          RowBox[{
           SuperscriptBox["u3", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"2", ",", "0", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u3", "[", 
        RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u3", "[", 
        RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u3", "[", 
        RowBox[{"1", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], 
    "}"}], ",", "u3", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6817609422036324`*^9, 3.681760975757551*^9, 
  3.681761028563572*^9, 3.681761152109638*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "[", 
  RowBox[{"0.3", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.681760991437448*^9, 3.68176099444062*^9}, {
  3.681761031576744*^9, 3.681761031975767*^9}}],

Cell[BoxData["1.0499999999999998`"], "Output",
 CellChangeTimes->{3.6817609948156414`*^9, 3.6817610322277813`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"u1", "[", 
     RowBox[{"0.4", ",", "0.3"}], "]"}], "/.", "sol"}], "]"}], "*", 
  "2"}]], "Input",
 CellChangeTimes->{{3.6817591969538097`*^9, 3.681759238996214*^9}}],

Cell[BoxData[
 RowBox[{"{", "2.339999956059537`", "}"}]], "Output",
 CellChangeTimes->{{3.6817592030921607`*^9, 3.6817592396522512`*^9}}]
}, Open  ]]
},
WindowSize->{751, 821},
WindowMargins->{{Automatic, 34}, {43, Automatic}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2011, 52, 112, "Input"],
Cell[2594, 76, 9508, 196, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12139, 277, 560, 17, 31, "Input"],
Cell[12702, 296, 1759, 36, 340, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14498, 337, 728, 19, 52, "Input"],
Cell[15229, 358, 1859, 38, 338, "Output"],
Cell[17091, 398, 635, 12, 39, "Message"],
Cell[17729, 412, 635, 12, 39, "Message"],
Cell[18367, 426, 632, 12, 39, "Message"],
Cell[19002, 440, 567, 12, 21, "Message"],
Cell[19572, 454, 635, 12, 39, "Message"],
Cell[20210, 468, 635, 12, 39, "Message"],
Cell[20848, 482, 633, 12, 39, "Message"],
Cell[21484, 496, 567, 12, 21, "Message"],
Cell[22054, 510, 633, 12, 39, "Message"],
Cell[22690, 524, 635, 12, 39, "Message"],
Cell[23328, 538, 635, 12, 39, "Message"],
Cell[23966, 552, 565, 12, 21, "Message"],
Cell[24534, 566, 635, 12, 39, "Message"],
Cell[25172, 580, 633, 12, 39, "Message"],
Cell[25808, 594, 635, 12, 39, "Message"],
Cell[26446, 608, 564, 12, 21, "Message"],
Cell[27013, 622, 635, 12, 39, "Message"],
Cell[27651, 636, 633, 12, 39, "Message"],
Cell[28287, 650, 633, 12, 39, "Message"],
Cell[28923, 664, 565, 12, 21, "Message"],
Cell[29491, 678, 635, 12, 39, "Message"],
Cell[30129, 692, 635, 12, 39, "Message"],
Cell[30767, 706, 635, 12, 39, "Message"],
Cell[31405, 720, 565, 12, 21, "Message"]
}, Open  ]],
Cell[31985, 735, 273, 6, 52, "Input"],
Cell[CellGroupData[{
Cell[32283, 745, 2470, 70, 132, "Input"],
Cell[34756, 817, 10065, 203, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44858, 1025, 623, 18, 31, "Input"],
Cell[45484, 1045, 166857, 2728, 218, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212378, 3778, 749, 22, 52, "Input"],
Cell[213130, 3802, 1960, 39, 406, "Output"],
Cell[215093, 3843, 575, 11, 39, "Message"],
Cell[215671, 3856, 573, 11, 39, "Message"],
Cell[216247, 3869, 575, 11, 39, "Message"],
Cell[216825, 3882, 567, 12, 21, "Message"],
Cell[217395, 3896, 573, 11, 39, "Message"],
Cell[217971, 3909, 575, 11, 39, "Message"],
Cell[218549, 3922, 575, 11, 39, "Message"],
Cell[219127, 3935, 565, 12, 21, "Message"],
Cell[219695, 3949, 575, 11, 39, "Message"],
Cell[220273, 3962, 572, 11, 39, "Message"],
Cell[220848, 3975, 575, 11, 39, "Message"],
Cell[221426, 3988, 567, 12, 21, "Message"],
Cell[221996, 4002, 575, 11, 39, "Message"],
Cell[222574, 4015, 573, 11, 39, "Message"],
Cell[223150, 4028, 573, 11, 39, "Message"],
Cell[223726, 4041, 565, 12, 21, "Message"],
Cell[224294, 4055, 573, 11, 39, "Message"],
Cell[224870, 4068, 575, 11, 39, "Message"],
Cell[225448, 4081, 572, 11, 39, "Message"],
Cell[226023, 4094, 567, 12, 21, "Message"],
Cell[226593, 4108, 575, 11, 39, "Message"],
Cell[227171, 4121, 575, 11, 39, "Message"],
Cell[227749, 4134, 575, 11, 39, "Message"],
Cell[228327, 4147, 565, 12, 21, "Message"],
Cell[228895, 4161, 573, 11, 39, "Message"],
Cell[229471, 4174, 575, 11, 39, "Message"],
Cell[230049, 4187, 573, 11, 39, "Message"],
Cell[230625, 4200, 565, 12, 21, "Message"],
Cell[231193, 4214, 573, 11, 39, "Message"],
Cell[231769, 4227, 575, 11, 39, "Message"],
Cell[232347, 4240, 573, 11, 39, "Message"],
Cell[232923, 4253, 567, 12, 21, "Message"],
Cell[233493, 4267, 575, 11, 39, "Message"],
Cell[234071, 4280, 575, 11, 39, "Message"],
Cell[234649, 4293, 575, 11, 39, "Message"],
Cell[235227, 4306, 565, 12, 21, "Message"]
}, Open  ]],
Cell[235807, 4321, 247, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[236079, 4330, 1042, 31, 52, "Input"],
Cell[237124, 4363, 1283, 29, 447, "Output"]
}, Open  ]],
Cell[238422, 4395, 481, 13, 52, "Input"],
Cell[CellGroupData[{
Cell[238928, 4412, 482, 14, 31, "Input"],
Cell[239413, 4428, 89702, 1465, 253, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329152, 5898, 625, 18, 52, "Input"],
Cell[329780, 5918, 1730, 36, 406, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331547, 5959, 2440, 71, 132, "Input"],
Cell[333990, 6032, 2356, 36, 56, "Message"],
Cell[336349, 6070, 2356, 36, 56, "Message"],
Cell[338708, 6108, 2356, 36, 56, "Message"],
Cell[341067, 6146, 597, 12, 39, "Message"],
Cell[341667, 6160, 665, 14, 21, "Message"],
Cell[342335, 6176, 687, 14, 21, "Message"],
Cell[343025, 6192, 665, 14, 21, "Message"],
Cell[343693, 6208, 558, 11, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344288, 6224, 2043, 55, 112, "Input"],
Cell[346334, 6281, 1236, 20, 39, "Message"],
Cell[347573, 6303, 1234, 20, 39, "Message"],
Cell[348810, 6325, 1841, 56, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350688, 6386, 195, 4, 31, "Input"],
Cell[350886, 6392, 114, 1, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351037, 6398, 243, 7, 31, "Input"],
Cell[351283, 6407, 137, 2, 31, "Output"]
}, Open  ]]
}
]
*)

