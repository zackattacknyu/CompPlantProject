(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    410213,       7882]
NotebookOptionsPosition[    405648,       7733]
NotebookOutlinePosition[    405989,       7748]
CellTagsIndexPosition[    405946,       7745]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "system", " ", "will", " ", "be", " ", "a", " ", "plate", 
      " ", "with", " ", "a", " ", "rod", " ", "in", " ", "the", " ", 
      RowBox[{"middle", ".", " ", "\[IndentingNewLine]", "This"}], " ", 
      "example", " ", "will", " ", "use", " ", "Lie"}], "-", 
     RowBox[{
     "Trotter", " ", "Splitting", "\[IndentingNewLine]", "So", " ", "the", 
      " ", "equation", " ", "is", " ", "F"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"R", " ", "+", " ", 
      RowBox[{
      "V", "\[IndentingNewLine]", "R", " ", "is", " ", "the", " ", "2", "D", 
       " ", "plate", " ", "without", " ", "the", " ", "rod", 
       "\[IndentingNewLine]", "V", " ", "is", " ", "the", " ", "2", "D", " ", 
       "plate", " ", "with", " ", "the", " ", "rod", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "Here", " ", "is", " ", "the", " ", "pseudo"}], 
      "-", 
      RowBox[{"code", ":", "\[IndentingNewLine]", 
       RowBox[{"Let", " ", "F", 
        RowBox[{"(", "0", ")"}]}]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"initV", " ", "below", "\[IndentingNewLine]", "For", " ", "t"}],
       " ", "=", " ", "0"}]}]}], ",", "tau", ",", " ", 
   RowBox[{"2", "tau"}], ",", "...", ",", 
   RowBox[{
    RowBox[{"T", "\[IndentingNewLine]", "\t ", "Let", " ", "R", 
     RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"F", 
      RowBox[{"(", "t", ")"}], "\[IndentingNewLine]", "\t", "Integrate", " ", 
      RowBox[{"R", "'"}], 
      RowBox[{"(", "t", ")"}], " ", "to", " ", "obtain", " ", "R", 
      RowBox[{"(", 
       RowBox[{"t", "+", "tau"}], ")"}], "\[IndentingNewLine]", "\t", "Let", 
      " ", "V", 
      RowBox[{"(", "t", ")"}]}], "=", 
     RowBox[{
      RowBox[{"R", 
       RowBox[{"(", 
        RowBox[{"t", "+", "tau"}], ")"}], "\[IndentingNewLine]", "   ", 
       "Integrate", " ", 
       RowBox[{"V", "'"}], 
       RowBox[{"(", "t", ")"}], " ", "to", " ", "obtain", " ", "V", 
       RowBox[{"(", 
        RowBox[{"t", "+", "tau"}], ")"}], "\[IndentingNewLine]", "   ", "Let",
        " ", "F", 
       RowBox[{"(", 
        RowBox[{"t", "+", "tau"}], ")"}]}], "=", 
      RowBox[{"V", 
       RowBox[{"(", 
        RowBox[{"t", "+", "tau"}], ")"}]}]}]}]}]}], " \t", "*)"}]], "Input",
 CellChangeTimes->{{3.6831417990394473`*^9, 3.6831418137804728`*^9}, {
   3.6831803663239775`*^9, 3.6831804344752426`*^9}, {3.683259563851947*^9, 
   3.6832597717494993`*^9}, 3.6832598342294807`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"initV", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"20", "*", "x", 
   RowBox[{"(", 
    RowBox[{"x", "-", "2"}], ")"}], "y", 
   RowBox[{"(", 
    RowBox[{"y", "-", "1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.683141418724348*^9, 3.683141444936411*^9}, {
   3.6831803592539473`*^9, 3.6831803629489627`*^9}, 3.683180446035289*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"initV", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.68227683728271*^9, 3.682276887470913*^9}, {
   3.683141413639338*^9, 3.6831414164353423`*^9}, {3.683141455318433*^9, 
   3.6831414654615355`*^9}, 3.6831418193324833`*^9, {3.6831803534939227`*^9, 
   3.6831803536109233`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXmYztX7x2dh7IwtQiiDLGWnLPN5ss8o2SNCtCCDUkhISoksTWWJ7Fuh
so0lW/alZOyMZez7jH1nfl/zvF/n+XV36Z+5rlfHec55n3Puc99n+zzdoXuT
t0OCgoJ6pw8KCv3f3ykt5ywZUvrzSP/fnpE1j4aP2LG0TY0uz0eOKxq11oN/
db9Ng6bdx0XOPXsgJSJqp+PHQiI+79l3VmTE8lwVlsQkOF7065xemYjfI7dv
KL4wIuq44zX3tm6weNTCyKHPb/grJuG042vPdjm9LSQusu6YDqfjYi44/vMa
X3jPvksig4Me/XfZ8ZtvHN78y60lke0Wbf8mIuqq47OVfmWnn56Mir3u+J/K
P/9TXWfGJNx03FN5Po6vWiE24o7jz6j8+wZnWBMXc8/xA6pvpar7X06Ie+B4
D+nzbdLMAykpKY6fuvzP8Ed6orNf1wUeeqIzvEjnhTuKfLnXQ2f42GaTh47e
etJDZ3i3vg0XjBh90UNneOacC8r0b3rFQ2f4pjmXN1/sf81DZ/h76U5EjN56
3UNn+M2iX9f6+MUbHjrDuyg9OsM3Kn90hmdQedAZ3lnlR2f4KNUXneHZpA86
wz/rVyRVT3T267fWO672Qmc4eqIz/EDT9MeKl7vmdIavyXt/xOiOd53O8LQf
l3p1zP0UpzO8UdVt4bkfBvvQGf734IKfFy8X6kNn+M2JIx8OGhPqQ2f4X0qP
zjZ/dIYHqzzoDP9D5Udn+E7VF53hg6UPOsOfS04a9EhPdPbrtM0rpvGCzvDu
al90hqMnOsPrrUts3DsixIfO8Mbr/tg260FaHzrDP8mcbXGblemdzvDNEw9m
Gd0xo9MZXqVvwb1NL2d0OsM3KT06w/sqf3SGN1R50BleS+VHZ/gS1Red4c2l
DzrDf8yUHPlIT3T267HTe0n2Cp3hmTS+0Bkeqv6AzvBGKj86w68+1SDNrlkZ
nc7wt/6q1fjv+1mczvCft89YMPp+NqczvH3sC9+PaRrudIbPUnp0hndQ/ugM
T1Z50Bn+ssqPzvBbffz1RWf4vRx+fdAZXmp8mVQ90dlf773eOs0X6AzHfqIz
nPGIznD6JzrD31Z90RmeduWiDyocCXc6w5dkXLM018PsTmd4/X/W9c3YNofT
GR6n9OgMT6P80RmO/ugM76XyozM8WvVFZ/e70gedXfpiL6bqic7++iV4zO/o
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
a/HtLn8Q8BPgtr5w7DP1spx62XyoF/ywfpd6wYernNgH1p9jTL3gh0y7w2l3
6gWnXagX3M4jllMvmw/1gtv2gu9VObEbrPeuVX+mvvC56v/UFx6n8UJ94Ywv
8seeh2uckj+8q8Y16bG3v8sOkB7eSnaD9NjVWrIz2FXs1T7ZsTbDXkpZ+r94
w/93jnep4bQ525ts9fq+1DMuLibF8fHbr8bmqrzApff//2Rvgjjp4cu7T94w
v/w47+COMeVK/C9e8v+N9VLEyQcep3xIz+8uEn/5TKYeEVEPXfrp5nfhh5U/
6clnl+oFb1gxU8+goDXemPwFs/3w1iFXnqTyNU6kpFzwfhGnPP5/l+R+l/Tw
Pcqf9OhwyJSH9H8YneFDTX3JB848RX2zJx/Yl3K6byT5ELdeSPJzysN8tO6p
n1I58xf5TxQnPfmEK3/S87vkk6fGvUmP/INdM8Yui0k44i185vNvO7fI6YPn
nVehSFRsordI3J8uyfvoypbSUbGHvA3BzXevX5XT5093+T+c9OTf4MrKj65e
DXDyf1m8frrxnRPirrj065UPnPTrze/afNAZfS4m/Vtn9EQ3xhfx+0H5LfQT
+ttC9SvGKf7Aqxqn6Ew+u/KM6PHLa1Pd75JP87QvTh0zfZ0b18T1W3ttfS7N
2bPudzemrTszNmKLl+vezfo7+510v4tfsUj2hHyI979uVzpv5b3Jbv0WfzXd
tHcLtSyeze2X4We+q/T4A9ilGcqf9PiTc1VO0mOvKhgdSF+79qJDaQrPdTqs
2b9nQkzCeS84usL5Hi9udvnjN64z6yf4h3DyJ/0Wo3PB4dNLxEZc8jr3bHDg
fMWVbtzRLi+OXJKanvFCu/RQu6Az60IJ+t1iYxIWPGon/984r9uGofkrXEp0
dgD+ufld2jfywLVUHcgn40+zv4mKXe8tyzspPiRXYH+H9K8Y3UifyehG+kVq
F+wP/SdI/YffHdTtxOqEuL+90hUXRn45/KrrP7TXWtMPRw3o1iIh7pyXXflQ
L9JXUr3Qk/YtonJSHvK5f/ff+dCOZUy70I6x0pN8sPMjNB7RB95Q7Uj/oR2J
R/z5PnB6TpH+7AvgZ2bReMEeYt9+bHT7jT1FAnaSdYbzOcs8fL9WTp8/3UVn
x7CHcPJZujFxbqFhATv2ODtJ/h+PqdzqzaOB9JZjJ8l/ifKHu/Wf974+9c6c
nL5eb4b8HpNw1f0udh5OPuNNff35HfPGiVMvOL8Lxz7beYH01p5bTnrWJawO
llNf8olTeagXnHaEU87F0oHxQn/+Vf0E+4BdYr0Xvxfd0Bm/13L0wT8v/mib
bkMgLqBd+qhecMppdSCfGtkulOhzJ/C7Nh+4zQcdyOd2v+t5VrQJ/C66TTT1
spx9NPpbkSM1M2apm8PXevcbXz5aH6E8D36YXrzkuewuPe34jElPOUkPp5wt
drarlTY5u+uf8FsqP/Em+qMz/crqRv+BF1N69u+oF+Wc+Ufnmykp11y98jer
Py9xWQ6Xnno9bdJTL9LD+d355x+kDVoTOPfF744v/ung2pHhvjQ9Xvg8Iuqm
+92mZ8cE1T0ZOFfD79r0/C7p4fxuYoV8O7adC3e6kR59iF+YT9dp3Yl9WPgr
8gf88+sON8++u7Hfx8GTk1wcxPz1p9apyAd+fO3yG988uOnyYV47/HOTlkWf
vOnWhdhHyGLW31g/2a/1E34Xf+mo1tkY1+QzSOuNlIf0vZv/Nbd2x8D6JPnn
VDxI3Mp6YGWzD0JcuVJxJesM+GmvaX2YOJd89mo9k31h0vf+a/Cu2QszuPTk
P1/xLPNdh4h04VGxZ728mvfh2LcfZN/gzL+N5OcwL+PnzNG8DGc+La15n/mX
8veQnnDi5RDphg74pfvVLux3O39V+vvn+3te+a2TtsTFnPGOvf7FE999GFjn
5Hdvan8Kzu+uVX/AryCfRuMLJ0d/eM6VBz9nvvon5YHvVP+kPPg5u9U/0Qf/
pIv8E/LH/2H/l/zh5TWOyJ98mmkc0V60Szu1F+sb9Ocj6j9w1v2WqZ8wLvB/
2qofco4C3l/9ze9HHvaWDSmdMyhov9fjmS0FTq8IrLfzu9XV/+H87hr1/weF
Rt551I/J5+EnTcu2jcvm5kfs3mTNL9gl7F512SXmL9JfkD/GvIA9PGf8NLjN
n3kN+8+8QHrrR8HxA/EfGEe0C34m5fxJ9hkdqFcL2WfSk79Nj30mvV/Hsy6f
pzS/wElvOfZ/oead3bnjq8dG3HD53Nf8Cycfy8mnueZl7Db9c8jII0u+W3/a
2XPsRo0DFU9HHb/q4o5J763pGhsR772n8Uh64pe8e/Lk/O76bcdJf0F2gHnN
P6+e8G6oX/nt4G3P327HvUmvzj707oRMjpP+XdOfqW++NxpsrhGT3Y0X1gGO
yQ7467Pb1WvuK2knxkfdcnEW4yLzmbvrYr4I1Nffnru8tVkfjjnW44Kbp4j3
22mdkPzRofK8Mysmbnzo4n3s3pzoqvVv9svs5nd/+5zy9oxd8+r5Zlld/6Gf
Xx02+Is8SwP9iv42P2322EW7wl19OUfxpM6xwImztih+pJy0+1LNL6RHh3ba
v2OehS/8M3O1TXmCXf9Bn5bVxnYoOu6Bs5+Uk/1oOOvDrNv77fId1+73n7s3
LaJnepce3V5TeZhn4cvb9lowf2A610/Qc/OoSZtOxGZw+uAPdNc6MDpQ/v7N
/+hQ0Rfifpf5epbWpSkn+X/0VvD55jPCfJn7ds8c/D//CZ1fKFm0cd74Xa7/
s+63fMrGTH9umR4JJ/2LFZeW6PbFcW/0nCPtHtlZ0g+6mLZ9sXtzI+Gkn9/7
wvaZu8553TVfkH7hb1XqfHBwfiSc9DUbHRiyfmKyl/PvtQWCgk669OX6f7ah
/yeLIuGkb/xNiQzvFrnqLZH9If0fbRN/X9w+LhJO+t9qXiqUJ/6a17r26AxB
QRdd+ibNmqXLN3RJZErqf8n/uT9LevKpvm3JkA/2X/dIb++B7jxc8V5KypX/
5A+3+UyX3076FSo/nPS/q/y9xk28kpJyw6UvL33gpG8iferLryP9IukPJ30t
6Z+vefqzKSmBe75fqH3hpPdKx0zL/ss576L8Cld+9Z9V4R8cSUkJ3P/tWnRo
hiXtR0fSD7F7LXo/telg9HHXD9190pE3x27Kc8X1N3jLvJnaZNt3y/UrZz83
50x+ouwD13/gv23LUKbKqiAf/QFeJkv7eQeiQ3y0L/zq7G+uXq0R6qN97f1T
2hF+RelpL3hZ5U+7wH9XedAffkLlR2f4hV/XZJn3+y0P3bDnd9rOHHGxWGBe
gy/fP6bCgoG3nG7wPb2HdDzYMciHbvAGtbaPyJY9jQ/d3P3Th1WnDUubzukG
z3rlpUwXimVwusEr5zux8bmPMjrd7H1SdINXUnp0s/mjG/xPlQfd4C+r/OiD
/Qx7+blP/+yX5PRx90BvrD55s999pw/8zORau48dDnX6wCf3CO20skl6pw+8
Tbtnj/1+JpPTB3795Qk/r+6X1ekDj5vwW+L19OFOH3sPFH3gi5UefeA3lD/6
wN9QedAHPlXlRx/85wLP729dJusVpw+8c0jMth8PpTh94L/89NG+KZXCXH3h
74+qsr5UseyuvvCoz4Pez5kxh6uvvY9JfR1Xeupr86e+8Bdf+y77tCHZfNgZ
+NOqF/Vl/33iN9VG1ip31dUXXrfOtXfKPgzyUV94p9y7x839PZ0rv73nSPnh
fdLcb9Cydk5XfvjilZnXTX8thys//MtCJ0I7xYf7sJ/w+ioP9YJPV/mpF37y
1hbpGkTHBurl7i0mtHk3vmWwqxf8wZn6g9OWSe/qZe8VUi94v8i7mdr+mtOH
XYKnKB/KD7+j36X88H9UTsqPf2XbBV7HtAu85pwOZ7LuC7SLva9H+eG2XeCL
TLvAbbvAbbvAp5l2wR/LZ8YXvOUHVfZGhwXq5e6vpasSNLFVYHzBe5jx5e6j
mfFl79Ohg+NmfNn80QFeWeMLHeDvyT6gA7yQGXesk4QaOwxPZ+ww/KSxw/Cf
jB2GtzR2GH7Z2GH4ImOH7f04dIMvNHYYfsXYYXgrY4fhE1V+xhH8z4HPRZ5a
GersM/un1838Do8z8zt8p5nf4fXM/O7ux5n53Z3rM/M7vJyZ3+19N3SDlzXz
OzyDmd9tedANXl/lRzf4r6vu/d0rKsjpxj5yQ+NPwpcZfxJ+VP4VusH3Gn8S
/rPxJ+HPGn8Sft74k/b+GrrBzxl/El7C+JPwX4w/Cd9v/En4ceNPsg9VzMSD
8GdN3AePkP+PbvAiJo6D+0y8Bp9g4jL3uybOsvfR0M2mRzf4TyZusuVBN3hR
EwfBi6u+6MY5kB9HvJYa16Ab/PLUMalxELrBy3Ra3+5RPIVu8DebZkuNy9AN
3rxM09T4Dt3g1zbNS40T0Q1e/alC/4pn7f0ydLPp0c3dO1P+6AZ/TeVBN3gH
lR/d4OVUX+YRV37pg57+v797rwyp+d2GffGuH3KOq3KZ7J/Mf/Gw64c/PTP9
VPeEmd7a2J1PTNif6PrhIa0v3Qi7UW5A02OuH1aduvOtP2LGe681T1v9dPXD
rh8u17mmT2p2rvPj1t2uH370cNn956IGeYv75f/68xc3uH7YVvHvWdMPQ1T+
0PuVRj3yB9Cztsqf/cfq505Uv+T64ecqf79iaz5/Y/Yp1w/Xq/zTirwd8e3o
Q64fZlT5a9T0Ek6X+cf1w/4jPlgWG/Gn9+L8PF/3GHDM6VNjUb1Wh+JWemv6
Tm/fK/t1p89h7a/la12iWXKRW06f/g1+8b6LWOZNXPJuxlVNbjt9Cmr9bdG6
Wi3TVrnt9Fl1PHOx6NhFXrkR5wtF5Lnl9JmpuPWysW99VM6YeteK/VgwxNm3
+trXm/5XxW+P5wly9q2syh/cdU+bPK/cc/rEc84q92tHv0644fR5X+WfMyP/
N588fdnpc6PdvIsRUVu9tcun9v/967NOH//fzd7VYo1Kp1/+wOnzjvYN956Z
8PWyMcFu3qx8K9uuhLgNXv+q0zJfrRPq7H+Y1mm75MzW6KM8aZz931vzpbpL
YtZ5Lb4YkCVLiTTO/hdU3Grnzcsq55bIK3NyDs3g9Fmj/cpt52M7vfp6OqfP
KJX/4sgpG3b0T+Psf3uVP9H7o9+b2YPd/BiX9/rIhLh4b037mrOmZklyOny1
6puoqNgd3t1ilZcELwxx/kN37VeOv5y7VNF3wpwOv26ODuuWsN2L27j9cPMH
6Z0OA7SeHLryw4qlhmd0OjTM1e/jqNi/vC+6P1cuQ+lMTodtik+t37VI5Xzi
ZK7XsrbO5nSYoPX5OwM7D/z0iSxOhy9U/g5jvp95OjmD06Grys+9fnT44LNv
f46I2uvta15435a0Af/cfy5gjxeeaXDC7JaB+LdW8ZIdYyP2eKd698u5aGha
V997Wo+dfqRJq+n9srn6nvig9d6YhJ1ekzSf1agVHfAzv1J8av3zHirPL/nL
5NqwOburb0uVZ0y9Nl1fnBnu6utTedZ/XSb/rWZZXb3KnH9+XUzCQS868uVv
/n885d+/OujtvPNhtfG7A3FHyshN/RLiDnhVwu6VzP9WIJ6qpXjTxlOllX+2
Lb+tSygSiKdyKf86f1fL1eLJQDx1X/mHRgcVufJJuIubJiTcTo6L2ed91G9T
2/8fL1xo8tehuJijXsszmaP/fzzL/lHRvENCb0QH4tk/br81OiLqiDd8wMPK
09IH4ln/36P/iWfPKv9tdwctKzInp4treuhcR74Mm7dmzhyIW1umtuchL7fs
OeXclZrfMS+bOOWsp32QPMqHcq4oG7w/LuZ/PGHysHQFAuVs+5i4dafyf3pN
xs5F2v6/9QTlX+qzy6XS9Q/ovFz5d+868bXf0mR39XpC+03FpZtbJ9k77tuI
qESvrXSmXuViQ4dERJ30YtQu1GuG9rOOfNqqfa2XA/0n36l/3kqIO+FNe3rz
7m/uhrl6rSA+Nf28rPJPrtPy6vAagTh0uvKPKVb5/be/DpT/Q+2z7Fa/pfxn
h3YqGBV73HtV/Zzyj6y7M1dU7Glv1MYO9S9uC8Sboan7V6c9b/irHxxt+cCN
6z6p+p3yxs4ofmDjwTRuXLNvMlbjjnFd36syJybhpDdH45T65uO9FGPHRqg8
jWUHqG+IyjNDdoN27KXylGh75auln2Zx4/rS3clTYhLOendnd8x9LDYQD77J
eYykD6rGzr3t6rX3lZgBEVFnvZvvrB67eEWws+ecf8AeYs9XTX6xdULcGa+j
7Cc6cJ7hnuwtOsy8lvaF2Igz3pOyz+jQR3FZJTOvXVT5B8v+o0N7lT+t5gt0
2K3yL9X8gj2vz714zUfo0+C37s/HRlzwto/qkGncrkDct1rnUuo989STk767
6vSpGFI9U1Tsea/PtoLFF/juuXmf8xjMm+hTINW/OOdd0jyLPpzT+FvzMvqk
mb17fVzM/7jmcfTZq/jrqvGLolV+/AT0WaXyx8ivQJ/yKv+n8kPQZ6bKf0B+
C/r83DHyj7iYS17e+6uaPVtgj9PnKZ0rmNB0QoHMBU47fb6Nyzg2JuGi97P8
KPThPAl+F/r0zbDvw4ioi16I/DT04ZzJTPl16NOhzbTGCXEXvO7yA9GnouKs
JONXz1b58TPRp4DKj1/q/CKVf4r8WPRJo/IXlN+LPmF5s9RPiEv23p6yKSlf
5alOH87/DytadscLR9Y4fZK6HIiIjUj2+skPR58Oul+zUX67WzdYOSM4KjbJ
GyU/H30a6N5HYcUF6LM61c5d8jJofkGfUYqbgoIGbvn/cVwalb9+f3+cgj59
VP6limvQ55LKP0RxEPq8qfKHpfPHTfjVe1T+iX++uuLJI8ecPocUN82QPui5
WXFBSfU37PYi8WfESZ8gP3mPxi/p4w0nfVP5k0E/++0h6aPEQwxfIX9y87kK
+8oVSnL5zJIdWybOvPOW7FJu2VXyuSw79lB2mPRrNU5rys6QvqGxS6QvrH77
jcYd6eeqn4dLH9JHq5/UVvwL76f2rWT0Z7/1HbPfyrmLp8bOf+aF79e7fIap
HRsqH/gXilvb63cpp3u/RfnA2ReO1DoS+eRQ/IidgbdU3Pdy/2ZLz55Jcvlw
/rPQsB5Fb35/yKUPUpwVJZ3hO4iP0uTpsbf0zYCeikNf13og/bms4jjsP3yy
4qmHigfhsxXvMJ/Cv1HcEVTcHzdRnj6Kg/Kp/8CnK36pO3Hojzk+vufKyT5m
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
Pobb+QI/Z4j2L/qq/7t1ftmrglqXhlfU+tUy6Ua9sNtLpr5/8s9ns7v8uYcb
HdLpu1+iA+fxTmvfoWu++fcuZUp2PJfat/Kt+/W6F7zsysN6UYsSl1oG3wis
Q9r1JXe/Rnbj+ZGZZ64uGygn53bWZ7hVKflMYP2Q+Svy1ZNRl/Jkd/32dcVr
0YfW7L3y9i43X+RWOcdrX4b5gvp+GLsxbesPHrrxS1zAejIcv8WuPxP/Er/D
WQ9ckvTj9y2XBnhbzUfd9nwy4ruRaR3vq3Wz0Wb/CN16vby3ydfVAumZR9pr
nQQeLT1zVLq994snw9z7eJzXZZ+R+9fwzOVeOlur3HH3vRL4U51+KLAy9Jx7
xwD+ea/lb+ZvkuS+VwLnnhrvxMIn6d4N7y3AuQ/Fu69w7hnxrg48v/Ln/ju8
v8rDPW74kyo/72zA06q+6MN7NVm2XLqT9dx09z0R+JFjX/456I1bTgf4l4Ve
2dSoyX2nA5x7eegAr6d7SegAv6V7WOgA574bOtj80QE+SOVBB/gBlR8d4N2j
8i0v+/Cy04Fztp/N8tXJX3Ke0wH+u+5xoAN8ne7FoAOce4joAO+s+3roAH+o
e2roAOd+HzrY/NEBvkblQQf4XJUfHeCJumfBuw2cpx2i9xLRB869eMYRvJfe
q0E3OPd20Q3OfVV0g3frWiI09xuZnG7wJZV97Z8om8XpBu/7T71P/9yWxekG
j1N6dIPHKH90g3PvCd3g3EtCNzj3bnifEB6hexm8cwjn3gE64ydkWnB2YrkX
rjqd4bwngM7wd4LKtOgUH+Teq4Gv1r0kdIZz/xed4Z9dij87861sTmf4uN35
D1deFXgXC155y9xfBv1v3kFn+FilR2f4p8ofneHcO0Nn+B8qPzrDZ+veEDrD
uReDzvAWuveBzuwv864COsN5xwCd4c/rHhM6wz/pGr1+0AsZnM7wpUuaL80R
m9XpDOdeMDrDWW9HZ3jynbNl+iwLfKcAzro0OsO5F4nO8Ku694fO8PS614bO
cO6FoTN8onRDZzj3btCZdZtqut8E9/unR927E+hPet6dgLv0eteCdiE97xjA
SW+/c0p67u/DSW+/f0r6d269MT0qa+D7p/DY1YX/zhEe+P4pnH0B2hHOeg7t
CO+t9LQj/FvlTzvC31J5aEc49xbh1Mt+F5X03O+Dk95+L5X0JdSOcNLb76iS
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
pVL6D6RzH77LYPyZverP8EnqD+U1L8PfUH/7VvMvfsJljS9f6nnBPY5f1DjN
o/Mh8FI6d+S+P6787X4T3O43wdlvGqr5i/yDG/vHL/bQraM+V6LqmAvHHWce
XCD7E6/5Hf6e7NgVwweLt9c783DsZA/DT5rvRzPfYbffl57w3Zo3m6Sea//b
8X80L5SVzvDeivuwq/BBZl5gPi2jeSSH2hdOPOu+2yKez8w7zL9Pax4kPZx7
T4vk78F5r4B1Zvh7OvfCPMJ8d1vn8ZiPmEcmX199/PqI+/+Zvw6aecrF469f
LZ9m8tX/zFNd1Y7kg90u8GNKwhdF07h83L7tnjkNK9S76+oL76J+xXeFsFf9
PhuyKWuLwPeg4RXKrvqw4hOZ3TwLH9j17swHtwPfg4av6T6swdXZge9BY8fK
fDGs/ayBge8Cw082uD/vyLOB7wLDuffEd8Tg3JfkO2KW811gmw/1hR/X71Jf
t0+nclJfeGiXV7MPzZXOfQcHe2u/4wy333GG2+84w+13nC2nXjYf6gW333GG
2+84Y4czmHrBbXvBT5n2cvG7aS+4bS/LqZfNh3rBT5j2cvuMKiff1cLe7lA/
pL7wweq31Bf+gvo59YUP0Lggf+zzOxpfx4y97aNxyu+S/hmN007G3trviGEP
18gOkB4+W/aE9Ni9DDoPP1lxEP5/su5hsZ4Gz6n7Vv57brGOD9P6ZxPNU3Du
u63ROg+c+2LEs3Dui/XTd2oo5359f7O64bHiRVUe7C336aaqPO7emcrTR/WF
c2/uoMoD5z5aeq3DwLmPdlH6wLmPdsGM33Ead/57OMnOPnCfxX8PJ8lx7rP4
771c/k96/72Xy/9JP+sx9qH8Y+wDcSXzEd9toZ/A06mfED/CB5p9FuajBdrn
miCd4a8oLiZ/+Gr122Nm/YFx4b5LqPG1WOd8mEfo53FmHqSf3NM8C6e9uF/G
77p1fnHqSznDtE9HnAsfr/rSz+GHdM+rmznXN0L7qvc/9p9npvwHlR7/Ac55
yLXKH77ZpKe+2XSONFrr0vAVGi8NDe8l3k/reM4+6PtxfQyfbL57i27cKy+n
dVT6Z06toz7Q+h58ZuLs3IPP5/BNeUy/9d83C8zj3DsLkf8cWB/239N8/jH9
3H+vLDDvc/+rvYmDeIfhGzNvMn7PpZ6rvvqfeoWm3ue59p96hYzy15d5Z5b4
m7p3Bn9G9+CGqr5wyrlK9gHOeB8h+wDHPkyVfbDpV0kHm/9F1cuuewepXrb8
jBe3z6h25zt36MY9OOJieA3zHT0434EdavY12I8oY/ylRPktpKecnONif430
9vutcL7fyndabTmJ3+H2O61w9l/glGeUysP+Hentd1fh7O/AyedtnUNjv8/p
oO+o8v0vt9+n96/Y74bzvaSqirPc+pXiLNLDW+k8Q3XFa/BXtS46QPsy8PZx
YcVbDbvpVdP8SxwxX+tOczUvwD9o/evf8c3PuPjLnV9V3PGO/Bns52H5P10M
xy/qr3iTfI4ofq+t8sPfT0rbr1jxgF8Ef1t+Wgetj+GP/an1MfxM5qP+8vfY
f4f31jlV/E94efmN/bS+R/5RWt/DrsJfU3nCzHo48d1MxR3wROnwi+F7xA/I
zyH/NlonJO6Dvyf9O5p19claT6isdUvmI+67/ajvkDJfFNV8kS/+33yF+Fqt
E8J5H++yuafGfbSvta9Ee03TvhL+uVs/lM5hGhfwXVqnGqDvisK76juMXxr+
vngd7Vvxu9wjw/8nPf7/PX3fEH5P34VMMTxFPPgx8xocO8C51u1mX5jvQ8Ub
/qY46cnnXdmTU8Zf5T0cvtcJ53udq4zdqyO7d97ElUdkn1lPhvO9zl/M/YWe
OocWIvvGeEG3MMOvibfX+jO8m9rrLcM7ihMfufMVuo+ZXvfLaN/yul9Geuwb
8VQnY3+OaHz9aurVR/XCnjO+Bnwa2Xteusy+s6n33ALtMuPFi93KtQ73Zde6
Inyd7qMlaD0Wv4t3LykPnPcWKsvOU68Lf+/fGvJGqK+v7La7F3C05cVWJ1Pc
ehG/yzpGQe1fUP5vtX+B3YMnLtn0QnKhdE5n8ieePaLyw3/MdHL7gzmBfRna
i/Wi84qbqBfvfjNf047F9H51Pc3Xbl9J72z/IT+Kdhyh98BXyC+C7x9Q8Gzq
fbrU+43XHL+tfd5p8ldp33XHio7vMDiLW69w+0cRHWp/1CuLW6+Af699ZOYR
eEXtOw+TH4g+r0YeTlvheLhvuvw6t7/T7sJnX14L94XIT4N/pH3zpbLD2Jne
2pd/Suui7l6D9vF7Ko7Gj12o71ms0jqnO/eu8wl71Y7w5nqX2P+OTGA/oofO
aaTR+KJfhem8xxm1r/Vj6yvepz/k0rmaaN2jdPsO2j/aof4AZ/+lrvqD3V/4
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
XVO3Pik79n+p3Q9+
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnHkcV0PUxu9+f/ayhGxFsiUUZc+SKBERRRJRJEolCVGWVJbsKqGQypYl
2SsVQmmT0qIsJUsIRZbe59sz7+d9/5jPOXfu3LnzuzNzluec+dW8uGvLq5Io
ih7MoygVPTeLor9FZ+jifPEbxX8i/r04iqaofKvrpIiiGqKviE5Q3Y/ij1X5
TPwklXXiL9KzA8WfJbqT2r2nuqf1jm3E/yw+L6PofpX3xY9RfVXV/yJ+c9VV
13Vd8YXqbtTzH6mf60XP0DhOUv14DbiJ+Ib0Kf4k8Q3EPyV+Z5UdVRrp+kzV
NxF9Sdenij9e/LPiW4o/WfzL4iuVKLpL1+fpvQeKf0f85nrvORrDNWqzXHRr
3ZtC/+JP0r29NJ6bRS9TaSH+I9HLVc4UP0b0K5Wl4ueIttU7dlI5Tc+fpeuB
opeqnx3F/wYv2lHlNLV/WvSa1G0W6pkddL1W/FuiTVRqqU0/0c4qLcU/KzpM
9FyVv9TuOo1zV+ZH/T+lft4Sn4pm+l39Rc/R/SFq+6/qv1LZRvVDVd9e9Tur
rz9V947owbreVvyf+uaxrquKr164zRzmXf2fKn6Q+E7iW6v0Er9C9Dj12Vt9
nqk+7tVv2JP5VT//6b1tdN1NtGnq9TJG1y/quqXoal031LMLdG8f9X2e6s5X
qan69qIXqdwnvq76vVF0N9HvMtc/J/q9Sm31lYkerX5Wq5/D1U8V3T8z8e9p
FdbFWNEj1Wap2hykNkeIXyz+QPFTY7dfGdqztp9Vn5sV5t8QPVztF6r9fuKP
Ev+l+EPEb5f4tzDmI/gdog/ruplKB5WmKnU07gtFN6h9pnKQ2rwmerz6uU7P
tNT9C/S+XOOYresTVd9X9GzV/8bcqP3voier/kbVn6X6xuJvEt9K/K+F379W
dD/NxzHi14s/UPdGir9N7U5Q+16iZ6gu1VjG6l09Yo+fb76tyr655+gfPdsu
8Zh5d1p4b26t+4+p7hDx4zTe4So91cejon+qzQ6695foMXrXH3pXI/FfszfU
Zj7yQ/dbq9yv5+/SOAaLXqY+T2edqY8meu6xzHvtPz1/utpmrCddH5e4nwPg
9UwrPXuonmslvqP4O9TfYl1/p/tLRBcj08Q/IPq5ys7i16rPZcyp+C9Fm+vZ
dnr2Jj17h9rso/o883fke1bVO89jHsS/ye/OLVvq636d3LJljtp/GXvv76dy
fuqxvaX2rxZeU/Rzgtrtovvrdf8Tve8K0a/Vx+Wq20Olg9odwF4SfUL3jxd/
jvgbxd+nMlH8ML6VnjtU/Cjki/j64keKby6+Hs8GucccPS7+XOZe/PPij9N4
1rFP9Z1bs85U/wJjU/1frEPVH4ucUf0xetcJKueK71taLr3C2lbdDqX7PFD8
Fqo/Wvw+Qb69Kv4R8Rciu/W76onuq/ojVb+36vdn/4ivLf7bzLLya9Gz2Luq
f0bXVUp/W77xU6W/Cd/mbvF3ir9cfL3c8vwG1d2OvtG7fuG3qf8hqm8jeobK
PeJbi3bQb7tF7T4Q31Slv+p/5Leq3Cv+CvU3o7A+Q7bfqr6eoI3G0xP5wjyJ
3qL6x1X/g+o3Fm7TGx2ReF0drnK32h3K3hK9TPWdVE5Hb2mst6Inc+vHP8S/
Lfp97HXbILbMuDjIjZ015qf1vsv13CCVG5CLevZBvqnaFqKjVA4SvyVj1L0z
1eY3PbNK17urj/GihyFHRK9VfxfoXlu1eVf3uojvI/5T5JXGcb34C7EJcut9
9H8nld1ULka+5f4d26q/dnr2AvGT9Oyn6rsaNoHqOuodXdm7ajMv7H1kQCuV
oWp/tfoYonvDxHcX/5Ke3U19vCD6idosUvuZorODPkWvnq3yiNp3Vfu9xK9C
v+teW72rnt71AnNT2E6BP0/8w+K7qf0E5GBov09p+VNb9CZ0aBLmNTHP3Jyr
Pq9Snyv17HnirxX/C/pO/NXivxffRnx38T/knnPm/kDRnwLPGjhbbTamlksn
6PowlZvU/xL9zq6iy8L+aKL203Vdqv1AtW+DLZS5j/uQW7q+Gjmpe0er7VGJ
53gez4vORW9UvC7PVdv9c6+5+uJ/Tr0vNu0PXR+DnVRaxiHrBokuFj1W9bsH
GdYosRy7UH3W1vMT1N+TeuYLte1Wsbxjbz6XWB+jl1epzULVn5JYxjYL6/cq
3WuhZ35VXT+1PU38qtTy5HTxP6WWvT+kXj+so+aq/za13Gsn/n3xvbFxSve3
C78rfLfTRWvougf7UfN8ltr/q/a3q6458lHl6tjP8OwXGmf7iu3LKcgH8X+q
ff/S+uLUxL/zdORX5DGnwcbA1the10eqzXaiXwedhD5ClzZGz4vellsmXIAt
JP559rv4XXLbqXshz8W/oPqLsYfFvyi+g/gHxI8Xfwn6QWN7Te8sxH+j8kiw
2TYTnaw2UzLbcW+Lz1LrBnTEpWrzFXIy2Ler9M7hyFv2f27Z2Lq07NolsW1w
a26Z1rb03qyltktEe+WWn6wrvjP6eE/RZSr9gm2JjfmY2nyve9015uV6thYy
Obftca/uj8POFn1Tdd/oGx2fWD6OV/2h+BnIAfGHiZ8q/mXxDcRPY+2F9si7
b1VOEL9/bLnC968ZZOeJieXndkH2DhH9R3UvaQwTxd+lvsaKb6e+J6gcpf7f
V90Y9oz4N8Q/K74uNjS6RmUc8lB1rzLvqp+uutHi9xU/Ufxz4g9iDsQ/I34/
8a8zt+IPEf8u8y/+YPHviH9H43gKmY9tqfoDNL5/sanoR/xD4qvrG45W+86l
5faVqv8bnav6J1LPbzXxI5G12OziH029fhqojFL/G9R+O9WPSL2W1mT2az7h
u+u6s+hPavNvYT/lP9Ed1X6U2nfS/arih6den1uLfyj1d9hK/IOpvyEOZNdg
y+2k+idVf5nqtxA/JPX6fz7IdmT8Zqq/G/9S9VXED0u9LzYXf0/qtbeL+GfE
XyG+YWm9WU/0UtGOwZ4vKtbNrOFhpfXGItFu7PVg62Mz/Kj6X0TXZv6Gv4v2
Zu/q/uhQ113lgchr9ijsYdEWqjtD5RpdDyz93fALDy/dP+O5mXlR/WmhHnmL
3D1H42qBbZ/YB2HM2/DNK7bvH+Adib8d320sa0DPHFnaNuZ7orPxZbuF31JH
93cU7Z/YfvhZ/cxjDarPV3XvGvH7iH9FfE9kofj64qdoPI+yJvXcHbllCWvj
Z+yZim2v/egncZuXdW9qZtpLtG7iNYkPfJnaX64+l6qfI3P/RmRgQ/ZcYj00
Qc88KfqqaKZ7tVX/j9pOzrwH2YvvhvXPPrhIfd4sOhX/V/w+6v81tX9LdQ+q
zVd8j4r1yij190bon/f0YjxBx10t/uwgVz/JPLaPRS9MbdtP1r0F6F98CdHa
av+y7vVQ+yLxfNdVfS3Vj1d999LzTz16pY7qtxf/h8a5PzJZba4tva6vQH6q
za6qH6P6Lnxv8RPE96KN+LHirxS/u/jpGtfjzLX451R/lfi5evchrE/1s1Vp
fsvSviBj3k31H2aeh96i9fjdKrMjYxNTwv291OeL6vNqPVtT/PPiu4rfU/wL
4ruJv6W0b4L/dH1p/wI/o0FhOx97v6H41uJPzL3O1+jZD0XL0t+ftXRKZp/r
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
To3JIZOXJMZs3mSLi96Z29fAngS/eUM8gX/sw0+RvZHxnndFC9E1sX0E7Mub
U9sVixP7FPjyfyfGaWaK3y41XvWJ+G1TY06TxVdS4z3gnH8mtj1bhT0O9vOO
aJ4au5okvkyNA4GF/pUYQwIL3ZDYt57F3k9DfoHK/Mg+7uei1UXbBjsYW+L2
1HYy9jI5B3yfrVVfU9evx75+KcgQ4gnt0LWR1y65AMSnvkgdtyNWTRzvjSAP
kYv47gvE75w6d4G5qFI4Tky8uIIeU/khcj7DW0F3oEMOKLyf5uSONVdP/Mzr
hePh4Ax7J9YpyPdahelE7GjVV0vc7wexx8YzYAyfiu4g+mTu7w/O8EFmeTYt
9e/hd92QGWcCgwJrui63Xw/G+Gji2PQmGaG+t4i9h4l7s0fwFVZmxo2Jv1+l
MW0We+8Qw8cXwCdoi30XW14g0/D1bxG9UnS72Pq4v653jI3JE7fHb8V/vUp1
28fW64NSY9dg2JfEjmW0jxxbJkb5uurbp/Zt8XGJeyG7JorvGNs/xyYgzo+8
wv+4SHVbxX4fuQCMEd+FXBjWNnjVe5nl+nup/VkwGvAZMNcPRbfCVs2sB8AH
wD7xJbdJjaHOYL2JXpdZt4BL9Mj9W9bnjl0Q+wG/ANP9gHUr2jz2WiKG2ja1
P/42+70wDkK8u0NqHGOa6nvmlgnYae11f9vY/vnFolvH1qMXFd7f26JTUvuG
+IjkLzC3+HPgVcvE75k6L4aYxXq12Vf3GvLdRScXXj/YM5MKx3xZw3vkjiPP
w36OvS5Zk6u1/hpjm4iOUJkYG0/AbkfO7xobVyO/YERiPbJC7f8orXNmBP3+
YuizRuQ8BfRIzch21vRgUxGPJi5GbGpd4TbkS9TNvU4+y72XsePQofRDrgk5
D+hmdDR5DeNDn9hDu+eOcc8VXRFbH9WIjZEerLbTMuc6kPNArsV0lf6qu7hi
nPNA1U/KjPmB2b2fWf+yd/cONtJzwU7CPmZdE4faNnd8/5MwZn7rkMT+Atga
sY8quWP9H4luldue/BAcJreOI66xeW6dSMzi78KY8gFg+7lzBj4W3TK33fJB
7nEhW8gdQf68H2xaZBMyirwQ8sOwnc7OnB+G7dImc5wQu2oicj22LYXceVX8
J7FlCrYSNtN7yO3YtjXzAUb9pvo4qGL7i2fBd1irrNu+QV6Bj4OZg82A0VSJ
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
          "]], Polygon3DBox[CompressedData["
1:eJxNnAf4T+X/xs/nzK9IikhpSRnZSYMWlUJWS4iQrIQKpahUUqlUKKWSqBAt
7aFJC00NEdqlZVRI/e+X+/ld1/+6PNf3uc9z1uec53mP+34f+/cZ2uWCOIqi
5mkU6V/UtYiiSfr7lTbmZVHUU3iO8EbhnYV/zKMoVv/CUhQ9rv7QLIru1PiY
JIraaHyVTrJdY0O17UtOqONraP9b1e2i/depbdb4cOH31f9JLdH4Rdr2hPq9
tf98jf2tbZV0vlOEBwkvEY6FewjfJ7xeeCfhP3SNwervrTZf/e4av1fjPwuX
0/hmnfNH4Tkaqy/cTuNnC7+i8X/Vb6/WX/hN4ZLGX9XvqSl8K/ck/DH3rHvb
X+069bdqfKbGf9X4Vzr2Gp33Y439qW2Xqj9c49PUH6vn0VrHn6l9bhFerf0z
4aU6x+fav4baZepP1TEljdUV7q/+2dp/hvb/RdvKa/+JOt8zwrfrfG2F39Ex
n4TrDVC/l/afq/4m7V9R422FewgvEt6u/rlqjwlvE66s8T7CC4S3CO8q/L3O
8Z/ON0ztW/X7avxRjW/V+G4a/1rb/tbYhdr2kfo/qEUaG65tj6h/le5vujbd
qPtbq2Nn6zdU1HhzjQ9S/xtt3039c9SOEl6rdobGb9Mxa/T3aR1fWf1L1B+h
69XRObqpv7+2/aHz36Q2Wsd20HEfaGyi8KXCPwq/L3yb8BXCnYQ/5N3qfIN1
7BBdd5nwn9p+kc53u7ZtVv8sjQ9Qf7DG39P4OrZp/CCdI1H/Rp3vEvXbq79c
480Kz6/fhT9Sf1cdX0vHt9Lxzwtv1XZtiuoKPyR8iNpA7X+MttXTwO5qddRv
o/EXNVZVuK7wScIvCf+i4wdo/w7adrq2NdG2fjx74cbqb9e4HkvUQGNzhf8V
LifcUHie8DZhXkk94YeFt4R1XEf4QeGSrldBuInwAuH/NLiTcCPhR4S5+fJc
S3i+cB/hkcIXCX8s3Fd4lPDFwp8IH6B2mu6vsbbtpbFN2r6nntd5aq117ne0
ranG7tM+z2rfWG0/9Z/Q2Gfqv6vxQzQ+Q9ueE35PuJnw/bGf587CNYSX6byH
6IcvEa4nfBdzReOLw/ObJvyU8GrtV1HX7qN2jK4xDpuk/snqv6Xx7zReWXiI
Whtte03HH6Djb9Pxj2n8S43vrLHeakdzjMYP1vjdGn9G479rfA+Nnat2nMan
6vxXq99F/U813ohnpn3TMB+/199zwvx+VP2v1E4V/ln4QvV/VjtXWKeNRmHj
wv0cl/h5TNH5x+n8nbXfCuG6zGnt943wxWW2W9ivw/W3l475Wtt7qH+Ktp0m
vF6tqo7vq3asxq7X+Uaq3079t3Wuemo9w/vbqLFdgr07NvH7Yr1cqPEhahuY
axrfQ+NHanyhxt/Q383CL+ucozVeVdtaat/O2tZS53tXbYXGrtXYo4X9QXuN
19G2Keqfr/Ndq30v03m+0PibiW1ZF40fovH9ta2D9q8pPEHnOqLw/bB2P1d/
T7Urtf9QHXeenscezFPhU7X/PPU/135ttf8F2tZW/X20bW+1x9QeV7sJO6mx
f9XeEU6D/WmWeD5kwlWED2V/4df0d4Pw8zr/JTrf68IbhTsKN0m9PqsJ19f2
77T/EB0/Xvhy4ZXCFwvfJHyl8CrWj/Dh3K/wq/gG4XnCd/AuhV/V39+F2+v8
jVjb2BD8s7Y/ofFX9Pc34Wc1PlLjzwp/K/wPa1S/7b/Y/qKdxidjA7TPLrFt
Cjb29WC/bo/9+3ZSq6/+bG3bVc/7Ve3fUPhV4XI6/ulgm/rr7xnCizXeVP33
ta2q8H3cU9h3H72PvcP6by/8ssYWat/2wrvHnp9Phbm6R2x7V1P7dMLXatt+
6lfQ8Xupf1Ti9fe2rtcs9pxbgu3SeHX1WyRe/+WF92TuJbYPxAPna/9rItvs
d9WaCx+m9h4+Qq1F7Dn7kfrL1I5Qv2fk9fSp2k56dj3UjtTYM2p1sF88Y/3d
J9ivU7TfIl2vYh7eh/ZrpN+faVtt7TdL23bRWKXc73OExhtr/HMdV17nPlut
hbbN0P7HanyejvlD/QY6fyvhM7Xfa8Iv6+8vwj21f0vtv1vh98F72aJ+ldzz
8zWNNdH5dy38WzuxZjX2hs53oPqTY8+fQriq8GE675Osv+Cf7oy9vmtkvp+2
Gh+o87XmfMIPavy34N/wV/itkWX2B9WF5xH7CLcSbq79Z2vbr9y/7uF13fuu
2lZS/zhtO1T9WZxD/Tt0vSeFr9LxfYi/sCHa/3LsqPCLudfea8wZ9U/QMcer
/5iO36j+iWonCD8uvEn9z3S+84XfEl4s/GmIB4gf3xT+XHiI8NvCS4Q/Ee4i
/Ezs591QuLVwV/3+1/m9wicJrxQ+QvfzQu61xz3vrn4zjZ+s/iqNH6nxkwrP
b+b539gqjd8tfIPG1wi/rmOW6fgr9Pt6a/8VGh+o8cXa/w2NX4YP1Xh9bXuB
GFLjXdX/Uf2W2n9d8MdLtf+72n+s9l+q/Z/Gp2mfQzXeVv2v1G+h/dsUXn+s
w7/Ufym37f5A26qr/4Da7cLfCO+j/uU6/iH1x+v4hjp+nrbdpfEt2jZI/bEa
f1j96zR+ksavyJwfTBA+WfgsXeMu4e90vUL4dN3fRB3/FzYP35J5/Artf7zG
T9b+3fEn2v8f9e/XNSZp/3XEF+qfpmNuCPhtHXOW8K3hft8T7is8LdzfoerP
1jFThDcJn6f+w2p3hOsPVL9lYXt9ja73g/pHqx2E/RX+ifmofa4pOac5Tf3J
xLjCN2BTeVZqVwpfz+9Rf3bmuXm1rt1Xv+cY1n9YTz+rf4P2GUWsz5rK/Tyu
L9lnzdX9T9O2a0vOGU5X/1aesfA44ZPV/0ptjPBVwqvV/5J3VLIPXKn+TJ2v
vK51sXB59b/NfK334xD/Ck8VXhfbHw1VWyK8s669v+73AmIq4QrC+wlfKPyO
cCXhWsLDhN8SroitFn6GHEB4mK51sPAQjS8SLsPPCp/PmhcuhGsInyf8rDAB
T1XhhTr+Ud3/ftoUq9+vsL/Cb+2u8Yt13qc1fjXzUf3+Gn8O26Hjq2l8qLYt
KNnnXYDvDfHhxxpvrvFlwkcIPxQ7vt43xJcdNP6K8NLgf7FnxON/afteOt8A
tROwr8Fettb2F7A1wmcJn5t4fQ5Qe557Jy7U9X7Q3yo69gK1k3R8rXD9Fdp+
GPFJiCc/YG2STwZ78mRs//9hsPePxPaXBwofKfyZ9j9c+38U7NH82P5ms/AU
4bWx46fBrGnhnN+h/YfjM/E9wgcIP5n7WTcV7iH8a4hPVsSO75/V+EJiDW1L
1R+k8bHqV9FvOUb7/yZ8nfCnseP/VZlzwXeFB2j8UuHJ/B7tP0j4IuGJwgcK
nyB8kHAL4Zd0/QbCW4TvEf4hdjw0OvyeF/DbGh8hfDP+QPuv1vhItWXYWuG6
jPMOuT/hOsKjhJdHjkXqMX/IKYQrC9cWfj7Er6x38qfngv8bGztfuoicRHg3
7X+Q9v8n3UFZRAcLz1FnkNqLwhl5DvY/xB/jY+dfL4V45YbY+RPx/lPkEqxf
cr4Qn0yInW89E+LL0bHzs5dDvjMxdn72bIj3Lo+dT+6j1i42X3CN3k9ZZnt1
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
MwvzKW0DP4j+R21Uf9ZcbhuMLT6PNaX+8Ny2lvdXD9+Vu/aWmsqG6l+Uu1aW
msbGvL/E+ik50Yjg/7ENsxJrB9SpUK/STdteiq0RnBiZE4Mb+y+z9kDMQexx
Se5vB6jxOkL9fzPHIsQoxCrXZdYan04D35r52wzmPHOfjy+4PjaK2HdSOP+d
ibUNNA60iImJtY/6ufmhlmG9Y5OxzdR4Hpbb5mJ74bDg87vm1vouSVxfgZZG
PcgVkfVyNFK0M2JyYvPuuW0bNg57hdaG7cKGfaZ9zsod21+auH6DYifytTWB
76JeiLmIz4WfJdenPoV4mbh5QuF3R60bei6aB7E9OQW5xfjCWhE+F9+LZoNv
g7ODu+P7J3xtb47JrdWhX+Pz0KPxIfiScyL7b7RA9G58IPo0PgpfdaZw8+CP
4BI3J65X+i5zrQu5K/UOv2fWDskVqZf4ObOeT25KfcbOqesjiO+J83/KXHtJ
bks9BZxF1cCZw2VcXphvgLMhf7yq8LvCB+ILqaH9Btugc94X4gHWIjk9uT3r
E22Ums+7csc3+PLaam1y19hSb0RN65zcet85qeuLHg7rndrUHTWquWtaqT+a
ig3Avubun85vyh2vYBuoWblb/f65a4UnBH/wSuZ7Lantnbvmdl3kmtt71V+o
8TNLrgHGPryduTaZmpwh4Xz4FmwEtT9olGiV1DxQX7wh8/cP1MCQvxEv43uo
gX0os37bM/U9cfwXmbUgahDIv5hjzDVsyFXh970RuWaI34s+yncjXcLzGlNY
mySmIbZhDjAX4DOohUFfnZE6hiWexQfgCxoG+39J4XeNT8I3UY/MtxWViA9y
19dj69Gg0KKuKMxNEzMRO1HnRb0X+gXfFI4rPJeJMYk1+V6G74nQnNCexhae
y8RoxGpLEj+7NWq1EtcnwT/hk+CnqH+Gv+IbFvgy6oPXl1yTQy3QD5lrR6gB
gn/7XnhM5Jof+AP04WmpY0BqOf7IXHtBTRL58prM3AA1SfAFrBnWDnwLtUes
GdYO/A61TqwR1sqYcP1hiXkg+KBVwb9hq0aH+G595lozaqbI1+HwqO0k59zB
7WX+FqQs3B85MLXK5HTkxs0z23ZsPP4G+44WTMzZJMwfcnf0KLRNNCTeBe8E
+049Pb6ImhjsLTkvtbLkkOTC1Kvia6hpxB+1ymzvqKnB3hDfomUQEx+bOV7D
lmPT4f6pv8eXUAOJv6JmEp/ENsaoaaK26aQo1AqXuZaSOcC3BtRMUjuJP+Db
AupR4O75xoL6C7YxRg0m/pF8jdgSThvtiW824Pk5Zlvuc3JuOC+4r5aZ5yNz
kO+1qJmGF4MfOyh3jTJ1dtTb1cydD9Gnxon4Cg6UGkxsANwo9cr4amq26gT7
gNbCnGWc+Je1xRo7MPc3Muic6J3TC3/jhy7DMfvlzre4Fzg7aqexT/tE5mix
p3C23VKvB7jcv9TfHvmbAdYnNRBwpcQIfG9CfQTfRbGGsWfUqFKryj1z73wz
gy6KPnov2kfm2Ihvdvgeim92qBsjhr2ncHyIlvNfuD75H7WcyzX+Rm5/R60C
Pot8juf7SeKacGrVeb4fJo6v9gjxINoC/u2OwvVAL6bWyNHbiTnQesk3iEWo
11go/EDkeij4FXQs9KwGheNHtAv899TC9VBwjPD/6A3kB3zj9Urk/IX5Mje1
HoH+Q35KjS7+qFPm9UzNMPWVHXPbrI9Tfz+FLcMGvp/6myNsI/E532yhL1N7
8D8NGc7igcIxBtoafC6xBxoxuiz6LLUL8BFoMeSw83PH0+NS5xTkFvCTcND4
6MGZYxjqPKn3JLYhRqIWlfpVYif0Rr5RZc4z94kRqFMkhyV2oMZ999Q+itp3
alzRhdEUP8tds4tNx2ZgO5gPi1Lr5ZXCfERLoN53Zu75vDzx/OVbVub786n1
eWqr+KZmUWIfTrxOfgZXBl9wW+F8bnjqHIVcBU4frQQOC66f/A3ub7Hw7YXn
7xupazao3UDjQOvAhmHL0BDQEvhG59bCHFiaWMOAG0PD+Cs2h462AYf+U+wa
Bbh16heI/YgB+d7lfxojNXmHFtGOwph/En+vCT+AxrEp8Hnwv8wh5hLfvBPv
wVmvD3wgXDY1nUsC/wsfC6fIt/toAnCN1NNQu9NdrUdmPoJrwSmcmtnfoTXx
fw58l5sD5/8OgKOEG4efhk+cGdYPmgL8NjUsaA3UZCwPfDC/FQ3nl8A/wmej
ofCtPJw72gr1UdsS52DkYmg2GwOfiZbTK3MsSUzJ9z5oZGhlaCp8PwRHBFcE
h1k5t+axOvDto8J8pC6W+thTwnyhbpr66Z2Dv4bbxqcPzMxnMPag2pjM/4cB
cQc+Dx0Afws3jk/vHeZDw9Qc1fQQn8Gtj/1/8/+m1D67fYgf0B6ooaGW5qTc
uSz/JwL/H8DGzPdKTkKtOvV81DlT73xGbpuB7SBG4fsl8hVqO4k5qPejPrB6
6m8+OJ41y9pFU+qUW0MjtyHHgS9mjbPW0aDQJwaHeJ0chv9f4u/M12Y9w79T
Y0j9DRoU33NR80ftHxoS31vBqfNtE5wwXDvrDS2N74XRKtEg+dYEDh1tknpQ
tBBqUqgXRYPj2xE4cLQ5NEq+PYGTR7s8LnctIzkOfOP/AVoHOEU=
          "]], Polygon3DBox[CompressedData["
1:eJwt1wnYllMex/Gnnvd531dlSpsJM2k1lMootAxDWoy20YxJG0rRUCktmqRU
WrRq3/eYTDtFtIxJMVrM1ZDKxKAiXJp0MSVlPv85XVe/3vP73r9zzv3cz7n/
5zyVuvS+q1fRTCazg3L0T/+1zGYyi8G6fEW+aUEm0wF7DfsdVgebm5/JjCqS
yZzErs3LZLrys2gkdgSrgXXmt9Mw7SfppL5l+P/oP9B4P8GewB7i91ELbJG+
12M/51fLPmS817Husqv4XfitclOxqnKX8G3c3wDsIDZMfqpcM6wTthXrIHeT
XCusN7YPGyx3SK4ofrHrb+O7aJDMk/SZ9ufU3bXbZPZQM362vldj5fkvqW88
K/dWHD9hvDn0tLGP8jXx+/g35RrJPYNdrm8J/lfmaIxNx2bQcf4LvA82R798
7Ct9e2BD4nNipWmiXEO6Ue4pmeH0WUF6hvEsS8qUognY29iv5abIVHGtFH8f
9dQuIlOUnpHbiTWUGyN3mWvF+Xx8o+snsKVYAT+KzsktwC+KtSB3np7BPuPn
yT0Vc9ID2l3w72mEfsPptPY0fc96Pq1l3orngI3X9wr5i/kichX5dXKraQ7/
FJ2Ue59v5lorud10W4zHV9O3NH+MemEX56XPGJ+1qr7/5h+jjeatxnf0XJtq
f6rvtsjzJ2T7ae/FHtf3AX4jXlv7ZryP/tP1HYsvw7by22g+9jX2mMwefQe6
1pV/VN8O5qgvs8+1ynwvao/dhL2HVefHUGVsIbaIZhtvNFYJmxWeZmG3UFN9
lpvjBnOUNcdh6oE9LFNDvrl+r2PXY89hZeTy+Bm0Xns79gYtiO8Wu0ruS96/
zJmYP9aMv7uoNVZDZg7t1F4oWwefInM/1h/7OtYHLcf+jL2H/UWuLjYVm4C9
gk3DamHPYmUK0ti7+X9Q2YI0T7C75b7ClmF9sXFYFb4qTcYaUM1sWvOx9lfw
C2mH6zvpHfmlUcQ8h5ly38qsZCfHmox5sTXYavorfzvdg23iX6Ht/KeyD2M7
+R76duBr4J35BfRCrN9YF9hx7ZZ56f2sxffE7/E93Bj3Yowr+U/0/6N2kULX
tNvT1bJHZT6lcsY8LbcBry73MvmXOe3a3bH2mX/JHKY8Y7TFhmTT2o013EHf
o/FOY29hj+h7L99Erj32KtYWq42doWHYB9hErD//XdSNeLew0VgvvrG+d2Hr
Yw6sMnYtdl/UGve1luby3+KD5fbjo+R68jfjTbBlWL2o91GvsTbYWux27Mp4
d7HfYuuwJlilXKprN2VTPYy6+CI/JpfqzyZzvkrzClLtvF1uqcwSeo1vRPWx
mXx1+UL9Ho/ahr1JH2Hrse1Uj39CrlwsFX4vNY+6i12DXcp30Xculk9bsClR
O7HZfF58R3Qk3gWao52jzXLPynXGpseXmE3rP96D2Btij1jiM5Sg8TIfR33y
HTZ17Q/a7agrPk+/gti79J2KPRLvF182agy2GOuGLeJLZNP7Ge/pA9h8vpC2
xXuH3YvNiPUX6xybGOsbe54vQ7uxRbEm3cOBbKpXUbf68G3xPPc8M9a8ayP1
axbnAfqNdveY299b89Mai7V2BrstP+0NsUfM1/cH7Gm5O+I50x3a3bAdUZv5
KuZros/vte+mS2O9xFlE33fpp/wSOqD9jX4V5EfEHk9XaY/BR9OMgvQM41m2
KEjv3a6oz/npXmLfOo+Nxs5eWFexv53C62F3xueiO7UfjHUTY9Bz2qVjrKiD
rj+ELeVL0t+x+VhtcxzmGxqrk3t6LL5TuRFRY2NuuQHxPLGr+A1yL1GWP5VL
72O8l+WipsT9Rq3jt/CbqTDeDfy48W7hu5jj8Tgf4MsurMdYlxXUiGP4Oden
xzmCxskcyU/77gf8IVoa9YHG63PcPF9QYWFa47Ow7/j/UsnCNMdy7BIqRUej
bsZeqH0q6rB7H+ozXGeOj7BGcfYzVz/+wfju4qwX9Ulunlx3bHHsu/GMsblY
J2xynBeMtwZ7GuuITcLORM3GRkYdMuYHWANzdDRH39hn5SZip+VWyY2QO51L
55E4l1SPWirXTm5k7DHYQtcG5lKNHZ5Nnz+ew4d886j38Q7xHeVuzKVnNSGb
nkk8m09i38EbYKP4CnLF+IP56WzZOs5gdIC/S3aQ3Idyk+TaYK/J1or3AiuG
/Rj1LT5fnJewi7Dz8d3H2oo1ixXPpEP6o8ZbjV0edRt6AXvdmEPkB9MXEYt3
MM6y2XQej3P5TGw5tdQ+h3WOvZb/MfZauc/jfdV3OF8ePxXPSGY47eC34HXk
xsqViDMkvzW+d2xc0XSOjvP036gu9iesbNwLv4muwYZgbivzgzEHxjkEqxLP
Blsn8wbdwD8pVz7OnXw1cxe653nY5qiN/AB9N8S5ig7LrZVriT3CvyM3COuM
vUy/wAYVTb9vvo+zoNx6rCIdwlbFOSVqID+46P+PD5mzcv3kXox9PPZMbLVM
H2wNfwUdiPNOnIWwl/hKsVdja2Id5FINOe9ai7g32h81OvYTc7SXa8IfyKU6
eq7gQu2h3tqrsMtib5VbkUtnnxr80PiNQ8eihuNjPZf743cGTcN60cqoA9l0
HotzWU9sBV+O9mJLsL7YWv5ndBBbGedBH3x/Np1P45zaO9ZuLp0tx0cdoZn6
vZqfztL9+Io0Kc5W1D+eiXsbY7zuF85crbJpj469+iv+TX1H6HNdnDGN8VbU
fXxoNv1mit9Os7H3oo5jq7DGcb7ifxnvq3ZH/ONYX/o9EWe2WOPZdC0yQ+J8
xR+jbtituXTWa5dNZ784A37Dv4u3xZ7n68tV5YvFOo91EXure6nJL43fidp7
sPbuewn/fi7tYT8UpP0w9sUGVN9Ye2X20OKCNHfcQ1fZT2J9Yf8DPv/z5A==

          "]], 
         Polygon3DBox[{{1873, 888, 733, 732, 1049, 1614}, {1599, 1013, 696, 
          697, 1014, 1600}, {1357, 1356, 1919, 1005, 1006, 1920}, {1366, 1365,
           1928, 1023, 1024, 1929}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rlLnEEYwOHZrJp4xXSJGs8IYmFKSaGloGglBoOKhYigiEkjiUiIEGRz
oGVi4Vloo4WFW1mIRMRO8Dbx/CsEQfAZCOy7z2+a2fm+2Yre923DiRDCpFkQ
sWd83fM2I4Rn3LJOZoZQpnf0U/1aF7GBNWzlG3axic1mUPdwlP38xg/8zc9c
5nZWCHv2TMe99b7e1kP6rV4xB9ZzbDfPkyEcWr/gEQt5HM/CExbzlC95xhKW
mr+6jP9YznNW8IKVvOQrXrGK16zz/O/85qq5sZ5nh1l39n3rTb2s/+gNPa3X
9Q8ucYy/OMwU+/iJ3fE9mQHdyM74W2xhNevj3p5/1561Oq3XdGl8Hp3Qi6bA
ejZemJl65F7iPTKfP5nH78xlijmcYDa/8gnH+cU8jnfCrHhuOkYYpVcQPtIr
CSP0CbsWd///Lw+crEEz
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1271, 1696, 1697, 1563, 1694, 805, 1562, 1537, 1726, 2143, 
       1461, 1272, 1840, 1841, 2165, 1462, 1273, 1958, 1463, 1274, 1959, 1464,
        1275, 1960, 1465, 1276, 1961, 1850, 2022, 1277, 1962, 1466, 1278, 
       1963, 1467, 1279, 1964, 1468, 1280, 1965, 1469, 1281, 1966, 1470, 1282,
        1913, 1967, 1739, 1471, 1564, 2098, 1698, 1699, 1566, 1695, 1472, 
       1565}], Line3DBox[{1283, 450, 1567, 430, 2140, 1715, 1538, 1716, 529, 
       1778, 1777, 1832, 2163, 1473, 1284, 1968, 1474, 1285, 1969, 1475, 1286,
        1970, 1476, 1287, 1971, 1851, 2023, 1288, 1852, 2024, 1289, 1972, 
       1477, 1290, 1973, 1478, 1291, 1974, 1479, 1292, 1975, 1480, 1293, 2099,
        1568, 1645, 1481, 1569, 2100, 404, 1571, 433, 1717}], 
      Line3DBox[{1294, 1539, 1572, 1719, 2091, 1941, 1718, 1540, 1720, 1781, 
       2092, 1782, 1780, 1779, 1834, 831, 1295, 1976, 1482, 1296, 1977, 1483, 
       1297, 1978, 1484, 1298, 1979, 1853, 2025, 1299, 1854, 2026, 1300, 1855,
        2027, 1301, 1980, 1485, 1302, 1981, 1486, 1303, 2102, 1574, 1646, 
       1487, 1304, 2101, 1570, 1648, 1488, 1728, 2144, 1729, 1541, 1579, 1489,
        1727}], 
      Line3DBox[{1306, 1542, 1573, 1543, 2141, 1305, 1730, 1544, 1721, 1545, 
       2161, 1827, 1307, 1836, 1786, 1835, 1787, 2153, 1308, 843, 1309, 1982, 
       1490, 1310, 1983, 1491, 1311, 1984, 1856, 2028, 1312, 1857, 2029, 1313,
        1858, 2030, 1314, 1859, 2031, 1315, 1985, 1492, 1316, 2103, 1575, 
       1647, 1576, 1317, 2104, 1577, 1649, 1578, 1318, 2093, 1546, 1580, 1547,
        1319}], 
      Line3DBox[{1321, 1783, 1785, 1784, 1833, 2164, 1320, 1788, 1790, 1789, 
       2166, 1843, 1322, 1848, 1842, 1847, 2032, 1956, 1323, 1952, 2033, 1808,
        1324, 1233, 1813, 1325, 1986, 1493, 1326, 1987, 1860, 2034, 1327, 
       1861, 2035, 1328, 1862, 2036, 1329, 1587, 2037, 1914, 1330, 1916, 2038,
        1589, 1331, 2105, 1581, 1650, 1582, 1332, 2106, 1583, 1651, 1584, 
       1333, 2107, 1585, 1652, 1586, 1334}], 
      Line3DBox[{1336, 1863, 2039, 1335, 1864, 2040, 1337, 1810, 2041, 1953, 
       1338, 1811, 1812, 2157, 1809, 1594, 1339, 1815, 1816, 2158, 1814, 1596,
        1340, 1011, 1598, 1341, 2109, 1599, 1600, 2129, 1342, 1601, 1602, 
       2130, 1343, 1603, 2042, 1923, 1344, 1588, 1653, 2043, 1915, 1345, 1917,
        2124, 1654, 1590, 1346, 1918, 2125, 1655, 1591, 1347, 2108, 1592, 
       1656, 1593, 1348, 1988, 1494, 1349}], Line3DBox[CompressedData["
1:eJwVzcsuQ1EUBuAlovUKQqr1MkhjQjQiHYmBkXoEcSl9AWHK1IR3UJeGVEjU
vTepSyoewXcGX/5/r7X3Obml0uzqQETMMT0UcZaOeJCTVPWGzHOuP8oZ1vUL
NlIRT86j+hil4YhDuWn+QY9n+648Ml+zH5cZtsyO+eQl+Z/cM192p6XfsM0J
X6wMRozY1/U2t5Q55TvZe/fqO1P6HR3u2WHfu3n7vv7mzo/Mmk2QY9f5QBbc
+dPf3flN3ppdUtGbZgUqzle09AVqelsucq13ZZF/yAc3AQ==
       "]], 
      Line3DBox[{1371, 1507, 1996, 1369, 2049, 1868, 1367, 1606, 1665, 2132, 
       1928, 1365, 1605, 1664, 2131, 1926, 1364, 1925, 2048, 1663, 1604, 1363,
        1924, 2047, 1662, 1750, 1749, 1362, 1943, 2149, 1746, 1661, 1712, 
       1711, 1361, 2151, 1709, 1710, 1660, 1743, 1161, 1360, 1740, 1741, 1659,
        2128, 1922, 1359, 1597, 1658, 2127, 1921, 1358, 1595, 1657, 2126, 
       1919, 1356, 2046, 1867, 1354, 2045, 1866, 1350, 2044, 1865, 1352}], 
      Line3DBox[{1374, 1869, 2050, 1373, 1998, 1509, 1375, 1610, 1674, 2135, 
       1510, 1376, 1930, 1999, 1675, 1511, 1821, 1838, 1839, 2000, 1676, 1512,
        1766, 1931, 2001, 1677, 1751, 1513, 1612, 2110, 1752, 1753, 1678, 
       1754, 1870, 2150, 1818, 1755, 1756, 1679, 1757, 880, 1615, 1758, 1759, 
       1680, 2136, 1514, 1772, 1609, 1681, 2137, 1515, 1775, 1932, 2002, 1682,
        1516, 1377, 1957, 2003, 1844, 1517, 1378, 2004, 1518, 1379, 2005, 
       1519, 1380}], 
      Line3DBox[{1382, 1871, 2051, 1381, 1619, 1683, 1872, 2114, 1383, 1611, 
       1684, 2138, 1520, 1384, 1933, 2006, 1685, 1521, 1385, 1934, 2007, 1686,
        1522, 1386, 2111, 1613, 1523, 1623, 2118, 1614, 1873, 2112, 1624, 
       1616, 1874, 2113, 1625, 1617, 890, 1387, 1618, 1792, 2162, 1828, 1829, 
       1722, 1935, 2008, 1794, 1830, 1831, 1793, 1946, 2009, 1849, 1524, 1388,
        2010, 1525, 1389, 2011, 1526, 1390}], 
      Line3DBox[{1392, 1626, 1627, 1875, 2119, 1391, 1620, 1687, 1876, 2115, 
       1393, 1621, 1689, 1877, 2116, 1394, 1936, 2012, 1527, 1395, 2117, 1622,
        1528, 1396, 2013, 1529, 1397, 2014, 1878, 2052, 1398, 1879, 2053, 
       1399, 1880, 2054, 1400, 1791, 901, 1837, 1947, 2015, 1530, 1846, 2167, 
       1845, 1531, 1401, 2154, 1795, 1796, 1532, 1402, 2156, 1800, 1801, 1533,
        1403}], 
      Line3DBox[{1405, 1548, 1628, 1549, 2094, 1404, 1629, 1688, 1630, 2120, 
       1406, 1631, 1690, 1632, 2121, 1407, 1881, 2055, 1408, 2016, 1534, 1409,
        2017, 1535, 1410, 2018, 1882, 2056, 1411, 1883, 2057, 1412, 1884, 
       2058, 1413, 1885, 2059, 1414, 913, 1415, 2155, 1798, 1799, 1416, 1948, 
       2095, 1550, 1797, 1551, 1417, 1949, 2096, 1552, 1802, 1553, 1418}], 
      Line3DBox[{1432, 1559, 1637, 1558, 1733, 2146, 1431, 1557, 1723, 1556, 
       2097, 1950, 1430, 1803, 1216, 1429, 2067, 1892, 1428, 2066, 1891, 1427,
        2065, 1890, 1426, 2064, 1889, 1425, 2063, 1888, 2020, 1424, 1536, 
       2019, 1423, 2062, 1887, 1422, 2061, 1886, 1421, 1937, 2060, 1692, 1636,
        1420, 2122, 1635, 1691, 1634, 1419, 2145, 1731, 1555, 1633, 1554, 
       1732}], Line3DBox[{1446, 1737, 1738, 1640, 1736, 1735, 2147, 1445, 
       1560, 1724, 1807, 1224, 1444, 1806, 2078, 1951, 1443, 2077, 1901, 1442,
        2076, 1900, 1441, 2075, 1899, 1440, 2074, 1898, 1439, 2073, 1897, 
       2021, 1438, 2072, 1896, 1437, 2071, 1895, 1436, 2070, 1894, 1435, 2069,
        1893, 1434, 1938, 2068, 1693, 1639, 1433, 2123, 1700, 1701, 1638, 
       1805, 1804, 1734}], 
      Line3DBox[{1460, 1706, 1707, 1642, 1705, 1122, 1459, 1561, 1725, 2142, 
       1912, 1458, 2090, 1911, 1457, 2089, 1910, 1456, 2088, 1909, 1455, 2087,
        1908, 1454, 2086, 1907, 1453, 2085, 2084, 1906, 1452, 2083, 1905, 
       1451, 2082, 1904, 1450, 2081, 1903, 1449, 2080, 1902, 1448, 1939, 2079,
        1760, 1643, 1447, 1940, 2139, 1704, 1641, 1703, 1702, 1644}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{629, 951, 806, 2143, 630, 593, 1191, 529, 656, 594, 1193, 
       2092, 532, 669, 596, 2161, 1195, 597, 681, 617, 2166, 1261, 853, 693, 
       2040, 862, 703, 2045, 870, 1990, 712, 877, 1998, 720, 1056, 2114, 886, 
       729, 1057, 2115, 894, 740, 1067, 2120, 903, 753, 1069, 2122, 915, 766, 
       2068, 1072, 927, 779, 2079, 1076, 939, 792}], 
      Line3DBox[{631, 1259, 807, 2165, 632, 1190, 819, 2163, 657, 1192, 831, 
       670, 1194, 2153, 842, 682, 2032, 1260, 854, 694, 2041, 1229, 1230, 863,
        704, 2046, 871, 1991, 713, 1037, 878, 2135, 721, 1038, 887, 2138, 730,
        1058, 2116, 895, 741, 1068, 2121, 904, 754, 2060, 1070, 916, 767, 
       2069, 928, 780, 2080, 940, 793}], 
      Line3DBox[{633, 808, 1958, 634, 820, 1968, 658, 832, 1976, 671, 843, 
       683, 2033, 1226, 1227, 1228, 1232, 2157, 1003, 1231, 1004, 1088, 2126, 
       1005, 1006, 1992, 1097, 1025, 1026, 1999, 1100, 1039, 1040, 2006, 1105,
        1059, 1060, 2012, 742, 2055, 905, 755, 2061, 917, 768, 2070, 929, 781,
        2081, 941, 794}], 
      Line3DBox[{635, 809, 1959, 636, 821, 1969, 659, 833, 1977, 672, 844, 
       1982, 684, 1233, 1234, 1235, 1236, 2158, 1007, 1158, 1008, 1089, 2127, 
       1009, 1239, 1010, 1240, 2159, 1098, 1241, 1250, 1027, 1258, 1028, 2000,
        1257, 1101, 1041, 1042, 2007, 1106, 1061, 2117, 1062, 743, 906, 2016, 
       756, 2062, 918, 769, 2071, 930, 782, 2082, 942, 795}], 
      Line3DBox[{637, 810, 1960, 638, 822, 1970, 660, 834, 1978, 673, 845, 
       1983, 685, 855, 1986, 695, 1011, 1012, 1091, 2128, 1016, 1172, 1243, 
       1242, 2160, 1246, 1244, 1245, 1173, 1030, 2001, 1102, 1044, 2111, 1045,
        731, 896, 2013, 744, 907, 2017, 757, 919, 2019, 770, 2072, 931, 783, 
       2083, 943, 796}], 
      Line3DBox[{639, 811, 1961, 641, 823, 1971, 661, 835, 1979, 674, 846, 
       1984, 686, 856, 1987, 696, 1013, 2109, 1090, 1015, 1093, 1161, 1162, 
       1029, 1160, 1159, 2148, 1171, 1167, 1168, 1043, 1166, 2110, 1165, 1103,
        1047, 1063, 2118, 1049, 732, 897, 2014, 745, 908, 2018, 758, 920, 
       2020, 771, 932, 2021, 784, 2084, 944, 797}], 
      Line3DBox[{643, 813, 1962, 644, 2024, 825, 663, 2026, 837, 676, 2029, 
       848, 688, 2035, 858, 698, 1017, 2130, 1094, 865, 706, 2149, 1163, 1164,
        1032, 1131, 873, 2152, 715, 1132, 1133, 1050, 1170, 880, 723, 1051, 
       1065, 2113, 889, 734, 2053, 899, 747, 2057, 910, 760, 2064, 922, 773, 
       2074, 934, 786, 2086, 946, 799}], 
      Line3DBox[{645, 814, 1963, 646, 826, 1972, 664, 2027, 838, 677, 2030, 
       849, 689, 2036, 859, 699, 2042, 1018, 866, 707, 2047, 1019, 1175, 1176,
        1177, 2133, 1180, 1179, 1033, 1178, 881, 2136, 724, 1052, 890, 735, 
       2054, 900, 748, 2058, 911, 761, 2065, 923, 774, 2075, 935, 787, 2087, 
       947, 800}], 
      Line3DBox[{647, 815, 1964, 648, 827, 1973, 665, 839, 1980, 678, 2031, 
       850, 690, 2037, 993, 860, 700, 2043, 994, 867, 708, 2048, 1020, 1181, 
       1183, 1184, 2134, 1188, 1187, 1034, 1185, 882, 2137, 725, 1053, 1139, 
       1248, 2162, 1249, 736, 1256, 1196, 1254, 901, 749, 2059, 912, 762, 
       2066, 924, 775, 2076, 936, 788, 2088, 948, 801}], 
      Line3DBox[{649, 816, 1965, 650, 828, 1974, 666, 840, 1981, 679, 851, 
       1985, 691, 2038, 995, 996, 1085, 2124, 997, 998, 1095, 2131, 1021, 
       1182, 1022, 1993, 1099, 1035, 1186, 1036, 2002, 1104, 1054, 1140, 1055,
        2008, 1202, 1199, 1255, 1200, 2015, 750, 913, 763, 2067, 925, 776, 
       2077, 937, 789, 2089, 949, 802}], 
      Line3DBox[{651, 817, 1966, 652, 829, 1975, 667, 980, 2102, 981, 1080, 
       982, 2103, 983, 1082, 987, 2105, 988, 1086, 2125, 999, 1000, 1096, 
       2132, 1023, 1024, 1994, 716, 1262, 1263, 2003, 1264, 1265, 1197, 1201, 
       1198, 2009, 1269, 1270, 1266, 1268, 2167, 1267, 751, 1206, 2155, 1207, 
       764, 1216, 1217, 777, 2078, 1221, 1222, 790, 2090, 950, 803}], 
      Line3DBox[{653, 970, 971, 1967, 1157, 974, 2099, 975, 1079, 977, 2101, 
       978, 1081, 984, 2104, 985, 1083, 989, 2106, 990, 1087, 1001, 2108, 
       1002, 709, 2049, 874, 1995, 717, 883, 2004, 726, 891, 2010, 737, 1203, 
       2154, 1204, 1205, 1209, 1210, 2095, 1208, 960, 1142, 1219, 1220, 2097, 
       1218, 962, 1144, 1224, 1225, 1223, 964, 1146, 2142, 966, 967, 804}], 
      Line3DBox[{654, 1112, 1113, 972, 1115, 2098, 1114, 973, 953, 976, 1117, 
       2100, 1116, 979, 955, 1147, 1149, 2144, 1148, 986, 957, 2093, 958, 
       1084, 991, 2107, 992, 701, 868, 1988, 710, 875, 1996, 1997, 718, 884, 
       2005, 727, 892, 2011, 738, 1211, 2156, 1212, 1213, 1214, 1215, 2096, 
       1141, 961, 1071, 1153, 2146, 1154, 1143, 963, 1073, 1155, 2147, 1156, 
       1145, 965, 1075, 1122, 1123, 1077, 1125, 1124, 1078}], 
      Line3DBox[{791, 938, 1109, 1107, 1121, 1120, 2139, 778, 926, 1074, 1119,
        2123, 1118, 765, 914, 1150, 1152, 2145, 1151, 752, 902, 2094, 959, 
       739, 893, 2119, 1066, 728, 885, 2051, 719, 876, 2050, 711, 1989, 869, 
       2044, 702, 861, 2039, 692, 852, 1251, 1253, 2164, 1252, 680, 841, 1247,
        1138, 2141, 956, 668, 830, 1137, 2091, 1136, 954, 655, 818, 2140, 
       1135, 1134, 952, 628, 805, 1108, 969, 1111, 1110, 968}], 
      Line3DBox[{798, 945, 2085, 785, 933, 2073, 772, 921, 2063, 759, 909, 
       2056, 746, 898, 2052, 733, 888, 2112, 1064, 1048, 722, 879, 2150, 1238,
        1169, 1046, 1130, 1189, 1129, 714, 872, 1237, 1128, 1031, 1127, 1174, 
       2151, 1126, 705, 864, 1092, 2129, 1014, 697, 857, 2034, 687, 847, 2028,
        675, 836, 2025, 662, 824, 2023, 642, 812, 2022, 640}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
LS5C/PGZfQaIX3nyo/d4v6a6rXlH/RBexta/Rj/kV1GJ5C3sJyHCJ91+hlSC
b03KtTBtWpceuuHkyNdL4nY8nvvTrAk2p3kyDzemQ5+1iQLeL6dZQeuo/4No
GteANfV/6S1Tn+P98vF58ZTeF4gu72PN/+d+if2v7+kelAok4v3ambjrCcof
mzzERPk1WxfuwPtVdspjNerP/tXdj/pLHErz8H4dtDDvofcL8q8Ed0vQ+8XI
LT5A4wNYzZxzlcYHcK9cfhnjQ6b2gnC8d9W5Q4FoL++sVm+0N3SXiQTGYe9m
3gM0DkMT74/LGIcfJRk9wzh8v+X7QRqHQaB+oAnj8JMNizdhHC6QmVZL4zDs
fCqog3GYUT3kiXH4tbrVOxrHYE3De2+MY+cOLV+HcZg/Y+MAjXuQme0sh3GP
W5+/04HG4caT1gE0ToJsrK4nxkmX9EVPMA776xyyp3EVtr0ZtZuIwxH/6/s4
g/1+hRiHWzJvYtyGnRmp9ig/fOHNONUPnF97/VD/iEbGA9S/P8JSFePwGJ8A
E/HIZIjLIh7Ji9t8MQ5Lrat9g/gHuHWfIn5P+/4w+Z0dIHo83ynPtQMcea9e
2Hg+DVzPyldifucb97Sn+R26G+9vx/yuvvZSIeZ3p5OiXOHyHZAYsbIb87vM
tONvMb8XF234RfM7WFcvmoT5fSXjyB3M74s2JaTR/AiOdz7cxfwYO5ifiPnd
2knqCc2nIG3qa4H59PyJdl/M73vqX66g+Rc2hl44hPn3CZftdczvjXVpmK8h
S4p/0z/53V7qf33vFvN53zPM70mfTdny882j2fJN3S5hmN9lTg1g/QC1j2XZ
+r9d2J+L+d1S7y7WGzDNdQEbj3VWoQfmd9daIIh/QJ/HCfHfdF7JCk5tghl2
xVwrRnrAWjnw17VHBLjeqE/GevJ16OIFtJ4EhtVlV6wnWwON87GeLLCbKUXr
SbjhFHUb68mLSmcYtL4iHVeO8dL6Ctatbf8eTOuruQPH+rGeLK9f/4fWY6Dl
670D67HEozMdsZ48ken7ntZvYLxNcxHWb3U5m/7spPWkXnQI1pNQw3vLGOs9
N4Eudj35S/A51oeQbqt46J960v7y//p+bYnwRmWsJ6/McmXL5+olseUrxXfO
xXpS++Yptn5v1X/0/z4Z5on1pHY/HxtPv1bQQsTjeOv5GMUPyz6oYT0MjO2B
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
XhWr11tt4DQN7Vhtsog4tWPk6rdtP9GOfZKadFg8pBPySh0PPxWuIk9+OPR3
7UyB2fuELNG+6f50H0ftG/EJPnoe7VsKiQu3W80Dm2NFsQGWGeSgf27nB5Fk
WJjUN2j3DEOP2VO7R5pr9v9j90B1REppBRj/+hFP7TApDOySRjs8fsYZ+R25
9RDad2ci9RckQ23zffQXD6e6TUc7HD1sZDG1w+R6lFU22uFDc0x3/Shpg4lD
k2LVlRvIqlWSs1vC0iHYwvwM+hGT4MZz1I8Qv1iJW+hHVrI6uzpWZ7ee1dld
0XI9e28iDy5JGdbo+eSQvPMtyg/mJkPn1ycH0K/1mOSMon6NPJCZuQH92vfv
09XRv58NEBxG/TsZt99oIvp3uat7Jan8xL21YjLK7yqf/wjl7/o98h76fb0O
mYXU7xOhr0PK0e+PqQkWeEL9YOGvg+HUDxLRK1fWoR98t0nIQFgnm/Sfnao0
L4NLJkSPM9q5LwdG9VqEWJFIstNuzkbppTyibrqjqscrB8bJzN64g0TCIxvf
9UiX2NFQgXSFhqCLlA+MLtSbhnx6p71Yi3xOC7hL09+FofIlL/B3Hx7TXYO/
u37e2cdUThhX+F4F5Qx78fgtyrlLVk0GcYXoKk77idh35Ln1xK2IK1y9zDQQ
V0iPbrlIcQXZsDLLAHGFDMOBQzmcVYj3TBkOzGI4UIjjpor0/h//4ED7LXJn
8He/FLtaIi5KXGzxGn938ir/BZQ/OTPg0IW4hV/kijHyN23nO07nl4Q5a8Yh
ThhdHTE4v0nTzhji+TwISYV+TmoD2VfDruF5+9/1U2KsfmpqjJUy6tnS034W
1Q/YVWjIoH6C7ti44Ll9UeGVB8hnlZPreeSjE8g/C/XcHvFyE9UzbNxpEYR6
Lv+sMEDxDMwqTYhCPFOU5jQF9akvXi2C61nK55Qy4h+b0X0ncD0E2yu70/VG
zlvdn6TvkwMD9fpzcL0l7DPbRPcX+e7Jr474IX6Ptgfur/dOmybSfUpe6j+d
iXjj4Pcl33Cf/l1/9IbVH+0NTT6E901vbRovOy3iwoWb0sZ4f9QydPxjvG8q
u8OrCTXnQevg3znw0s3vLN43uced9sDxmdFfDXH8RJn1uH/J8yvJfohbYrqW
FOP+rRk24/luFx7Z++XIrbZtyTDpVr1rWQCBD8zPvmJ+9hnzsybsPWjXv96D
Xs3onoz+ntGnsXeiP7J3ok+zd6L/fj/6FKNvltudM2i3XaaXUXsIjlqJXmgP
Zyziv4J4pnx5zHX0m+eldJ3Qb3ILJxtRv0AczY/XU78AprwRQugX/LPm/V5T
UkvIeIskGvdB0ZDhXIz7ds3NzkV7KxJq9xb5nyvrPIf8zQPct6KfWq7P50n9
CHh96TNBPyJ+IqwbcdfSD5m96GeT6iYMoJ99ELhrO/od3Y5P7jj++amFq3H8
o4c2DuhP/VZJ8qgfBLFL5Az6wcx8ncPoH21uHO1AumlGxCmk37aTP4h4b45K
nCH66ydjpIvRX19geS8vDaNf4PmJF8t7MTK+R1Q06mCYg7XL7BkdZPLk/pf3
eakgoWoyU/VrDXxTrUg1GdJJ1KKP5by8mQQJzE+N/8tP/Vq6NHXJ1mYoyV4w
ZPOuZuJa2yD2OD4VEpifmvKXn+pbeam/MqcV9v186HL6dSPJVuisj/9CcdqA
326nGV2geeew0ZTKcuIwYD2Ra0D9SPuqF3RdQfnEIme6roiQgcdBXFfrPM+U
Sa5tBFm7YcOOVreS2elbPmuMyoJPbfvEZka2As+jZuH2x40ErEIT4yZkgLe8
4/6AI53gVS4hMjG8iohPuKDP15YKeYeP9GdE0v1g6iZ6ve8t2XPn4l3/iGTw
Ur4j8Nq6i6Rc67m8bE0ZMejZ07i3NQv8rB7YG51tJ7KLeU7cJXVE4GhV4Za5
b0BjdulticsfyXKnJ2Y33JvJ7NZxvvXOxTDBhX9R6eFCwt+tFDwmoJOIVc1V
tNv1Hvy1Fx2hdBhzJTEQ6bnTZ05Buoy2exjlA1oD9SuQj0fH67PIpyFq1kH6
u+Di2XYIf3eZQmE6/u7kGRVCVE6YcCTYDeV0mKVainL6mM0JsHzLBX3ekARp
73xibOxlu9b1f3VVfJzkW//XO858HO0h/9c7zgIcbX58x1nzr3echTh1efhe
80j2jrMXe8dZiMOJ/b/ecRbguHHxHWcue8d5LnvHmZ+j/cOf/q7uX+8403j/
0n/fcV7/TfkW/S4Sub9TVcY7H1ZsrbfH71JTNvjyis7Xzqhf1VQP8Ghlz6Ae
MjmXDHG+EjI3hlK9QX7L2yjUW2Ju4lGcL5eRq1ypniH8kcVe1PO85X2COF8h
nsaEzguMLHn8wZbOC69JAucR4qeIxCP9hdvBCqS/rBc/j/OlsM/nIPLR+BW5
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{299.1294812113239, 158.85415758481247`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 2}, {0, 1}, {0., 5.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.5785217946142531`, -2.987714917096389, 0.17840548782906665`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6822768731254525`*^9, 3.682710504229278*^9, 3.6827144698371997`*^9, 
   3.683141466043537*^9, {3.683141820832486*^9, 3.6831418483125353`*^9}, 
   3.6831445271248875`*^9, 3.683180354073925*^9, {3.683180440675268*^9, 
   3.683180448225299*^9}, 3.683180516476859*^9, 3.6832566859950686`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"alphaPlate", " ", "=", " ", "0.05"}], ";", " ", 
  RowBox[{"alphaRod", " ", "=", " ", "0.2"}], ";"}]], "Input",
 CellChangeTimes->{{3.683141943407442*^9, 3.6831419495104637`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"maxT", " ", "=", " ", "15"}], ";", " ", 
   RowBox[{"NN", " ", "=", " ", "100"}], ";", " ", 
   RowBox[{"tau", "=", 
    RowBox[{"maxT", "/", "NN"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "max", " ", "time", " ", "and", " ", "num", " ", "time", " ", "steps", " ",
     "respectively"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6831419816025443`*^9, 3.683142012574606*^9}, {
  3.6831805891391582`*^9, 3.6831805929081726`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6832594500030193`*^9, 3.683259452174038*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u1vals", " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"alphaRod", "*", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"y", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{"initV", "[", 
         RowBox[{"1", ",", "y"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], "}"}], 
    ",", "u", ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tau"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.683180693820776*^9, 3.683180758484045*^9}, {
  3.6831812954342775`*^9, 3.6831812957402782`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.15`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.15`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 1.}, {0., 0.15}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.683180773572118*^9, 3.683181296077282*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v1vals", " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
        "\[Equal]", 
        RowBox[{"alphaPlate", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"u1vals", "[", 
           RowBox[{"y", ",", "tau"}], "]"}]}], "*", "x", "*", 
         RowBox[{"(", 
          RowBox[{"x", "-", "2"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"2", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}],
      "}"}], ",", "v", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tau"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6831809818849564`*^9, 3.68318101775512*^9}, {
   3.683181058606282*^9, 3.683181107917488*^9}, {3.683181205548892*^9, 
   3.683181214408926*^9}, {3.6831813007012978`*^9, 3.683181305050325*^9}, 
   3.6831814190528154`*^9, {3.683181642776716*^9, 3.6831816630667944`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.15`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.15`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "5", ",", "3"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 2.}, {0., 1.}, {0., 0.15}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.683181095416433*^9, 3.68318110850049*^9}, 
   3.683181306030331*^9, 3.6831814196328163`*^9, 3.6831816645208*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u2vals", " ", "=", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"alphaRod", "*", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"y", ",", "tau"}], "]"}], "\[Equal]", 
        RowBox[{"v1vals", "[", 
         RowBox[{"1", ",", "y", ",", "tau"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], "}"}], 
    ",", "u", ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tau", ",", 
      RowBox[{"2", "*", "tau"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6831818013394485`*^9, 3.683181848180697*^9}, {
  3.683181917251978*^9, 3.6831819179389825`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15`", ",", "0.3`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15`", ",", "0.3`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 1.}, {0.15, 0.3}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6831818619377537`*^9, 3.683181918401984*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v2vals", " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
        "\[Equal]", 
        RowBox[{"alphaPlate", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "y", ",", "tau"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"u2vals", "[", 
           RowBox[{"y", ",", 
            RowBox[{"2", "*", "tau"}]}], "]"}]}], "*", "x", "*", 
         RowBox[{"(", 
          RowBox[{"x", "-", "2"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"2", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}],
      "}"}], ",", "v", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tau", ",", 
      RowBox[{"2", "*", "tau"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6831819258620157`*^9, 3.683182014674384*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15`", ",", "0.3`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15`", ",", "0.3`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "5", ",", "3"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 2.}, {0., 1.}, {0.15, 0.3}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6831819962433124`*^9, 3.6831820152133865`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list1", " ", "=", " ", 
  RowBox[{"Range", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.683260337808288*^9, 3.6832603443372984`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.683260344619299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AppendTo", "[", 
  RowBox[{"list1", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.6832603476833043`*^9, 3.6832603527453156`*^9}, {
  3.683260889117637*^9, 3.683260889549638*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "9"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6832603533253164`*^9, 3.683260890019638*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{"list1", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.6832608918726416`*^9, 3.6832609419050665`*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.683260905872712*^9, 3.683260942245067*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list1", "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.683260956465111*^9, 3.683260959039116*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.6832609593291173`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listR", " ", "=", " ", 
  RowBox[{"Range", "[", "15", "]"}]}]], "Input",
 CellChangeTimes->{{3.6832610159523735`*^9, 3.683261022990388*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
   "15"}], "}"}]], "Output",
 CellChangeTimes->{3.68326102406239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listV", " ", "=", " ", 
  RowBox[{"Range", "[", 
   RowBox[{"16", ",", "30"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6832610427414265`*^9, 3.683261056842454*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", "22", ",",
    "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", ",", "29", 
   ",", "30"}], "}"}]], "Output",
 CellChangeTimes->{3.683261057132454*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listF", "=", 
  RowBox[{"{", "0", "}"}]}]], "Input",
 CellChangeTimes->{{3.6832610747314863`*^9, 3.6832610787334943`*^9}}],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.6832610790434947`*^9, 3.6832615097477093`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"rr", " ", "=", " ", 
      RowBox[{"listF", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", " ", 
     RowBox[{"rr", " ", "=", " ", 
      RowBox[{"rr", " ", "+", " ", 
       RowBox[{"listR", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]}], ";", " ", 
     RowBox[{"vv", " ", "=", " ", 
      RowBox[{
       RowBox[{"listV", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "+", "rr"}]}], ";", " ", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"listF", ",", "vv"}], "]"}]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "15"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6832611033505383`*^9, 3.6832611044925404`*^9}, {
  3.683261352699401*^9, 3.683261478590645*^9}, {3.6832615171777215`*^9, 
  3.683261524624735*^9}}],

Cell[CellGroupData[{

Cell[BoxData["listF"], "Input",
 CellChangeTimes->{{3.6832615292777433`*^9, 3.683261530032745*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "17", ",", "36", ",", "57", ",", "80", ",", "105", ",", "132", 
   ",", "161", ",", "192", ",", "225", ",", "260", ",", "297", ",", "336", 
   ",", "377", ",", "420", ",", "465"}], "}"}]], "Output",
 CellChangeTimes->{3.6832615305327463`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initVals", " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "t", "]"}], "\[Equal]", 
        RowBox[{"-", "9.8"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], "}"}]}], "}"}], ",", 
    "y", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.683262123516144*^9, 3.6832621311292205`*^9}, {
  3.6832621707446346`*^9, 3.6832622547585*^9}, {3.6832622940089197`*^9, 
  3.6832622967569556`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{{}, {}, {
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AAF9iAApGvTd0wYnD
3cQ/hIGjE+6qwL/SUFjDa77VP56wlSZiGeK/IqE47Akn4D9452dls/nzv9Wb
k3tZVOU/7EUPcHtqAcC7wbiC/fHqP4C3yMREywvAgEqXStgX8D/iPW+lMNQT
wLtJtw/c7vI/Mipo79FxG8DziT6Xnbj1P1P7N1C5DyLA2iBupGZS+D8yDcoh
OqUmwFrNgu1ZJPs/XOEf4oozLMCJ0D+8VMb9P9X6OfgE+DDAWwqypoYtAECE
0Rcuwgk0wD63Ng34kwFAtSgfOyGoN8B4j482beICQFB3cU3STTvAf/LaffdM
BEC1A5J9e40/wAX2WabgsAVAKmfIP90CQsDiJK2RzfwGQKhptWKSOkTAjN7y
ms9kCEDOVUJSj8dGwI3DDGfVtAlAbY4GSwRMScBbMxlR8CALQDE64OlzLEzA
p0NZHGqGDEDvpBqDDSZPwEt/barn0w1ArroqRYEHUcC8RXRWej0PQFw+Grkj
rlLAwpunYohHEEAuDKS1YkpUwOXkrgoD7RBAHGiSUhTvVcBvc69BiKARQJaR
oif+yVfApRcaWg9IEkDIpK15kZZZwEEBfgGh/RJA6omKDrScW8Acu3sZ4q8T
QGiDmdyPrF3AoorjEiVWFEAVIRW0CapfwI+fRJtyChVAKmCOPp3yYMAoyg8F
wrIVQBT4GM38BWLAAMV038BXFkCRht1CKRxjwD4F00jKChdAvVUJ3jdTZMAo
W5uT1bEXQOzTcooVfmXAePZcbetmGEDRNJawf8tmwHSniCgDEBlAwFpC3K8L
aMCvKE5UyrUZQPUqImHmTWnAUe8MD5xpGkAMnJJrsrRqwJ/LNatvERtA0vYi
FEoMbMBT7VfWTccbQDdfH4Qjim3AR98Tctt5HEDvqbfhpgpvwObmOe9qIB1A
N8gHofc8cMDrM1n7BNUdQL3AjxTHCHHAnJbi6KB9HkBxx97hdMtxwIzJBUfs
Ih9A3z/KVm+OcsDiQSI0QtYfQBbQWdmYZnPA8mdUAc0+IEBGTH84pDR0wKZR
FDB+mSBAieazLbQYdcB6IyEXh/IgQLwTeFpi/XXAJADj7pBFIUBtUaXM79Z2
wIF/IQ6gnyFAFl/keIvHd8C0CRUesPMhQMpyNaGCrHjAmjaFdcVOIkAbwseC
Xql5wJ9LQoUyqCJA/jNNbXSmesB6a7SFoPsiQGjvZxXilnvACC6jzRNWI0B1
V2FKP6B8wGz7RgaIqiNAgk4W22+cfcAyFFD6//8jQJnRle7/n37AZ/zDKA==

                    "]]}}}, {}, {}}, {
               DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, DisplayFunction -> Identity, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{0., 10.}, {-489.9999833919806, 0.}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{{}, {}, {
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AAF9iAApGvTd0wYnD
3cQ/hIGjE+6qwL/SUFjDa77VP56wlSZiGeK/IqE47Akn4D9452dls/nzv9Wb
k3tZVOU/7EUPcHtqAcC7wbiC/fHqP4C3yMREywvAgEqXStgX8D/iPW+lMNQT
wLtJtw/c7vI/Mipo79FxG8DziT6Xnbj1P1P7N1C5DyLA2iBupGZS+D8yDcoh
OqUmwFrNgu1ZJPs/XOEf4oozLMCJ0D+8VMb9P9X6OfgE+DDAWwqypoYtAECE
0Rcuwgk0wD63Ng34kwFAtSgfOyGoN8B4j482beICQFB3cU3STTvAf/LaffdM
BEC1A5J9e40/wAX2WabgsAVAKmfIP90CQsDiJK2RzfwGQKhptWKSOkTAjN7y
ms9kCEDOVUJSj8dGwI3DDGfVtAlAbY4GSwRMScBbMxlR8CALQDE64OlzLEzA
p0NZHGqGDEDvpBqDDSZPwEt/barn0w1ArroqRYEHUcC8RXRWej0PQFw+Grkj
rlLAwpunYohHEEAuDKS1YkpUwOXkrgoD7RBAHGiSUhTvVcBvc69BiKARQJaR
oif+yVfApRcaWg9IEkDIpK15kZZZwEEBfgGh/RJA6omKDrScW8Acu3sZ4q8T
QGiDmdyPrF3AoorjEiVWFEAVIRW0CapfwI+fRJtyChVAKmCOPp3yYMAoyg8F
wrIVQBT4GM38BWLAAMV038BXFkCRht1CKRxjwD4F00jKChdAvVUJ3jdTZMAo
W5uT1bEXQOzTcooVfmXAePZcbetmGEDRNJawf8tmwHSniCgDEBlAwFpC3K8L
aMCvKE5UyrUZQPUqImHmTWnAUe8MD5xpGkAMnJJrsrRqwJ/LNatvERtA0vYi
FEoMbMBT7VfWTccbQDdfH4Qjim3AR98Tctt5HEDvqbfhpgpvwObmOe9qIB1A
N8gHofc8cMDrM1n7BNUdQL3AjxTHCHHAnJbi6KB9HkBxx97hdMtxwIzJBUfs
Ih9A3z/KVm+OcsDiQSI0QtYfQBbQWdmYZnPA8mdUAc0+IEBGTH84pDR0wKZR
FDB+mSBAieazLbQYdcB6IyEXh/IgQLwTeFpi/XXAJADj7pBFIUBtUaXM79Z2
wIF/IQ6gnyFAFl/keIvHd8C0CRUesPMhQMpyNaGCrHjAmjaFdcVOIkAbwseC
Xql5wJ9LQoUyqCJA/jNNbXSmesB6a7SFoPsiQGjvZxXilnvACC6jzRNWI0B1
V2FKP6B8wGz7RgaIqiNAgk4W22+cfcAyFFD6//8jQJnRle7/n37AZ/zDKA==

                    "]]}}}, {}, {}}, {
               DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, DisplayFunction -> Identity, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{0., 10.}, {-489.9999833919806, 0.}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6832622603145695`*^9, 3.6832622980719748`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"initVals", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683262300531002*^9, 3.6832623152531686`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
xMAVC/Krm5tkeKR/2/RmCgP/Bzo5AtU=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-489.99998000215, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6832623157261724`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listVV", " ", "=", " ", 
  RowBox[{"{", "0", "}"}]}]], "Input",
 CellChangeTimes->{{3.683262410403429*^9, 3.6832624138154726`*^9}}],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.683262414718487*^9, 3.6832630759532533`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listVeloc", " ", "=", " ", 
  RowBox[{"{", "0", "}"}]}]], "Input",
 CellChangeTimes->{{3.6832628361300435`*^9, 3.6832628401200542`*^9}}],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.683262840608055*^9, 3.6832630774652586`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"curY", " ", "=", " ", 
      RowBox[{"listVV", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"curVeloc", " ", "=", " ", 
      RowBox[{"listVeloc", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vals", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "''"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"-", "9.8"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "curVeloc"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"y", "[", "0", "]"}], "\[Equal]", "curY"}], "}"}]}], 
         "}"}], ",", "y", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vals2", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"vel", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"-", "9.8"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"vel", "[", "0", "]"}], "\[Equal]", "curVeloc"}], "}"}]}],
          "}"}], ",", "vel", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"listVeloc", ",", 
       RowBox[{"vals2", "[", "1", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"listVV", ",", 
       RowBox[{"vals", "[", "1", "]"}]}], "]"}]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6832624167955074`*^9, 3.6832624315796785`*^9}, {
  3.683262463544078*^9, 3.6832625029385834`*^9}, {3.6832625886276827`*^9, 
  3.683262619961074*^9}, {3.6832628071369333`*^9, 3.683262810579941*^9}, {
  3.6832628438810616`*^9, 3.683262963088378*^9}, {3.6832630073464966`*^9, 
  3.683263007682499*^9}}],

Cell[CellGroupData[{

Cell[BoxData["listVV"], "Input",
 CellChangeTimes->{{3.6832626291621904`*^9, 3.683262629846199*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "4.900000002106483`"}], ",", 
   RowBox[{"-", "19.600000039101477`"}], ",", 
   RowBox[{"-", "44.10000010504874`"}], ",", 
   RowBox[{"-", "78.40000018671334`"}], ",", 
   RowBox[{"-", "122.5000002763808`"}], ",", 
   RowBox[{"-", "176.40000037043131`"}], ",", 
   RowBox[{"-", "240.10000046708393`"}], ",", 
   RowBox[{"-", "313.60000056538985`"}], ",", 
   RowBox[{"-", "396.9000006648052`"}], ",", 
   RowBox[{"-", "490.00000076499873`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6832626302712016`*^9, 3.683263011322509*^9, 
  3.6832630812362676`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "above", " ", "example", " ", "shows", " ", "how", " ", "to", 
     " ", "combine", " ", "lists"}], ",", " ", 
    RowBox[{"for", " ", "loops"}], ",", " ", 
    RowBox[{"and", " ", "PDE", " ", "solving"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "In", " ", "the", " ", "below", " ", "I", " ", "will", " ", "try", " ", 
    "to", " ", "use", " ", "the", " ", "heat", " ", "equation", " ", "on", 
    " ", "a", " ", "simple", " ", "1", "D", " ", "rod"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.683263290194906*^9, 3.683263310802983*^9}, {
  3.6832633569570065`*^9, 3.6832633724442096`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"curT", "[", "y_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "20"}], "*", "y", "*", 
   RowBox[{"(", 
    RowBox[{"y", "-", "1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6832645468124685`*^9, 3.6832645860085583`*^9}}],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tvals", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"u", "[", 
               RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
            RowBox[{"alphaRod", "*", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"y", ",", "t"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"curT", "[", "y", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], 
         "}"}], ",", "u", ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"curT", "[", "y_", "]"}], " ", ":=", " ", 
      RowBox[{"tvals", "[", 
       RowBox[{"y", ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683264496622363*^9, 3.683264508950389*^9}, {
  3.683264594707575*^9, 3.683264670875729*^9}, {3.683264732642556*^9, 
  3.6832647339215727`*^9}, {3.6832648143307943`*^9, 3.6832648227149334`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Here", " ", "I", " ", "need", " ", "to", " ", "take", " ", "the", " ", 
   "above", " ", "and", " ", "see", " ", "if", " ", "I", " ", "can", " ", 
   "make", " ", "a", " ", "list", " ", "of", " ", "tables"}], "*)"}]], "Input",
 CellChangeTimes->{{3.683265287180859*^9, 3.683265287915862*^9}, {
  3.683265339218011*^9, 3.683265354161051*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initTvals", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"curT", "[", 
     RowBox[{"i", "/", "100"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6832653679710836`*^9, 3.683265404528181*^9}, {
  3.6832654592834787`*^9, 3.683265459453479*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["99", "500"], ",", 
   FractionBox["49", "125"], ",", 
   FractionBox["291", "500"], ",", 
   FractionBox["96", "125"], ",", 
   FractionBox["19", "20"], ",", 
   FractionBox["141", "125"], ",", 
   FractionBox["651", "500"], ",", 
   FractionBox["184", "125"], ",", 
   FractionBox["819", "500"], ",", 
   FractionBox["9", "5"], ",", 
   FractionBox["979", "500"], ",", 
   FractionBox["264", "125"], ",", 
   FractionBox["1131", "500"], ",", 
   FractionBox["301", "125"], ",", 
   FractionBox["51", "20"], ",", 
   FractionBox["336", "125"], ",", 
   FractionBox["1411", "500"], ",", 
   FractionBox["369", "125"], ",", 
   FractionBox["1539", "500"], ",", 
   FractionBox["16", "5"], ",", 
   FractionBox["1659", "500"], ",", 
   FractionBox["429", "125"], ",", 
   FractionBox["1771", "500"], ",", 
   FractionBox["456", "125"], ",", 
   FractionBox["15", "4"], ",", 
   FractionBox["481", "125"], ",", 
   FractionBox["1971", "500"], ",", 
   FractionBox["504", "125"], ",", 
   FractionBox["2059", "500"], ",", 
   FractionBox["21", "5"], ",", 
   FractionBox["2139", "500"], ",", 
   FractionBox["544", "125"], ",", 
   FractionBox["2211", "500"], ",", 
   FractionBox["561", "125"], ",", 
   FractionBox["91", "20"], ",", 
   FractionBox["576", "125"], ",", 
   FractionBox["2331", "500"], ",", 
   FractionBox["589", "125"], ",", 
   FractionBox["2379", "500"], ",", 
   FractionBox["24", "5"], ",", 
   FractionBox["2419", "500"], ",", 
   FractionBox["609", "125"], ",", 
   FractionBox["2451", "500"], ",", 
   FractionBox["616", "125"], ",", 
   FractionBox["99", "20"], ",", 
   FractionBox["621", "125"], ",", 
   FractionBox["2491", "500"], ",", 
   FractionBox["624", "125"], ",", 
   FractionBox["2499", "500"], ",", "5", ",", 
   FractionBox["2499", "500"], ",", 
   FractionBox["624", "125"], ",", 
   FractionBox["2491", "500"], ",", 
   FractionBox["621", "125"], ",", 
   FractionBox["99", "20"], ",", 
   FractionBox["616", "125"], ",", 
   FractionBox["2451", "500"], ",", 
   FractionBox["609", "125"], ",", 
   FractionBox["2419", "500"], ",", 
   FractionBox["24", "5"], ",", 
   FractionBox["2379", "500"], ",", 
   FractionBox["589", "125"], ",", 
   FractionBox["2331", "500"], ",", 
   FractionBox["576", "125"], ",", 
   FractionBox["91", "20"], ",", 
   FractionBox["561", "125"], ",", 
   FractionBox["2211", "500"], ",", 
   FractionBox["544", "125"], ",", 
   FractionBox["2139", "500"], ",", 
   FractionBox["21", "5"], ",", 
   FractionBox["2059", "500"], ",", 
   FractionBox["504", "125"], ",", 
   FractionBox["1971", "500"], ",", 
   FractionBox["481", "125"], ",", 
   FractionBox["15", "4"], ",", 
   FractionBox["456", "125"], ",", 
   FractionBox["1771", "500"], ",", 
   FractionBox["429", "125"], ",", 
   FractionBox["1659", "500"], ",", 
   FractionBox["16", "5"], ",", 
   FractionBox["1539", "500"], ",", 
   FractionBox["369", "125"], ",", 
   FractionBox["1411", "500"], ",", 
   FractionBox["336", "125"], ",", 
   FractionBox["51", "20"], ",", 
   FractionBox["301", "125"], ",", 
   FractionBox["1131", "500"], ",", 
   FractionBox["264", "125"], ",", 
   FractionBox["979", "500"], ",", 
   FractionBox["9", "5"], ",", 
   FractionBox["819", "500"], ",", 
   FractionBox["184", "125"], ",", 
   FractionBox["651", "500"], ",", 
   FractionBox["141", "125"], ",", 
   FractionBox["19", "20"], ",", 
   FractionBox["96", "125"], ",", 
   FractionBox["291", "500"], ",", 
   FractionBox["49", "125"], ",", 
   FractionBox["99", "500"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6832654063081846`*^9, 3.6832654624414854`*^9, {3.683265769794345*^9, 
   3.683265777835479*^9}, 3.6832661011011*^9, 3.6833112000228176`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listOfVals", " ", "=", " ", 
  RowBox[{"{", "initTvals", "}"}]}]], "Input",
 CellChangeTimes->{{3.6832655011035995`*^9, 3.6832655115006304`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    FractionBox["99", "500"], ",", 
    FractionBox["49", "125"], ",", 
    FractionBox["291", "500"], ",", 
    FractionBox["96", "125"], ",", 
    FractionBox["19", "20"], ",", 
    FractionBox["141", "125"], ",", 
    FractionBox["651", "500"], ",", 
    FractionBox["184", "125"], ",", 
    FractionBox["819", "500"], ",", 
    FractionBox["9", "5"], ",", 
    FractionBox["979", "500"], ",", 
    FractionBox["264", "125"], ",", 
    FractionBox["1131", "500"], ",", 
    FractionBox["301", "125"], ",", 
    FractionBox["51", "20"], ",", 
    FractionBox["336", "125"], ",", 
    FractionBox["1411", "500"], ",", 
    FractionBox["369", "125"], ",", 
    FractionBox["1539", "500"], ",", 
    FractionBox["16", "5"], ",", 
    FractionBox["1659", "500"], ",", 
    FractionBox["429", "125"], ",", 
    FractionBox["1771", "500"], ",", 
    FractionBox["456", "125"], ",", 
    FractionBox["15", "4"], ",", 
    FractionBox["481", "125"], ",", 
    FractionBox["1971", "500"], ",", 
    FractionBox["504", "125"], ",", 
    FractionBox["2059", "500"], ",", 
    FractionBox["21", "5"], ",", 
    FractionBox["2139", "500"], ",", 
    FractionBox["544", "125"], ",", 
    FractionBox["2211", "500"], ",", 
    FractionBox["561", "125"], ",", 
    FractionBox["91", "20"], ",", 
    FractionBox["576", "125"], ",", 
    FractionBox["2331", "500"], ",", 
    FractionBox["589", "125"], ",", 
    FractionBox["2379", "500"], ",", 
    FractionBox["24", "5"], ",", 
    FractionBox["2419", "500"], ",", 
    FractionBox["609", "125"], ",", 
    FractionBox["2451", "500"], ",", 
    FractionBox["616", "125"], ",", 
    FractionBox["99", "20"], ",", 
    FractionBox["621", "125"], ",", 
    FractionBox["2491", "500"], ",", 
    FractionBox["624", "125"], ",", 
    FractionBox["2499", "500"], ",", "5", ",", 
    FractionBox["2499", "500"], ",", 
    FractionBox["624", "125"], ",", 
    FractionBox["2491", "500"], ",", 
    FractionBox["621", "125"], ",", 
    FractionBox["99", "20"], ",", 
    FractionBox["616", "125"], ",", 
    FractionBox["2451", "500"], ",", 
    FractionBox["609", "125"], ",", 
    FractionBox["2419", "500"], ",", 
    FractionBox["24", "5"], ",", 
    FractionBox["2379", "500"], ",", 
    FractionBox["589", "125"], ",", 
    FractionBox["2331", "500"], ",", 
    FractionBox["576", "125"], ",", 
    FractionBox["91", "20"], ",", 
    FractionBox["561", "125"], ",", 
    FractionBox["2211", "500"], ",", 
    FractionBox["544", "125"], ",", 
    FractionBox["2139", "500"], ",", 
    FractionBox["21", "5"], ",", 
    FractionBox["2059", "500"], ",", 
    FractionBox["504", "125"], ",", 
    FractionBox["1971", "500"], ",", 
    FractionBox["481", "125"], ",", 
    FractionBox["15", "4"], ",", 
    FractionBox["456", "125"], ",", 
    FractionBox["1771", "500"], ",", 
    FractionBox["429", "125"], ",", 
    FractionBox["1659", "500"], ",", 
    FractionBox["16", "5"], ",", 
    FractionBox["1539", "500"], ",", 
    FractionBox["369", "125"], ",", 
    FractionBox["1411", "500"], ",", 
    FractionBox["336", "125"], ",", 
    FractionBox["51", "20"], ",", 
    FractionBox["301", "125"], ",", 
    FractionBox["1131", "500"], ",", 
    FractionBox["264", "125"], ",", 
    FractionBox["979", "500"], ",", 
    FractionBox["9", "5"], ",", 
    FractionBox["819", "500"], ",", 
    FractionBox["184", "125"], ",", 
    FractionBox["651", "500"], ",", 
    FractionBox["141", "125"], ",", 
    FractionBox["19", "20"], ",", 
    FractionBox["96", "125"], ",", 
    FractionBox["291", "500"], ",", 
    FractionBox["49", "125"], ",", 
    FractionBox["99", "500"], ",", "0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.683265511951631*^9, 3.683265781487545*^9, 
  3.6832661035131516`*^9, 3.6833112047338295`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tvals", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"u", "[", 
               RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
            RowBox[{"alphaRod", "*", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"y", ",", "t"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"curT", "[", "y", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], 
         "}"}], ",", "u", ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"curT", "[", "y_", "]"}], " ", ":=", " ", 
      RowBox[{"tvals", "[", 
       RowBox[{"y", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"curTvals", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"curT", "[", 
         RowBox[{"jj", "/", "100"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"jj", ",", "1", ",", "100"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"listOfVals", ",", "curTvals"}], "]"}]}], "\[IndentingNewLine]",
     ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"ii", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683265538693697*^9, 3.6832655662127733`*^9}, {
  3.6832656077738967`*^9, 3.683265649074005*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"listOfVals", "[", 
       RowBox[{"[", "ii", "]"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"5", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "100"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"ii", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683311539286979*^9, 3.683311547298992*^9}, {
   3.6833116128599105`*^9, 3.683311662593997*^9}, {3.683311702803216*^9, 
   3.6833117242042513`*^9}, {3.6833117626738605`*^9, 3.683311772872877*^9}, 
   3.683311841358*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ii$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`ii$$], 1, 10, 1}}, Typeset`size$$ = {
    360., {111., 118.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`ii$10368$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ii$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`ii$$, $CellContext`ii$10368$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[{
         Part[$CellContext`listOfVals, $CellContext`ii$$], 
         Table[5, {$CellContext`i, 100}]}], 
      "Specifications" :> {{$CellContext`ii$$, 1, 10, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {161., 168.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.683311548038993*^9, {3.683311638985953*^9, 3.6833116630239973`*^9}, 
   3.683311724774252*^9, 3.6833117736458783`*^9, 3.683311842828002*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"listOfVals\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,1,28732372139705306363,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6833200331321363`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"listOfVals\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,2,28732372139705306363,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.683320033172138*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uvalsOriginal", " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"alphaRod", "*", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"y", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", "20"}], "*", "y", "*", 
         RowBox[{"(", 
          RowBox[{"y", "-", "1"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], "}"}], 
    ",", "u", ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.683311852483019*^9, 3.6833118844620748`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 1.}, {0., 10.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6833118860790772`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"uvalsOriginal", "[", 
        RowBox[{"y", ",", "t"}], "]"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683311889837084*^9, 3.6833119199661736`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 1.68, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10}}, Typeset`size$$ = {360., {109., 114.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$12519$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$12519$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`uvalsOriginal[$CellContext`y, $CellContext`t$$], 
         5}, {$CellContext`y, 0, 1}], 
      "Specifications" :> {{$CellContext`t$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {158., 165.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6833119090351553`*^9, 3.683311920426174*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Attempting", " ", "the", " ", "above", " ", "but", " ", "with", " ", "2", 
   "D", " ", "function"}], "*)"}]], "Input",
 CellChangeTimes->{{3.683316084882187*^9, 3.6833160917711997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vvalsOriginal", " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
        "\[Equal]", 
        RowBox[{"alphaPlate", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{"20", "*", "x", 
         RowBox[{"(", 
          RowBox[{"x", "-", "2"}], ")"}], "y", 
         RowBox[{"(", 
          RowBox[{"y", "-", "1"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"2", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}],
      "}"}], ",", "v", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.68331598169401*^9, 3.6833160343391047`*^9}, 
   3.6833177638930545`*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "5", ",", "3"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 2.}, {0., 1.}, {0., 10.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.683316042311118*^9, 3.6833177648610697`*^9, 
  3.683320759277994*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"curTv", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"20", "*", "x", 
   RowBox[{"(", 
    RowBox[{"x", "-", "2"}], ")"}], "y", 
   RowBox[{"(", 
    RowBox[{"y", "-", "1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6833166622520885`*^9, 3.6833166677721496`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"initTvVals", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"curTv", "[", 
      RowBox[{
       RowBox[{"i", "/", "100"}], ",", 
       RowBox[{"j", "/", "100"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683316704735627*^9, 3.683316731113902*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"allTvVals", " ", "=", " ", 
   RowBox[{"{", "initTvVals", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683316742628034*^9, 3.6833167477890944`*^9}}],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tvvalues", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
            "\[Equal]", 
            RowBox[{"alphaPlate", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"curTv", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"2", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}]}], "}"}], ",", "v", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"curTv", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
      RowBox[{"tvvalues", "[", 
       RowBox[{"x", ",", "y", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"curTvvalues", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"curTv", "[", 
         RowBox[{
          RowBox[{"ii", "/", "100"}], ",", 
          RowBox[{"jj", "/", "100"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "200"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jj", ",", "1", ",", "100"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"allTvVals", ",", "curTvvalues"}], "]"}]}], 
    "\[IndentingNewLine]", ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"iii", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6833167720643654`*^9, 3.683316810447779*^9}, {
  3.6833168435651417`*^9, 3.683316854095251*^9}, {3.683316940807632*^9, 
  3.683316999703276*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"allTvVals", "[", 
       RowBox[{"[", "jjj", "]"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"5", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "200"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "100"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"jjj", ",", "1", ",", "11", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683317421303147*^9, 3.683317474663486*^9}, {
  3.683317508147681*^9, 3.683317524977767*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`jjj$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`jjj$$], 1, 11, 1}}, Typeset`size$$ = {
    361., {76., 82.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`jjj$2654$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`jjj$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`jjj$$, $CellContext`jjj$2654$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot3D[{
         Part[$CellContext`allTvVals, $CellContext`jjj$$], 
         Table[5, {$CellContext`i, 200}, {$CellContext`j, 100}]}], 
      "Specifications" :> {{$CellContext`jjj$$, 1, 11, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{412., {125., 132.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.683320154760659*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"vvalsOriginal", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6833177710451527`*^9, 3.683317806053692*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10, 1}}, Typeset`size$$ = {317., {60., 65.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$3719$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$3719$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[{
         $CellContext`vvalsOriginal[$CellContext`x, $CellContext`y, \
$CellContext`t$$], 5}, {$CellContext`x, 0, 2}, {$CellContext`y, 0, 1}], 
      "Specifications" :> {{$CellContext`t$$, 0, 10, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{368., {109., 116.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6833178065447006`*^9, 3.683320762739999*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"BELOW", " ", "HERE", " ", "IS", " ", "THE", " ", "CODE"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6833215896002436`*^9, 3.6833215968712597`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"curF", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"20", "*", "x", 
   RowBox[{"(", 
    RowBox[{"x", "-", "2"}], ")"}], "y", 
   RowBox[{"(", 
    RowBox[{"y", "-", "1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.683321791651686*^9, 3.683321792121687*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"curR", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
            "\[Equal]", 
            RowBox[{"alphaPlate", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"curF", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"2", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}]}], "}"}], ",", "v", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tau"}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"nextR", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
      RowBox[{"curR", "[", 
       RowBox[{"x", ",", "y", ",", "tau"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"currentRod", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"u", "[", 
               RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
            RowBox[{"alphaRod", "*", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"y", ",", "t"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"nextR", "[", 
             RowBox[{"1", ",", "y"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], 
         "}"}], ",", "u", ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tau"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"currentVleft", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
            "\[Equal]", 
            RowBox[{"alphaPlate", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"nextR", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"1", ",", "y", ",", "t"}], "]"}], "\[Equal]", 
            RowBox[{"currentRod", "[", 
             RowBox[{"y", ",", "t"}], "]"}]}], "}"}]}], "}"}], ",", "v", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tau"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"currentVright", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
            "\[Equal]", 
            RowBox[{"alphaPlate", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"nextR", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"2", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"1", ",", "y", ",", "t"}], "]"}], "\[Equal]", 
            RowBox[{"currentRod", "[", 
             RowBox[{"y", ",", "t"}], "]"}]}], "}"}]}], "}"}], ",", "v", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tau"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"curF", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"currentVleft", "[", 
            RowBox[{"x", ",", "y", ",", "tau"}], "]"}], ",", 
           RowBox[{"x", "<", "1"}]}], "}"}], "}"}], ",", 
        RowBox[{"currentVright", "[", 
         RowBox[{"x", ",", "y", ",", "tau"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"iii", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6833218067847214`*^9, 3.6833219191449327`*^9}, {
  3.683321959463009*^9, 3.6833219623420134`*^9}, {3.683322006298141*^9, 
  3.6833220372121954`*^9}, {3.68332208172028*^9, 3.683322093061299*^9}, {
  3.6833221536924157`*^9, 3.683322187066476*^9}, {3.6833222506496167`*^9, 
  3.683322279163667*^9}, {3.683322390202637*^9, 3.683322448806284*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","mxsst",
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"",2,12,10,28732372139705306363,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.68332250182294*^9}],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","mxsst",
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"100\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"",2,12,11,28732372139705306363,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.683322505893948*^9}],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","mxsst",
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"100\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"",2,12,12,28732372139705306363,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.683322509602954*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NDSolveValue\\\", \
\\\"::\\\", \\\"mxsst\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,12,13,28732372139705306363,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.683322509612954*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"curF", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6833227510102425`*^9, 3.683322760447461*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
9Q1p0/t1boae26XRdc4sy/T9KF1YEbzSWTteWvafivGt3Zmcz06auz/TN1k6
1CP2zz3tXM5bDfl1Qds0Q/pV96falIA8KdHjVMDf8Zf+e56kanqg7PP6XM49
A5d9q6oqkH7+2NJUJe0V58o2A+y0Td9I/lOH/J5hKPtJ/76XGpeM2T8mfYGU
EXdSr3v1up3+dZayyicJHOVK/ULLBTtIP69ETD/2bX0bbdNyKfzsMpIeHPm+
Laf5wg7SF7nS9JiPYF9BwX/AxaSRRkiP/QfXipMXgxJGGtl+jO71d16Ezg8G
UJ2hQ2V7xx++1onSl7dDiQ7qt/p2MnX+wPnJGhz1ct50dUy/AdmcBxzs1VxB
IU26fWE70Rn1BZ7uNuK8Tb08nh71+K6fQ12zermcU3+zpB5FtB5hBzxz6tYh
3fvkSygX6n3Kyi0C32BV6651Zr70wrFCaCfge/sdIfkiPdpJQ/dhgp9oJ6en
0HaC9Ekt4gc7a7+W+sU/I+0T9sGnaq4k+iC9/rML0b7WbyVlbwWhnYNr3qEc
7QHxg8rP7Rf+1iPiDbSTDv0dSL0jPeq9Kk1ZSI92YnnUhaSHn6iX5RdpfdH6
KOY6L/bbEN0kTdYT3HM61R92wD1YfVF9P3H+3ofagX2qa/X4PS6xy+7q9SDs
g3+fnVp//XLZPriTg3mu+3W5nYBnH6EceoJ/mkntwB/wS2Y0X/iD9nB/39a2
3+bK62vw2RM2bbHrlM/zBU8xoO0H+fJ25UDbG/IFP7CH2ocdtJPGbWg7QXnR
HtzV8ockFqbx9OD3m1OOcQDtQUHhmjAO8PbzjbYfjM+IP6efiu5aRyuFj+dY
F/xXEEY42g/iajXVerFDbq3i9ts5uHd31i6Tsv7YPxi46yD3B/uQCgoTSHrY
Af9hqibY6XIy03tVpq+UPtVFsIN8YQftHPn6KR0h6eE/ynWclQt67llV8CTT
N1YarWgV0V5K4XqCt2Ic7QHjkrPRdlJfaJ/gu+rReQfpaT6vpOPXxfYMHnGD
tkO0E/C3XmL7BA+8KrZPjG+nPGxJP0L7BI95Xyet9Vm5XYHPGC2On+Atl9Nx
EvmCL7pM7cMOxsOLFXTeRPtBO7maFyboHFHb2NNZO1o6GDq6wHdiIrcDPp9x
pMd8tD/ntdDOwccxjvSYd/qbrRbGVfC5PWmcAI7xrew0nXfQTsArrsT65i+S
x23U79j+dD5CenCDL/Y3dRrJdjC+nSywKHPeKfd3pF8+mLYf2Ef99g4TxzFw
x1DKYR/cy/34sSv+cr4Yx45aUI56QfolV0SO9HrzRI56t25J/QfHeDXjxmFS
XrQftIf3l+j8iPTgoz7EED2RHuPblJfi/Dhfu04TU+d30iPduUJ/BP/ah3KU
F+cUU45ONX4V+4LnC96Wcdipd+7aEVPnMKlelwPhLbvE8XzB1RlHP0I9PvtY
l/QjxOHgJ95TjvTQ8+LqSsXINDk9eNVKkUPPfePoPAJ/nHasmpbpWySd6jJK
6C/gHzpTDh2wf1KpZi7oAP6umbmgQ7n+kIKqqhJJuhRlNsghmucLrnOZcqzL
cI5zornW1e2rk7j/4NO1g5t/b5HE6xf9Oqliw/zUGcncPsaHbuZ7PRPjkng8
g3F+3Cw6zmP9CPsXW9B8oTO4VmeaL/o18h34g+aL9Oh3d95vJjqDo19oRor1
An4vTOToF79KxXEV67LmGY2+bzuTyv3HfldUPU3Bf/BVNx4K/qN+5wWuIf5D
f6S/UkdT0B/8y7WHgv6wMzBgjaC/uUH9dQoKwVJhTiypX/gP/oFxtCuMn/s0
y4wuNJXXrdAzqozqifaGfv2fahFJfyTF7Zi26QcpZZz1Dm3Td9Lm8x/qB1fI
/gSnJZ+1ziyWFD/bkX4Hf8DXfaIc/uCcdF6clO0Se4dznJPO/y9n2xy3J9w+
2lXpj4RN87eFcD9hJ5rZAYedfswO/IEdpZ/UDuyjHbaeO2l6/dB4rj/GE83b
lsc7pskc45iK79YjSS5pPF/wpquiZ++4msrto129Z+0K5cW+oqHdf4IO/F5N
41TiP+wj/Yld/wnlRfrfDWh6tEP4v5z5D/vgu1OjB73oGc/9RNz1td1Log/a
Lfr7sE5VI198SuXzINrn9GEN1mm2T5GKJz3P+hunop2k12gniPcmd9KM8WwY
we0jblx5qbD1aAt5vML4771TZ/rC63E8X/h/vd7Iq9nbE7h9rKMvh/+aN8TS
l/df5HvaNIvYR/8Fvx/df7bOhyiuG8ZPm6qGUX8GPef+IP2OUdQO+hG4YwS1
g3YCPXNe3jbMXhnG7aAemw5RSfDue4/bAdeuO8fO7t1dbgfl6rfjnddbP3/O
4af3b9FPfr9uWDdBN6Q3Mvb10x0ey9Oj/YSauRi2UH/K0yNf11Exfm3OBfD2
g3XoKcMtbkt9d/H1Juprc+mqRZMrnvN6Qdzu0eAgmS/Asa/1tXZkXw2NDM6x
r7Xn05g3hmryfg72tXqtLVfrZSzHG9jndE17FWp5T+bY7wq4UCakx35XrLKp
YB/7Wg4TQwV/oOf+psuEckE3P/cTcXv9H3N9sC7rm2dB9EG/2H50bYCz9lOp
fU/78UHtn/H+8tXiVqm26TPJttH3IbqDEjn3Vf/imOkbL204sHTMhtVpnK/d
fcxL2zRFytN9OjN3WRbnvYt7h1pnZkimuo39bn1/xTn9myPdHpF6pEdFDudJ
2Qa/qqrypLUpPyKL5spc31npoLZpoVTyw1VLUy+bcyfjBDVT5zfS+rFRGiEO
6ZyX/7x4yTrzndQp72t/88tJnI+9s7q3s3aJNH9ifYtBs2O5bljPjru6usHc
H+c4xzmpndKitC2ucn1hX/dboOvA33tyOOfncdPcpnuNzOIc48mIBx3IOAOO
c5Z1d5qRcRic37sIPCvYwTmCQ3M3IV+ca5evFv3EPF73vTmZR6DDI13FNF/r
PMni2tn7r6/LOmu8frkw07dAsh9Ru2VqrqzzJrfzH6uqXktrd3oqbzqZwfmb
tbNTrDMTpNqTYwT91WJDNBUUkqRF872E9MWHl7Yzda5u/zcaCu2h1oCzw5y1
C6SWL1q67Nsk89HSfzesMwulzTeDhHZlWbr8ha/1a0kr3dk01D6Tc+yb1TJo
smtICzlf7CumdW8u8MuZFe99rVOlocZuQruK62fZ39Q5Tfo1qY6gA9ZxlcYz
4z7Zy3zeSFdVBYUsqV+DX0K7PXK+cryzdra08dA5QWfE+RO09K1dDvyTnsQ1
uVJeC7FfuNvF+lhn5kqxjmM3WbySuefn2gOctd9KsxcvEvpj0MWBszN930pu
jY+s2zwklfPJats2mzo/l2Y3/iH0i3tRZiqrMl9IX5I+k/kR/OSNVxYKClHS
nOMPsg6Hye3nYNARU1PnOKn2MEfB/siuPRY4aydLU51OCPWCeM/HJLnTlUqZ
KzhFbsv0TZc+n1YX6h1xYL+beRP1AmX+qGKhq7bpK8lafZygQ+bwYcZ+1qHS
6KVNSL8GH/i9cWKmb7ikUhL21U2K4xzzde7y6f4TP7zgHPsz6vrvpt4aL+uA
dVZ4dlX8tnI5X6yzomrlCn4iXm3hlSCUF/tpf4pOaOSkybopX0sK87Uukky/
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
gefXuydKpnMjhfTF2iuzGwXnS1qbdgu6KZ8/tef5t+p5ZGpJo4Ze2VIh4yPS
DZf3VX0tef80EPSfP2lJ44/Sa+m9w/5s7w8Z3M7ZxgqrhkenSl17aAh6JijO
9H9cPe4XfZtDygU7MzadO2A/O0s65Jkh1Mvh5d/iVaKzpB4hTwR9Dtmcm1C8
IVca9yac1C+4Z1H016u3cqUb0yJefC2UuYeD6vfpk95KDT+3FdrVY8MhGpcK
30reTSaN3d4+had/otL/bItDb6XK4cePXX6VwnUYu+2wraVprNTJfL1Q7w8s
B9ebrv1CMp5TQfojuHPzstmt/KKk4PcXT1zxjOfc7tPxyKSyOCm66gSxDy7N
1struytZmvDyoKDnn9AXPxc3y5DuxJSSekF6314r1e66v5LMfWh5eTu/Pn74
C+0w6c/H66Qd8v5i0e7lJ+sI6dvFgHPDqscB8KGOiqlhVWFSlEvyzUb7XvB8
FYen2W07UyS1rT2T9FOkbxeo3N0woUgqnXaelAvp533zbHKpsEQ6OeOg0N83
X8noW1w97t2dvrlsU5NwzretTnwwr02p1CLiQY6ueiTnA/YunFiv8xNp24QA
geuflZ41Ci6WTn+IE/w8vtXBZJGvn/RsYMCMk2FPeTxTwOLql2Uq0dFhN/j4
dkZ5tE366TLJzM1Ro3XuI95Pp1kqKakeuiip6vYS+unRCY2m91Utk74d9iX2
1T8kEJ4XnnIjXOed1ExPYUfg7mTOnycrTbRb+E4y+H4sLb5uMrfj69293SYF
X8mlWKlMaV8wL9f1aMPfH6QyyWC1IuF8fpx3x3fFk3LJMy6oKGH5bW4n6Lrt
uXCdcmnb9339Dqv6cjtpnS4Pt1tYLjlOGvzqxub70lE2Xxxj/gcx/2H/6u5H
Pi2X3ZMCHvrYDhz9kPNlzeudGKnqLl0aGCrkO3CKRzfPTrckW/1DJF/Yhz+T
avizOyQ7OcbPSzLuLhF/YH820/lzH6oz+B/d0Su77U6Qjn+OIfEV5inEzyu2
r2xqMVCOi/zdXu9b0zxVSvFtReITpH/L4uqxS3UXuQ2S46v1tewuPPTIlI4l
BJD4B+mxbzyw9XJiX2PaskvB1VyB7Wc2LzFItRyezvkftp95ZN1/Asf+pLOT
TlKDc1mcr2X7ja/a3de5dVCOQ06Tv7nSfEmMWyqK5i3rsihf2vfRUohXp57X
+WZ2u1Cy771EiIcfTPq9Z/X3N9LhVo+EeGm/01SPoOwYacZmIyHOwTpIu9aX
fTn/rC+wDroc0pvoBo79k31KA2d1/WddgPWO8YqZQ52q1xEoL/YbWw0enjKl
TSbn6mxfcdT5je/8QmT7WO9knaf+wP+GTzTW9goIkeZ3kkg8Azv12f7hjJcO
gxp8i+Uc+4enbqxttPJKkpwv2z+c2f8/23mlrzjH/qGO/gbiDzj2D38rDhX8
x/7hit2GR9qop3I/m9aJaewytEjK6HKdxLdIf4ztEy4dOL6VRmk8T28d6HbW
/1CJNPOPMYn3kB77gd0uO3eouB/JuRXbD4wsXC2UC/uBl//zJu0K/CrbD6x8
0FNoh1j3dV40jaxPoT/2N1y2tVs4sno9i/TYJ7xo7Cr4E8n2CQ+lTyTlAsc+
4frBQ4g+4HFsn3DnPqo/xo3U+8uezGvzTrJts7dWipfsD9ahaYf6k/YGO9g/
DB18iNQ79Oyd+WS7Qff7UsOi42Q8hx3sH85I7mwdVD3+w05Xtm8zc7On4cQu
T3kci/0EU9+TQhxr+23XA6/Mp9Kt3+vq2FbXF3hJZOC7QQoxUnUB8182SOT8
/thfDZc0S5BSJt0f+Kd6PMD4afPgVNe77inS1p8bkrKD5TiqR7v+w370z5Qs
xh5y8tSU4xb67zmSbk7Yu07f5Pk9YeOAh+HV67hlG2ec8h4mc91edUyKq9dr
wSkZPxuoynGXQ25yYqPgN1JTnX7z/ZfK/ow2XVc2fVKJNPlts1DjdTF8Hvzu
37KysuC9NKfuzw+B02x5+mDXSvWPUp70/veZYzkP5Xw1xjz3aFG9HnyZcnze
ibZyPLm16rS+YfW6eEvV9pGp9TJ4+iKjKTPydyZID57/R/wBb6747LT97CQp
Z9kuIX3xh4UWdgvzpTXNDwr6KCZcUJgxqUBaqNT02OEpcr5mHn1Lr94qlGq/
XU90BrfYv8ph25nX0v7Be2/MXJDB90Mwzm9QVzNYUD2eg2OcD7nYknDYuXb1
45qezVIly7QsojP8fL5siU9SWZr0fd8JogPsPGTzwn39Lbsbn5PrxaqJo/16
90xp78mZQj3uS1B+0XZXtnTw6lmiM+xgHpm35F3duwdlHZxIf8qV5sTRdgJ+
pW38ur6qeZKjbeWnA7Gy/Wsza21+/u2N5Ol1l7RP8Fk3rbfrZ8ZIn5Kuk30z
2LmpO7PWPueX0pe8/aSfIv2FEXELikZHSiN+9W2m90SOJ48c3hfzuH+cFJY0
hcTV4KM/a71WiU6S+p3aL+iP+aJW19UW09vI9VV7TvCf8bPTpc/nmpH6RXqc
T41fMfjewxC53kPC5qq7lWVLd5T+COXNy9A3u+gbIhm0bUXaOezgHCpu/U7V
xtXjCTjmkc3Xj/22rh5vwTGPdDjpPtOqVK4XzCNTqgyJP+CYRypLV5JygWMe
6Xy+94O21eMk/FdpFF/7o1QkzdK4QsYT8Dbv618N1ymWdm3RIzrDDs6hvkTs
D2tTKsfhC0MuOLeonl8cPq8m4xXSY35Z5+Y142f1eA6O+SWw4KhQXswvQ3e9
Je0NHOdNfWZsIu0ZOo8t7GF1e/QjKffoNhLnIz3mkXtDbgn54rxJdckh4j84
5hGFmXpEH3DMI4PeUP2Rb/+lA8baLSyWHHT9yLoG6TFfzM/fQuoX6Te1ifzv
qfNDyTVw0Te7lFC+XljI5ottxbXIegF2sK+Voau4/tT4RM4RFxmGaN3pUz1P
YfzUqmtSVKvWSqm0VSUZPzHv4FwpKv8KmXeQb1vcs2Kcr2s066RfvVW9PvKb
T/zctuw82ffGfaqFmv30e5gkc3/ADzOO9YhRFZ1n3R/QebY146vP0n2k7mu+
C+vW5GYfdDS170u9zm/wVUh+JI8nlcO2bDtTJjlPXks48sW5T/KLx4/Mq+MH
cJyPnLQblDypulzQYRw7b/Kf6pu+JtSH64BzqA+Mw5+gDavaGyaUSf2L/M0O
j33I1+MJ072CGwWXSwYWP9x8p9/m9uHPkC/OZH8e8Qb0LPWleiI9zqFGWgaQ
fFHeX6ZHlPusuiftjX1E8kV6PXYe0YGdR8B+MPOz+B31E+WazewPq2H/yZ7l
X5tXXZHCn1YS/xG3YD/t1cSbJA5BnPO0Dm1XbWq0K6xzb7N1Lj0/C+b7e3s6
9Vr6SPUS64dx3L6Dn/tslzlrjMCRvnXXndPG7bgruZL7B2k8fWal4tJXZzcZ
gSN90ZusJA0TP2k1e6eJ9BorLcfUmrDDCBzppx2r2N36xiOpObmnUsjT3/it
v3hN491G4Eg/6PiA+ke0giU/Mo++4+lLKicb2BbsNgJH+meNX3/8XRwszSb3
Qkp5+neVindjd+02SiD3nOR7oZld6yp1dAiW3Mm49vkf++OJfXCkv9qQ2t9A
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
deyd3f7dz9z/jTNxflE/WsHZZ4wcZ45g73EiJ9hPW3oxhZerJ7vPoB3Ube95
40xerubs3daDEbUDRjV4xctlw/J9sKeeNPy4HH/OYPnu7vZeZYdvLi/XUJbv
sMcuRg+W53D/+7D3gFqP+338d12A8xS980rfnKPkdUGVI30fdDvt5cqNxWnc
f9yveHpcbUzARNnPXsz++LlNxho3kdcLasx+SdDgJXdmyuuF38x+ruNz/ftW
eXye9WHnZbaFqm3uJshx71n2XuzgfyG3/o17S9h7RsOvOdP/XcfhfcrZzWOV
ulnJ67hA9o6p0ZDx/93+Iq933jE7nT6kfV7uIfuPcwfz5CtNJzaV13H+zE6l
n0n7kt7yOu4ge3e2XPOj5f178rrGhp3f2fyZ0Ci2obyOm8Her/Vq8/Lrv+ua
RPYe89Tl2K//1pcJO5fp8XQ8scPLxd4V/rj0nuSLciUwOw0Kx+fqjvln3c3s
pOn0PqKTJNfLQ2Zn2suCJv7N5HJdZu/gJp40J7qhXC3ZuZivRHXm+wzsPd2N
j7ReUC499p70g8OTW//2Iw92rjR3dR1S7ygX3kXWiZi43u+o3N91mZ33R0KP
dlTJ4+VyZ3Zu++QHTvWQ12XqzM55dX3lvY3k9ekRdu9l98cmpD2jvArsXWS5
fixp/yjvenbep1qhSPoLyvuOva88OcTg47/16Mjeyd7VU107wSyIl1eJnTvn
XfIcNbj2C15evPd0vX9kUaeUZF7eo8zOjz7fdid6yuupWsxO1zHBaz51zeHl
3cDs2HSo8v87nqC8xey+k+vyTmT8QXnnsXedB3UPkPEK5U1g55gvVf8c+zu+
8X0V9j50f3yk+7/9sYy9/zXr+eRS5hR/Xl6cMzomN17daX0ULy/OreouG3DL
qHYCH2dwX2X8xulkHMY4ifeVBkmbybgNfUpZvnW9jsTNbpzG9bFk+UoTV6ww
tk3n+iSxfHeGWpB5BPqMZvlOuuZE5h3o84jlG67chMxTKO8Y9q75+pBuiY26
3uPlfcLOH8P3xjfr6PWUl7cvex/nH+JN5k2UF/deSs3VyTyL8uId4sCGy8i8
jPKasXzLLAI0QhTjeXmDWL4tZt50jNmawMurz/L1nX2FxAkoryfLN+5ABYkr
UF4Nlq90M5vEISivF3t3NnbWkdOdDS/z8uIcc2OqZ2jit/u8vMfY+6+PNl1I
XITy4pxuwe+7JI5CefFe8pmRDYm7UN5rLN/fn85Kzc6F8PJqsnyz1Z9qtewR
LsczLN9N3xRJHIjyKrN859T+SuJGlHcTy7f4VgKJM1FeFfWGo/++zxvsF7th
X9gCXl68W5+V41k+Pf0IL2/58nRtZ+33UspmXRL3orzz8T3hkKEkTubrX/ae
7o3uSxJXI24fw85DtRucIXE4dFBm/pyqt0L3cqwj12ET8+fy8aeNH/S9xHUo
Y/5oB9Yl6wLoYMX8+bn9DFlHQIdk5k9o75Zk3QEdwv4E/NYx3SN1uJUk6JDF
1hcTBt0jOmDcsGd8Rz+R72Xri7D+dL2D8aQLs//gGrUP3oGtUwwX0XUT/MG7
yKbXnIV2iHNnk7hbpB0i32aMH30u8hks/ldLo+sO5OvD7Ke4U/vgB9g64j99
un6BP3gHHe6jI4wDuGfi2jWVjAPIV4FxE22Rx7H4vM4Xui5AvvHMvv89ah+8
isX5ucl0fQF/8N58S3a4MA7jfkut3S3JOAw7piy9ZjpND/6IxdW3XWk8D/tX
2ft3p6KuhMN/XXa/5fzBeBLngy9k47B3XGMhX3dm53cBtQP+gY3nF7vQeQT5
1mbvtQOG3hXWU7hv6e0aTnRDvkcZX+Es8hA2Tg7YTcdn5FuL2TcZTO2Dm7Px
drohHefhzwL27ttBaZ+wnn3P7tuM7a9G2hXyLWX8tK7IO7BxbGkiHT+RryWz
v1mB2ge/ycbDB9PoOAx/8B72sNUxYZ8B9ysCv7uTfod8zRi/+0nk29h4opJO
xzfkG8Tsb5lN7YPXZePSbW86TsIfnDt71ppO9oVgH+fXatr0vgHsgB/sQO8t
4Bx/D+t3w1zo+p3Ht6yfTkibqemzIYT7j3Nep43HyP4k141xrfn0vBvpN7F+
YbWN9gtwd7Z+tDWg61bYwflpSBQ9L8a4vYPZMWi5lsQb/N4Cs2PiStehKJc5
63fv+p9pW1gm7wPPYLyiH+UY5w8y+1Jzah/j9jW2Ll5uNoTEUeBH2Dr37KwG
dXN0EjlvwtabSwyPkTgTfDRbP/qGp6yY9ECOAyvYfcjCypskXgW3ZOtQrTYj
7PSHy/FhLvs+SWJ4YxL3gm9i61m3sItb09Wfcn1+Mfs5jyNIHAs+l9m/0IOu
c6FbAbP/9NEvEg/zdRzjdQJ/CXGyQgdqPzwgQoiT1ZkOJ4M0RvjOeyXHh+w7
JGMtDYT1Qrcav6cDrsv4shq8kK2XL7Df2QEvZfwK49D/Ocv3T/2pZL0Drsy+
11F+U1NnZGv5XOYlSz97AfUTXJGlr32crq+hpx9bX9t1fE3WR+Ct2Trd8yld
p8OOPVvP9g8rJOtB8Mds/TszkK5/US9415xT/tmvlYNsfx1b/7ae3IesN8GT
2fp6cRpdX6O+HjE/u7WnfoLD/pZru7r+aiivZzcx++oT+gjrWSfmf34w9R/6
X8R3e9jv+IBfq8ERv+GdwiA7kXv8D453Fpnsd3/+F4cO+I5Qb8U7tr8UC7jO
+P5MWBeqMzi+I5SWQNfp0B92QoMX1R+7RdYZ91cdN1GdwXHP00KP7gOgH8HO
gyBqh6+vGW/75zbxE1yD2de3FfdJkH5Mqvn2tK6y/u41dEZ6T1beIZ1oeZG+
N9PNnv0eELh+DQ59oPOWljRf6M/fubDfCarJLzEOfWAnb8htoV7w3aQfJ56R
/gWO/YpPbeg+A+oFdhpqivWC+8PTPxuSfgeOe7YK/nQfg+97MDuXWov1Ar7S
UKyXTcx+5ntDYf9Nmfnv4kz9x/oF5dLMb03GGXB892m8XQKZF6Bbzd8Vqsm7
MI5yQec2B3eQ/gvdYF8z5CjZtwTHfkiYjRoZn/l+CLMT0P4TGWdQXvAbe6l9
xCGmbL/iWf3zZN5BXJTM9jd2jB1K5i/wviyObXU0Xtivxv7D7M11yHyKcuG+
dyOzUjJPgeO7WCET6P4M2gO+n3a8r7ifk8LslBiLdnBvPD5JmcQP4Phe0N6p
dH8D9vEdtm9HTwjxgwGzk/+S2sG8jPPf45r0HBx28N22x1Z0nwHpcR56rS49
F0Z6fJemz+opQjyGc8PRxpuFeA/8hB49PwXHOVqDb6pC3Ii4K2rRIHIuj3zx
Hu3nvNavKsfI+0L8uxxzKcd8ivtgxm+vkfsPsM9/T6fgO7kvAX/4vbLhdcj9
CuSL94ntJgb66W+X6xf3rAx+0ntcfJ8c+//jaXqMY0g/jP1uDvwEb167VLiv
gnlQ6cYuoR/hvtO+aHpvCunBT5XQe1bwE3yaJb2XxeMoZt+yjM7j8BPpZ7Pf
wUF/x30kd/Y7ODwOYXzfdnrfCf6AH31P70fBH3DNC/Q+FfIFn8p+vwb54l5Q
Y/b7NcgXXGWMoaADeOYqen8Jdvjv3bPfl+FxDuO36yqS+3XwE+NMby06/oDz
96TtfEn98v1JxvU0fIV2gn3ORm7NhXYL/vsE5UjP71uG0PuQ4CjXnPb0vhY4
/E/3p/eXwHEfZmZHej+H3z9k64XmVyfPSG+dKd/fY+uCbu4mW/SayO25Fosz
LXw6zBkRLusQwPYNGtjR8zjwfcz+xmuifXd2vmPxMJzs5/P7nyy+fb4t/GK8
tcwt2blJsNJEcq7B/WfxnopVuc/xTbIOyewc5Mwbeg4CjnOT3a5lQvoitp8/
s6IROc8CV2Lz47za7YXy9mXnEcMd6XkEeGsWD+x0DCX+g5uw+Sitc11yrgdu
xebBePVRRGdwD7ZP4h0pCXo+YfNRbvo4Qc9rLH3fMJoeHPvYPik0PezMZnre
qz1R0MeR6dlqgainPTvfWfWMnpdxP1n8NqmRpuZAV7lejrL03aJoenCcK32o
T9PDDuKiFjb+kSvK5XovZfUS8pXWCzjOa1JqifWCea2eDb1PBc7vRTexFrge
O8dsb9FEqPdKdl75+4HYzsvYueHUT6IOAWx91MVB1CGI8Qb2YnkRhzfp/fTw
pUX/pGftU9FFbJ+2bB390q6e0H6GsX7aycNEaD8XWP86ERgutM9E1r8Mdoj9
S5O123oOoQI3Y+32QifabsFxfhTUUmy32G/5T5fe5+f+s/VagHaIUF5wPy3K
kR7rl+eLivefuySnB9+4QORoP3bWtP3ADuKWtt7i/bEmbD+2qJU3OTeBHbzz
Kry8ZL1utHz+co7dl3A72mbQEr8kPr+oMDudNKgd8GdsX/fGUHrvAv7A/oEr
1D74T7avazmC3t8Ad2b59nSk+YLjHF+9MkAoL87B1waI+oCP8RM52uGBnrQd
wn+8N3yVPJv4D453dr9n0/Mm5Mvfca+dL5RLie2v6t46IJSrLTtvWtC3JSkX
6sWZ5aubQPPl4xuz72kzX6gXFWbf7Tq1D47zLA09ah8culn+EnXbwM4jNs5c
R85ZwFuy84gX2+i9KXDsW47qRt8Twb5aFbVTOovaAc9j+/kNb6wPCdGM57wv
u1djsMxpcoPvcjtMY+eVHWfZ/1p5RY7zn7D92AyXjYI/ddh+bNcGKwT/EW9r
GND7geApzJ/NzB9wI+ZPDPMH9aLPzlNWjoki525oD3hnWi+hB7lPBY73jwM1
6Tkd7OMc0Nxg6q1cpyh5HmT73o+LDk9dsPMF51vZOd3hhZebtnR9xv35wPLV
j6X58vbA7B/So/bBXdj5YM+YT2b7bkdwO+ZsP/xUPS+Xx0flczd8T0DnW0+j
Ftfuch7C9K87dWfrQd0fc57CztGGjbjs2i/Oh/OFrFyj3tBy8ftprFxeVrRc
KC/WQZd/vLzz9/0a15Pp7zVO1H8SO89aYEPvs8EOvvNQe+YcQecgtn+eufsy
OVfl8S27z9Zuzw+iD/zEfn5R5VfiD233Ifx+Y+1RGyZNVbrEf9cJXEHB5nxY
6/lGdD5I4OmNH004rT/pLpuPMzk/39dqfFKML//dZ/CixImxpywC+e+HgifO
0XZxvPmYf7cTfNqNhlWDlzzm39UHX3OdcvweMXinGdQOfrcafMELmi+NJ35w
3rMP9ZPOK784Nwyg5aL9rZLzr8OoPtAN9x59n5oHRXjc5bqBKyiE/dkRtIbr
Bm7TcOCAwg9PuG7gxq3bD9xkHsF1A/+Svy6uSfQzrhu4ci9zyUI1lusDfqrp
msAl4c+5Pvx7IF1peugDfjqb2oc+4Blq1B/oA76yDvUf+oDfDaI6QB/chwy+
Ma1/Py1/rg94VdX+qSOubub6gDsfLW73vksk1wd8ha6NXa+ecVwf8HYdwzaM
Wp7I9QF/Yd5ubFX9ZK4D52Mohw7go9tSO9ABvIcOzRc6gHc5TP2EDuBTr9Ly
4vfUwL8NnELKC31wT3Lx4/rJ37yDuD7g1X22TfmEXVwf8IsFBU2nrovl+oAv
nWDRfMCxJK4P+LAAl/3LvNO4PuBBJYNmRYRn8H4HPqjG7xqD+7PfNYae4NFv
qR3oycvlQ/OFnuDSWOon9AQvz6blgp7gfn5UH+gJrhobT/SBnriHOdjRTF2t
UQjXE7y6vTXQ1rPjeoJvG+FeX31SPNcT3Dpk0SRJL43rCV7e8MqziAbZXE/w
SW3f+j3bLv9uLPh9q5F7T86Sf68HfKcF5dAT3EOd2oGe4CPq0nyhJ/j2x9RP
6AmuMZSWC3qCZ9lTfaAnuPfo+UQf6InzpjNDvGIKWoRxPcGrqtKd7szcx/Xk
51PDXI+HjkzkeoL3Hpp5+mlRBtcTvF+/4ebHuuVyPcFDUtpG33XO43qCp583
ObZnmfw70eCTz1EOPcH7JFE70BO8hT7NF3qCnzekfkJPcJ8htFzQEzxuINUH
eoK/qHhA9IGeWKdb7Bi/9/zccD5OVpH/cqRPyw6/HZcWznVGegUFR+eGvvv5
75sjvYKCU/CGAQe4/ki/cNiu+j12JkngSD9gfZ/GWV+SeL0g/ZlPrx4UXMzi
HOnfnDtlZjIqm9cX0j+VBlsN0M3jHOkfXXRtXlKtM+oR6Y8t/HjNw0v+nS/w
kISTOl675d/zAj8XRznqEXyZFbWDegQflrreWPovj9cj3w8ppeUCh5/RJ2m5
UL9IP2YI1Q0c6VVtqG6od6Qft4XWIzjSRyyi9Yj2gPRua9eRegRH+vM71pJ6
RHvAvd+ptcyJfdQ7uILCOWIH9QuuEbOD+I96BN+enkV0gG7gbt8NST1CH/Bj
iTQ9dAD/FUHto7zgA/+MI36iXOAP89cQP1Eu3O9V3+8pjCfgigqvhPEEfJ/L
cWE8AdddliqMJ+A/qkOnv/0a5QV/kiMJ/R3cfUGq0N/BrzkdF/o7+MA9nkJ/
B4/TvC/0d9zjLatjIsxH4LUU9gjzEXhq9EVhPgJ/Hm4pzEfgzirnhPkIXCkh
l8wj6EfgXZ7nCvML+EeFc8L8Av4q2FKYX8DnRlwU5hdwa2UTYX4BV3eeJ8wv
uK/bpJ2yEP+AKykUC/EPeJJVlhD/gDuVzRTiH/A9/Y8K8Q/44A79hPgHPLzG
77yDj2O/8w49wTe06SfEP+BpekeF+Ad8adFMIf4Bfz07S4h/wJuqKwvxD/j4
Z7FC/IN9Eu9z44V4G1xVYbsQb4NnnSkQ4m3woQYrhHgb3F0jSIi3wY/VVidx
NfQEn7H0c/NPn+TfSQR/sohy6An+SVFdiM/B67cKEuJzcCW9FUJ8Dq57skCI
z8E/nhovxOfgZrFjhfgc9/3uTDYl6xroBr5ndm9hHQdevLKVsI4Djzy7XFjH
gZ/dOZKsy6Ab+Bvz9he2pD/nuoFPHEM5dANP2TJSWN+Bq5xaLqzvwHctbSWs
78DrTe0trO/ArSZQHaAb+PZvZ8g6F7rhnqHydBuyXoZu4MavzYR9A3DrhBnC
vgH40Psmwr4BuEpsa2HfAHztdmVh3wC835WrkfVXyfsG4AZRrYV9A/BDt02E
fQPwitgZwr4B+Nc8M2HfAPz8ZKoDdAOfs2042Veh7yrj+T7D/lZLFZ6duMPe
H2Zw3qtuoPQ3Xz9yPpfH+YfCYSF//aS/Jyfvq6iXuxz9Wy76e3LFnI9U8iH6
JLJ9IXAlti9K3/nI+yp9FXYc/2uHvoeR91U0h+Ql/M2Xvhup4Fyr3ZpZf/2k
7yvkfZUbhd+8/upD3yHI+yqOq648N9e9zO7rV3E+8fX78pGe1uy9ZTrfZ8gq
amx83SqcvUvM4/zd7E1nbnR8xt71vebcR6lD1aAHz/nvdIMb/dzyp07TWHZf
57Nsh70npfc/5H0SVZXLTQzaxrD3MBWcB5/RWJX9NYK9G/nJeal3z8ZDXwez
9xXyPkmdlNKBt9r6SPhddfAVm/ZvbtTNgb2rzOX7BhvidM5vsk1g7xJfc37B
eN2uL05J7L1fEecn1+2p1ap/Mrt/85XzO+x9KH23U8H5pe0qc360j2e///ST
8/aDCvvaZ0az3wH6zfl1/9k/44YFs/cS8v5G6eh18clnL7F3koV8nT5tiWn7
Ohnp7Fz8O+fH2TvNcnZ/A+smG/Z+kL6j+MO5kvmzlY/2PZbm1Vg3FbJ1k2eN
9Y4eW++0q7GuyWXrmpga65eHbP1ygI0z4B1OaTyp3bBAGsHGGfCCARmZVrn5
7HdcPnFu2Z/yR2ycAU92oXY02DgDPuoczXdTjXVKLFunpNRYjzRi6xGDGuuO
BLbueMLuvWDd0Y69T3Sqse5QUJjw9O+6YzMbfxC397ZrurS5UaL0kY0/4CN9
VpunuGay97p5nO+85/vZpzCXvXd9w7md3vuX0fvz2fvSYs6N7MZ5ul/IZ+8A
v3D+u3WfDhvu57P3cvI6xb7TpNKJa/PYO7EKzlfrjVhvuj2bvaeS1ynfS0rW
/ncomb07ktcpDg7dYmJyItk7HHmdMiNU9eX0tBPSEzbOIJ73OTeo3L57OnuH
nMf58K93Jxvq57B3vK85V754WnHThDz2brZYtnMjfOzAY3nsvZ+8Hrl54Pb8
Tp657J1bBeenNJ1abpyRxd6D/eR89O3lagfGJLN3U/J6xD4m6FG9n1HSZjae
gM/avuVGm7Ee7L10Lo/DaxllKvodzmTvjV9zvu/Bqsb7Pr1i73uLOM8f0Flz
Y3gOe3dXwfk05xktTuhksPdpPzlv1jHVvF/HJPaO6zfnC/psHZeQHMXeNcnr
gl7RaQ5B+25JXdm4gfg21HXX027n09k7t5+cJ9wKsff+Ec/eEYXx+SJtDZ1H
gln7B/+9kL4/ymK/b47x9up2Ot7Sd0cRnPul0/EZ4xL451T6zmgsG5f473Q/
qDfvmdF1aRb5bsINPh62GkvHw33kPCaa83uBdPyk7+XkcfVbRgezU/ND2e+0
/ZHHVc0sE6dBd6Rs8r0Gbz5+rrW191Drf0cqq8EPM06/sxDDuVpqvWGrIiKk
1zV4a8bpO7c/nGeupnYW1uChjIezfFEvX87bEV77ochXXqCcvt/7zfniSmWS
b90a3IxxK5Yv+CI3amdRDV52ivL6TH/E82sVVhH9I8j3L3w5T6yTSPRcw+oF
/FvKNFIvk8j3I2I539awDamXTay+wF1UKXdh7RzcN5HaSWb1CO6nSPP9yNo/
uEqlNfHTnrVPxNV3/bfReIC8uwvkfL9OLdLemrF2C67W/Q1ptx3Y+ADeqDPl
Zqzdgpt3o3a2sXED/LU3zdeH9S/Eq32aniP96yYbV8HtG1L+mrUH9Ls2fn88
2xkcY+eXMZybX9APXdvGi53v/ubc+zTliJPBZzwZTeLkBazewRv4UPvIF/2x
vaZlbYvsi/z3/sAnpC4YkafxnOcL/ibg5dG0s/4S7IO3bU3twD76Y470JLDT
jmuco1/sYP3Ogdy7KuPpP9sv/53eNom9B/jA+Q+bxEemGoncH9h5lkD7Y00e
zjj8hJ3Ng6g/C2r005esn75lv5MI/jB4mIdS90yp6H/wK+z3r8F1+u4Z8LZ1
OnsvIfNejOP3E8Fd9f///CTj+L1y8OZBNN+aXI3xa2z8Bx9SFRh542P8/+GD
GNdk929xrrGIvZNCfAv+61iXhe37J/FxGDz2nq7HGo/nPO4Fr5No3HFsQBR7
9/uH88rC/luUjvpK71m/Bj/v9e7C8zo32Tufd5wXLZaKilJy2DufIs7HSj3J
PGvP2g+405mid6ql2ezdTjnnawMmNNjpniVdYe0KPNSfcvrO5CPnE09TO/Sd
wGfOmw6m+dL3DzJXWUD9pPf7v3L+ooUtiRPovfmvPD7PaXyOxD9YXyD9Dcvw
9lcWZrD77hU8vfbIFh5rj2Sxe0g/OVewGSM9XJ7M3o+95vxcM2q/NYuvePqi
SBJf2bL4E3Hvq30fSPxJ75PJ50Q93tL09Hey5fOFe3to+qAacXsSi9vLWfyJ
9H+mjiLxZwCLh8G/fPYj8fDhGuuIjmwd8fh/rAva1FgXjGTrAjPmJ+LVNzo0
rsY+Cfhtl3XkHAT5gis1+UDOTQLxXonFh7XY+xQN9num4F4VW5qqpL3ifsLO
igbUziamJ9KHXaPxbQprD3z//CyNh+n9vCTOp20eTep3KLmflMzjwDnrtEh/
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
GvadmX2Mh/yecMqPyKK5OVJ5Db6U8cQace9vFveCI14qmVrSffeTTM75eeWd
ZqSdgyPOPBJfLqTn+yH1zEh/gT+wv3KnJ4lX39TgOxgvqRHfzmfxbXENvvD/
FXbmQVleVxgXF6TWqqEaQbEEF1wxCIxLoKHRYqNUpWqqH6JRsSgogn6gdWsy
rZEZooALiIBFBY2OYF0QwbBKEBewShREUWMwYgloFTOfiktnzj3Pef3uTKb/
/ubOfe9y7n3v8txzNI7+ejnRdPnJl7f4ffgj6a8RXduoHRo17s28VhvXzTyu
r2rtEMntgO/KvL39JP2PdB7E/KH2/7Lj/1eTxrtpHHby41+OHXiz5pxw9K+Z
+xcc/bvEYRa1QwHPA5jf5tc8onng/5VfzifbXQhbtLtG+hf52A69RPaJ81jR
9YWqeQb1BX9p+6LRxZIn/Q7erbPiWM8g/7qHFq89F/Lk3g18Jpcf/x3k45ej
xkss5wO+hr8bp/EvmefzuTrmzyB+v4n/o9w/Xh1Muk3Ei4Q9+Glx2NH+7XJV
HPCW3b2fPehr7EdmfJ5+4GixEb9ezjk5PjjSo19CSptTpnkZ8b5h51s53j3S
w55d95T8EPipEY9YdODhLuvjC+skPcZRoGUvlQfpkY+tc0pVfZARpx7zT+5u
J7drz25LPqIr9myyKifs1pPjqiM97DYysZjKiXijqO/n0U0zmjyuSBxPuWfp
k/Hw7rO34nFzPnU9d1E5kR79cmS4idpT4lxzfbc1DKB2QLxUtOcxjhMt8bW5
XgUPGqk8SI96/U2L5yv3HRyfV+L5Qi+x8uifUt8qD+zQFOn8uy7D86R9YOeN
/olPHd3ypF/AX73pT+kR/xT5DON8glhvIO86Tyt9C/bv4Gk16j59N+sr0P5J
/ZVexYd1FOC7byt9C+4ZwSuGqPVnCJ9rof2nT6ggnQ/O68CnjIshXdAYPg9B
v0QsukU6og18zwLufP0z0h2N5vsm8E1ON0mnpOJS3BZ+v2ku6ZryWI+B/o32
XE96qn6suwAf8biU9Fe2fM8Fbh8XTnot5Vf0lvAVjjtI32Xmcx6Ml0tnlQ6t
iHUX4AO6DSPdmnrn/63wxJAW0rl1JL8JxrunoooVpNNbSO/VjfdNWT/Zk66v
I/tVg/3Hc5yCj7nfYYc7CstJbzmZ/aqBm9jP/ybud8wPHnM86B7cg/sdPP2H
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

   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnAf8V9P/xz/33s8dJ5SVooxSSUYZpSJFJCMjo7JClE0hm2RlhYaWFamI
FMkWspPslb13xs9e/9ez1/H4Px7f832/77nnnnvPOe/zXuf9/rQ47IS+x6e1
Wm3FolbLBLcTXFnwinqt9qHK2cJ3FDxHjU5UuSup1a7Na7UugmME39O9M9Rm
e8F79Owo4VuXtdoPured2kwR/Fz3Llb9boJf1N2mj+Ajan+18B5qP0J9D1WZ
r2cuU9lZ5ULdS9TmcuGL1c8zgherdFR5X8+fqfs9BReozRi+Xf18oOuzhO8g
2FDPPCf8QuGPlu5ze8GyqtV2Ed5IcE+VlfXe3QU/Vrsr1b6v4F4qo4VvpD4G
Cr9O+GbCb8n9rv0Yr/oYl7ivXRN/50W695nujRfsL3iwyrXCO+i5j5gD5kRw
J8E+ie+tyNgEz1fbv0rfe0jwS11fovrdBe/WGEcK30r1/+r6FuFHCh6v775T
+Oe6f7juzRD+gfCfVD9L+MfCB6t+pvAPhd+ksfZUWVXlaNXfo/pvVX+s8PnC
vxN+sZ5dSfd3Ffxa77hM9XsKrhFqtbnCv1SbLiq7qc3mgv9Tu/tUv0z4V2p3
qfA9BLfVOLZQGa7rm9X/QMEbWHONd2PVnyf4gtodqvrNBTdXXSuVI3X9oq4P
F9xSsIPqWqoM0fVLuj5CsKPg46rbUqWNyqX6lhNUnhD+nfrtJHiV4Gtqd5za
dxG8vTDNbKFveZ25E95VcJ7qzxfeWfVv6PoEaFhwVmHa3lz1U9XXBcJ3Vv13
KtcLP0TwH93rrXc9Ijgpdz/PCd6t6+6JabLQ/PQQvpLg84IjE++fuSpjE9+7
t/QeeUd9bqrrzirH6LqmMf0rfJTKWYnvUf+b2m+W+Jsv1PuOVd2Tgrfq+hTh
mwqO0vXJwp8S/FT9jhPeT/C20mvSXrCd+l8c+7+r9Bi7CLbX9dmJ565z3f1f
oH5y0cDJglsFr+25cX0rXZ+m+m0FGwkuUt1Feq6P+t9G5QC16y7YVWV/4eer
dFU5PY6Zse8qeE1uOn+W+db9baATXX+ie1cJ7i24Yup5hL9clnu8TwuurvX6
XHV/CF9BbZ5OTAcnat4b6bqP4FaCnVS+Uv3Puu6mtufom7sL3091L2vsX6m/
AYlpGtreRm3OVpu3VdeftVL9n/qOOYInCn4b+QN8olL7PdTmafWT6j2vJL5u
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
TMPU8Sdjhd/AWguO1P0ys151ouAJmc9b7hLchnNI4Q0y36P+j9RjZrwzBTdX
uUx1v6ceP2P/K/U8Moe3CnZUuYL9INguM+3yvT+l/uZx8XuIB6Ov61Lbchem
Pi+E96AbMvfwp1GpzzL/o7vxkSYvSn2PenjMyMhn1o8+T3yfk1PHctEP6zou
0g68bWzEWZsx/+1Bwcvj97AXL4v4xNTnzWXcb+w7Ytrg+ben3q/wWngle5Tx
T0rtg2Yck+M38NyN8Vnm5dq4r1nXKZGf7BX1H/Sgm1PH2HGN7Lo17l/47ozI
T4AzI876TYzfyTzNinN1VWq+w15hj94S9yn74PvUe+HSyN/gc+eqvlFmObxz
aV8HsZz4K/Dz7FbYF45+jG78aGr5Aa/BL44uix67gDNmwY0EH+EcVHg7wYfR
e+Dfgj/nPn87VvDB3OeW+LQv0jt2xU9QOa5le+G/w3/q9s1uLHh8aV8ZPrOz
Cp+3Tiyt38JHOgruXVluIk9XwreKvl/3WTj9/I1dU9gPhn/mN3xqwo8VfK1w
fCU+q2Mqy5x9Cp9xoIcu5eyltL9ld94pfCPspsIxAJwpr8BZZWm/3P6MqbQv
fw/hKxeOCWhYmPdij/9S+EwdX/Qflc/18Wn/GfUodChsSc742OvNBWfhn9F6
Na18hgg/AD9EdQOI0dD1yMjD4eU/Cw5U/TxoW7BN5j2E34A6eM5tKllmPnae
YJ7ZzrxQcNXMOtCNghurnM8+QC5m/p77415gT+yuZ65IrCPeo7noLbiO4HyV
ndG56vYd4Vefm/ssnpilJnXbNZxNzEf/THyGiI9m7cT+aHzRs9VuG8E16pYP
10T6H1J4LfB/XlOYDgvN8d1101LzuuOjOI9oKXhf3fTWQvBelV3QJwUPT3xG
30PXgwuvIz5Y7M2rI9/ANr8q7q/+cf+z99eCF2aW8c0ER2eWi2sKXp5ZD+A8
Dl7GGdwmqpuamQ82F7wyswxuCt/NLL+bCF6aWZ9YT/Cd1PpZS2JuMsv/dZA5
mfWSdYmtyay3bSm4RWYe115wWmbe2gK5l1mH20xwRma+yVnYGanP9e7CPlL9
HoIPQRd8K/Mt2ErldOGV4BmZ9eKVqMtsk/yrclZm+ZcKjsgsI28X7Jx57jYU
nJI5NrxhZh4E/3lMcIfMfK7ILMOQX/XMdAlNbiR4Xea475WD6Y2YQPjriMhj
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
          "]], Polygon3DBox[CompressedData["
1:eJxFnAf4l9P7x5/P5xnnfIhQRvYIISOSkZkipIyMjBZKpWFvskJS9qiQpGSv
lJHKli0rZITK3j+b//vlfa7rf13f+/qc+znnPPOc+7zv932f7zp9h+4/pJ5l
2bQiy/SXTcyzbFPJBTp4oaQRsmwdHa+pcr1Gli0lfV3pdektpf9ZZtn3tSwb
IJmu8lE6/qXK7dT3B5WXUfsN1L5SeX21P1m/h6j+Cx3L1P4U6T2kf8k1pK+t
9v1U3lrHt1L7DlHnUf0/qntR+gzdW1vJKJ3/RsnpKi8n2UTlXDK6yrID1P8Z
9d9C7S+Tvr/0p6VvLn2m2u4mmai2t0rO1fGeOv83arOUrrGa2rfU8fuk/6m6
A6Q3V7m9ft9T/6PVd7HqL1aflyXb6v4+1+/v6jtX9bP0u6r0uyTvqfyO2u8u
uUd9Zkp6qPylfi9X/VTJQK6h3891jf+pfLfOt77anM41VB6kY91Vv0j1v6p8
hO5jbZVvU7mVrveN2v0ieUhtrpXcoz69c597ZZUviT7XjdIvUPkrlb+T3CH9
CklPnaeLfhfqnF+rvEBt9pY+Sff+gM7/k9oenvuZ7pY01fdppbZRbTdU/TvS
v5O+k9o/LP1rtf+x7rZXSlZTu134/io/oPIHOtcykuXVZo7kSJU/5zuq/hnJ
sjrfhmof1HYDne9C3c8Jqi9Ud77qYvDzM1jXVf1AvY/Npd4nfVPpI9T+RLVv
ovZXqW0f3dcKKh8reUTll3W9/SVP8s4kD6q8k+Q6la+X9FebFdV2qORxlR9S
XTvJaNXdIOmuY1F1gyWPqvyGrn+Drr+Zylfr+rep7eaSi/h+kvdUf4vqV9Hv
66rfWO0+kd5f/adxLR27R/pQ3f+pKn/POFfduZKddWyw+h3Fu9Px6ao/Qc+3
n857mI51Vfk4yb7S20uOUXkvtauprp/kIZWHqn9bnf8hnWsz9d9fx4LqjpY8
yPiU7Kz6I6W/q/IzuvfVJcfofHdKgspDJBuq/jfJj3qn5+j3OfrpfJ2lT1b/
Y3T+/aX/T/pmqn9T+lPSe+v3RtV31rFvVV6s+7lX+ub6fUf1W+m3i67zBOZA
53xeMlxtt5aMVnkL1e+l+kOlb6byPzyn7mdj5oTkXj3zZtJH6PhlKu+uPn/q
XFtK/wlbpj6dmXs6doau31TyhvqtqGNTCl9/n/Q+t1R5ruQKtf1edfvp/n7R
87RW3TzpT0r/UeefJ33dur/p1pJuKr+kPsupbpxkm5q/4Q8qfyy5SOUXJN+p
fJ/uscr9Ljup3ETnX59n1/nf1vmP1bFOOl9LHRuk8s/q85HaHid5QuX3dWwH
la9Rearar69+XdW2qY49pvJK2Ie63zFj6kxsmuo+kfyq8iaq76j6lVT/i+7j
XB0bpPK22APst44tqnv8zZW8rvbXq7616q7S9Q6Rvqr0NaRfIv1W6X2kv6Jr
bS/9AT3PTup3vervkP5w6bnIGvGXyvN1/x1VvlHlu5kP6r+jrvevzrGsypeX
/rbPMl5UvlJymup2kz5e5cHqv4fab8dcVfkJ3e/akmOlT5J8oGMdsM1qe5fO
X1NdzL02sC6tqWtshE3TOefonudLn6Dyivp9jfevfsvW/M5/Ufk9xpTKN6l8
D/a29L1hr9qp/13qN1j931K5g+qH6loNSalrVIzB4PHMuN5F9c2kb6H2y6j9
RtJnq+2akoFqO1nyPWMdG1mzjX5K5x+p9l+qfTe1f1r6pdK/kr6v9OHSO0k/
WOe/Tfp6jMm6r1+ozVIVC6uPtVT5ED3Pqio3VflVtd9Hv8uoSQvGqfSVdH9b
S19BfTeR/o/qm0n/hjVA+sqqbye9mepbS18x2L4sL31j6Ufp/G10/qukvyl9
dfVfP717sMHf0lfg/nW+Fqr/Qv1PVt0cXb+t9C+lnyL9SelbS/9K+qm8B+nt
pD+p/peo/xeMe+lnS99N+gGqv7XhMcHY2EDH35J+ptrtUPccx74w3lqovJ76
bKRyD8lqKq+lupFp/jE/bkrz8Rzmi+oPVP0k6StIX13166f5dDTrm/T9sI0q
91P/baV345vr3pfn/NiKNJ7elhxf8xhkLGZqs6J+fsDu6vz/JrzxnfTVpC9W
+xlpbT8YfKD6Iap/W+XdVF9JX1rnapfmy3e6/izVn636C1QfVN9E9bsme7S/
6ldI9nQflWvBtgBbyfc6p7Stv1fyAWNe/Yeq/h2dr6PqP9GxB1V3teSN0kJ5
muTTtJ5MUXmM5DWVv9U1Hk+29zz1XzMaF2wq/Tnwmdq0kn6f5EOVX8fOqHw/
c1DlQtdv6H43SvezDuu99BclO6k8R3Kxzr9E59tH5yuD7dOf2AXpe1T/veJs
Lf3Ok/6Drj9H+nC1HyG9ruNF3TaI8YDdwH7UpNek19V55WQr12B9Vv/Z0s9R
/wul56pfBWzGPOb66rOU+g5gjHP/qm+h8u+qX6sBEPK5wY976RwHRs9P5umN
4Fv9nqVDn6hub+m/q/8IbLHOtXvD85b5+76O/aRjzdVuO7X/SHKXyitih1X+
WHJ34ffM+x5bs707OHr8L5fm//H63Ya5oHNdIX214Pm0RsILd5ReS9ZRn5XV
9sjK+G89Hb+s4fXpsMxjnLF+FPZV+vo6Ppr5p+sdrrrTdP2OKv9ReqyuqWPN
1bZ35fVvarIfwyrbn/3UbqL04yrbmz2l3yR9nn6vUf/pYGaVe/HdVd5D8o3K
B1X+HhMSfuyXGyMzf16VbBV9L0+r7wuqv0j6Kao/kLVOz/6MpKvKkxnnrK+V
fZl96a9jLQvj5hvAf4V9gh0q+0T4CqsWxvbXM4Z535W//y0JL9/EOJAMYo2V
9KnsH92R7G3Pyv7W5LQ+9K2Mh+9M9vZI3UMznfskyWywbTD+bZL8gSOi1/+V
0noGnjw1sw3AFnyNna15jDJWWc8GZrYh2JJ7db7tVb9A59tD/afr2JmMJ+l7
Sf9N9ReCZ9Svk/Q1pPcFbyV/a/VgPNAm+VtrSj9K+lbS23A/0s9S/2fASdLX
kn606tuqfkvpzRvGaq2S/R6m48vp3g6q2R+7v7QvMCXh1V7p3TfR7ytqf5p+
d5LeQ3WTpa8arK+S/IPfStuSNXTOZmo7qPJ63EXHb1b93GB7uwQsCn5R/RnM
L/XfU/o06adL/1B6Z9ar0mtBxP9U3bN6/83wm7ElaT0GyzVP6+9Zqj+ibhvX
JBpHg6e3klyq8gDJSioPk8xUub/Gyp91Y9YF4EBwNuuX5K/C75H3ubnkwtJz
iLV4q8xza5au8aHO8ZTa3xyNQcGip2S2r0/gP6h+Fj6iygty+2j4ZvhI1M3P
jblowxgFG7DmM3Z3kL6j9OOlT+FdRtsmbNTpepfvqu9BkmfB+KzDuX1ifOFH
JY/gx2Hr1P9U9d8k+lm/lpyh/nur7euSDmo7A1yrtiuzpqv9ANamaP9gi+RP
LOFd5W77oKSDym9LHq/b539dMlX6Zfo9RDJC5Wa5/YWt8PF07n+x5YwJXf8y
leexXkr6SUZJf0O/PSRHS0azbuI/gEcl6+geVtF7fUv9jwteg1iLsAF76x6f
U3kdyWC1vVvyruR26Zfqt1fd73o/yey63/lFKnfL/e7w8SZVxtxg7faSRao7
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
          "]], Polygon3DBox[CompressedData["
1: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
/ZT4n8Y13nFvjWgyP0m2e5z3aYLxCmB/Alq3CpQ=
          "]], 
         Polygon3DBox[{{1689, 1688, 2301, 1386, 1387, 2302}, {1687, 1686, 
          2310, 1397, 1398, 2311}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{443, 1, 421, 243, 1602, 15, 470, 1615, 29, 1627, 43, 1639, 
       57, 1653, 71, 1667, 85, 1682, 1683, 99, 1704, 113, 1713, 127, 1723, 
       141, 1735, 155, 1749, 169, 2095, 473, 183, 2009, 351, 464, 197, 441, 
       350, 1153, 198, 1154, 199, 1155, 200, 1156, 201, 1157, 202, 1158, 203, 
       1594, 610, 905}], Line3DBox[{1000, 2, 1346, 241, 443}], 
      Line3DBox[{1002, 3, 1000}], Line3DBox[{1004, 4, 1002}], 
      Line3DBox[{1006, 5, 1004}], Line3DBox[{1008, 6, 1006}], 
      Line3DBox[{1010, 7, 1008}], Line3DBox[{1012, 8, 1600, 716, 996}], 
      Line3DBox[{1014, 9, 1012}], Line3DBox[{1016, 10, 1014}], 
      Line3DBox[{1018, 11, 1016}], Line3DBox[{1020, 12, 1018}], 
      Line3DBox[{1021, 13, 1020}], Line3DBox[{444, 14, 422, 246, 1021}], 
      Line3DBox[{471, 28, 1906, 247, 444}], Line3DBox[{1637, 42, 2094, 471}], 
      Line3DBox[{1651, 56, 1637}], Line3DBox[{1665, 70, 1651}], 
      Line3DBox[{1679, 84, 1665}], Line3DBox[{1701, 98, 1679}], 
      Line3DBox[{1711, 112, 1702, 1701}], Line3DBox[{1721, 126, 1711}], 
      Line3DBox[{1733, 140, 1721}], Line3DBox[{1747, 154, 1733}], 
      Line3DBox[{1761, 168, 1747}], Line3DBox[{1774, 182, 1761}], 
      Line3DBox[{1159, 204, 1160, 205, 1161, 206, 1162, 207, 1163, 208, 1164, 
       209, 1455, 353, 465, 210, 442, 352, 1787, 196, 468, 1774}], 
      Line3DBox[{790, 598, 1010}], Line3DBox[{1159, 731}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1602, 2064, 2065, 1903, 1165, 1601, 1865, 1904, 2459, 1788, 
       1603, 2329, 1789, 1604, 2330, 1790, 1605, 2331, 1791, 1606, 2332, 1792,
        1607, 2515, 2146, 2147, 2200, 2203, 708, 2240}], 
      Line3DBox[{1615, 1867, 1908, 2242, 2440, 1614, 1868, 1177, 1616, 2338, 
       1800, 1617, 2339, 1801, 1618, 2340, 1802, 1619, 2522, 2212, 1803, 2213,
        2523, 1909, 2121, 550, 680, 962}], 
      Line3DBox[{1627, 1871, 1912, 2244, 2443, 1626, 1872, 2245, 2444, 1628, 
       1188, 1629, 2344, 1810, 1630, 2345, 1811, 1631, 2510, 2134, 1812, 2135,
        2511, 2136, 1914, 2096, 2112, 2149, 2194, 2201, 2193, 2228}], 
      Line3DBox[{1637, 1817, 1918, 1874, 2446, 1636, 1816, 2010, 1873, 2445, 
       1635, 1815, 2348, 1634, 1814, 2347, 1633, 1813, 2346, 1632, 2509, 2246,
        2131, 2132, 2323, 2461, 2133, 2091, 1915, 2113, 2218}], 
      Line3DBox[{1639, 1875, 1913, 1876, 2447, 1638, 1877, 1878, 2448, 1640, 
       2247, 2387, 1641, 1199, 1642, 2349, 1818, 1643, 2463, 1920, 1921, 1644,
        2464, 1922, 2097, 1923, 2181, 2192, 2231}], 
      Line3DBox[{1651, 1880, 1919, 1879, 2449, 1650, 1917, 2011, 1916, 2462, 
       1649, 1929, 1928, 2466, 1648, 1819, 2350, 1647, 2388, 2248, 1646, 2465,
        1927, 1926, 1645, 2487, 1925, 2092, 1924, 2214}], 
      Line3DBox[{1653, 2249, 2389, 1652, 2250, 2390, 1654, 2251, 2391, 1655, 
       2252, 2392, 1656, 1209, 1657, 2470, 1936, 1937, 1658, 2471, 1938, 2049,
        1939, 2182, 2070, 2187, 2186, 2232}], 
      Line3DBox[{1665, 1935, 2014, 1934, 2469, 1664, 1933, 2013, 1932, 2468, 
       1663, 1931, 2012, 1930, 2467, 1662, 1946, 2394, 2297, 1661, 2295, 2393,
        1944, 1660, 2472, 1943, 1942, 1659, 2488, 1941, 2050, 1940, 2071, 
       2222}], Line3DBox[{1667, 2253, 2395, 1666, 2254, 2396, 1668, 2255, 
       2397, 1669, 2256, 2398, 1670, 2300, 2399, 1949, 1671, 1384, 1950, 1672,
        2507, 2114, 2115, 2015, 2084, 2170, 2083, 2188, 2233}], 
      Line3DBox[{1679, 1821, 2352, 1678, 1820, 2351, 1677, 1948, 2018, 2490, 
       2299, 1676, 1947, 2017, 2489, 2298, 1675, 2296, 2401, 2016, 1945, 1674,
        2305, 2400, 1952, 1673, 2493, 2074, 2075, 2051, 2073, 2072, 2219}], 
      Line3DBox[{1683, 2353, 1822, 1681, 2354, 1823, 1685, 2355, 1824, 1687, 
       2311, 2356, 2025, 1825, 1689, 2302, 2357, 2026, 1826, 1957, 2304, 2358,
        2027, 2098, 1827, 2137, 2322, 2505, 2099, 2028, 2116, 2172, 2176, 
       2229}], Line3DBox[{1701, 1834, 2362, 1699, 2409, 2261, 1697, 2408, 
       2260, 1695, 1955, 2024, 2494, 2308, 1694, 2307, 2407, 2023, 1953, 1693,
        2306, 2406, 2022, 2090, 2089, 1692, 2319, 2503, 2078, 2052, 2077, 
       2076, 2220}], 
      Line3DBox[{1704, 2262, 2410, 1703, 2364, 1836, 1705, 2365, 1837, 1706, 
       2312, 2366, 2033, 1838, 1961, 2313, 2367, 2034, 1839, 1962, 2314, 2368,
        2035, 2103, 1840, 2104, 2506, 2079, 2080, 2053, 2060, 2173, 2177, 
       2198, 2178, 2230}], 
      Line3DBox[{1711, 1846, 2372, 1710, 1845, 2371, 1709, 1844, 2370, 1708, 
       1843, 2369, 2315, 1707, 1842, 2499, 2038, 1960, 1965, 1841, 2498, 2037,
        2109, 2108, 2139, 1234, 2107, 2036, 2106, 2105, 2227}], 
      Line3DBox[{1713, 2263, 2411, 1712, 2264, 2412, 1714, 1968, 2039, 2500, 
       1847, 1715, 2316, 2373, 2040, 1848, 1716, 2317, 2374, 2041, 1849, 1970,
        2474, 1963, 1850, 2042, 2501, 2081, 1972, 2054, 2061, 2179, 2062, 
       2199, 2236}], 
      Line3DBox[{1721, 1855, 2379, 1720, 1854, 2378, 1719, 1853, 2377, 1718, 
       1852, 2376, 1717, 1851, 2375, 1967, 1975, 1244, 1966, 1973, 2508, 2119,
        2118, 2120, 1964, 2110, 2215}], 
      Line3DBox[{1723, 1976, 1977, 2265, 2477, 1722, 1979, 2043, 2266, 2478, 
       1724, 1969, 2045, 2267, 2473, 1725, 2318, 2380, 1856, 1726, 2475, 1971,
        1857, 1727, 2481, 1984, 1858, 2047, 2502, 1985, 2055, 2063, 2180, 
       2185, 2184, 2221}], 
      Line3DBox[{1733, 1862, 2384, 1732, 1861, 2383, 1731, 1860, 2382, 1730, 
       1859, 2381, 1729, 1255, 1728, 2482, 2269, 1986, 2048, 2476, 2268, 2057,
        1974, 2082, 2216}], 
      Line3DBox[{1735, 1881, 1978, 1882, 2450, 1734, 1980, 2044, 1981, 2479, 
       1736, 1982, 2046, 1983, 2480, 1737, 2270, 2413, 1738, 2385, 1863, 1739,
        2483, 1989, 1990, 1740, 2320, 2484, 1991, 2056, 1992, 2150, 2191, 
       2202, 2237}], 
      Line3DBox[{1747, 1886, 1885, 2452, 1746, 1884, 1883, 2451, 1745, 1864, 
       2386, 1744, 1268, 1743, 2414, 2271, 1742, 2485, 1996, 1995, 1741, 2321,
        2504, 1994, 2058, 1993, 2140, 2217}], 
      Line3DBox[{1749, 1887, 1987, 1888, 2453, 1748, 1889, 1988, 1890, 2454, 
       1750, 2272, 2415, 1751, 2273, 2416, 1752, 2274, 2417, 1753, 2512, 2141,
        2142, 1754, 2513, 2143, 2000, 2093, 2001, 2183, 2123, 2196, 2195, 
       2234}], Line3DBox[{1761, 1894, 1997, 1893, 2456, 1760, 1892, 1891, 
       2455, 1759, 1279, 1758, 2419, 2276, 1757, 2418, 2275, 1756, 2514, 2145,
        2153, 2144, 2154, 1755, 1565, 2003, 2111, 2002, 2124, 2225}], 
      Line3DBox[{1774, 1900, 2004, 1899, 2458, 1773, 1898, 1336, 1772, 2428, 
       2282, 1771, 2427, 2281, 1770, 2426, 2280, 1769, 2326, 2425, 2164, 2166,
        2165, 1768, 2520, 2162, 2163, 2126, 2128, 2127, 2226}], 
      Line3DBox[{1787, 2068, 2069, 2008, 1344, 1786, 1902, 2007, 2486, 2294, 
       1785, 2438, 2289, 1784, 2437, 2288, 1783, 2436, 2287, 1782, 2327, 2435,
        2167, 2169, 2168, 1781, 2328, 2521, 2161, 2152, 2204, 2209, 2211, 
       2210, 2241}], 
      Line3DBox[{1906, 1799, 2059, 1907, 1866, 2439, 1613, 1798, 1905, 2337, 
       2290, 1612, 1797, 2336, 1611, 1796, 2335, 1610, 1795, 2334, 1609, 1794,
        2333, 1608, 1793, 2516, 2148, 2208, 2207, 2239}], 
      Line3DBox[{2009, 2066, 2067, 2005, 2429, 2292, 1775, 1901, 2006, 2430, 
       2293, 1776, 2283, 2431, 1777, 2284, 2432, 1778, 2285, 2433, 1779, 2286,
        2434, 1780, 2324, 2517, 2151, 2157, 2175, 2206, 2205, 2238}], 
      Line3DBox[{2094, 1809, 1911, 1870, 2442, 1625, 1808, 1910, 1869, 2441, 
       1624, 1807, 2343, 1623, 1806, 2342, 1622, 1805, 2341, 1621, 1804, 2518,
        2156, 2155, 1620, 2460, 2243, 2122, 551, 895}], 
      Line3DBox[{2095, 1895, 1998, 1896, 2457, 1762, 1897, 1999, 2420, 2291, 
       1763, 2277, 2421, 1764, 2278, 2422, 1765, 2279, 2423, 1766, 2325, 2424,
        2158, 1767, 2519, 2159, 2160, 2125, 2130, 2174, 2129, 2197, 2235}], 
      Line3DBox[{2223, 2189, 2190, 2171, 2088, 2021, 2087, 1513, 1691, 2085, 
       2086, 2020, 2492, 2303, 1690, 1951, 2019, 2491, 2301, 1688, 1956, 2405,
        2310, 1686, 2404, 2259, 1684, 2403, 2258, 1680, 2402, 2257, 1682}], 
      Line3DBox[{2224, 2117, 2029, 2100, 2495, 1828, 2138, 2101, 2102, 2030, 
       2496, 1829, 1958, 1954, 2031, 2497, 1830, 1959, 2309, 2359, 2032, 1831,
        1696, 2360, 1832, 1698, 2361, 1833, 1700, 2363, 1835, 1702}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1000, 1302, 1166, 2459, 1001, 1308, 1177, 1023, 1314, 2444, 
       1187, 1034, 1320, 2448, 1197, 1045, 2390, 1206, 1055, 2396, 1214, 1066,
        2403, 1223, 2354, 1076, 1232, 2364, 1085, 2412, 1241, 1095, 1438, 
       2478, 1251, 1106, 1439, 2479, 1261, 1119, 1329, 2454, 1271, 1131, 2420,
        1335, 1281, 1143, 2430, 1341, 1291, 1154}], 
      Line3DBox[{1002, 1167, 2329, 1003, 1178, 2338, 1024, 1188, 1035, 2387, 
       1198, 1046, 2391, 1207, 1056, 2397, 1215, 1067, 2404, 1224, 2355, 1077,
        1233, 2365, 1086, 1428, 1242, 2500, 1096, 1429, 2473, 1252, 1107, 
       1440, 2480, 1262, 1120, 2415, 1272, 1132, 2421, 1282, 1144, 2431, 1292,
        1155}], 
      Line3DBox[{1004, 1168, 2330, 1005, 1179, 2339, 1025, 1189, 2344, 1036, 
       1199, 1047, 2392, 1208, 1057, 2398, 1216, 1068, 2405, 1397, 1398, 2356,
        1473, 1399, 1400, 2366, 1478, 1416, 1417, 2373, 1481, 1430, 1431, 
       2380, 1108, 2413, 1263, 1121, 2416, 1273, 1133, 2422, 1283, 1145, 2432,
        1293, 1156}], 
      Line3DBox[{1006, 1169, 2331, 1007, 1180, 2340, 1026, 1190, 2345, 1037, 
       1200, 2349, 1048, 1209, 1058, 2399, 1382, 1383, 1468, 2491, 1386, 1387,
        2357, 1474, 1402, 1415, 1403, 2367, 1479, 1419, 1420, 2374, 1482, 
       1433, 2475, 1434, 1109, 1264, 2385, 1122, 2417, 1274, 1134, 2423, 1284,
        1146, 2433, 1294, 1157}], 
      Line3DBox[{1008, 1170, 2332, 1009, 1595, 2522, 1596, 1027, 1548, 2510, 
       1549, 1038, 1356, 2463, 1357, 1049, 1369, 2470, 1370, 1059, 1384, 1467,
        1385, 1469, 2492, 1389, 1401, 1390, 2358, 1475, 1405, 1418, 1406, 
       2368, 1480, 1422, 1432, 2474, 1423, 1097, 1441, 2481, 1442, 1110, 1445,
        2483, 1446, 1123, 1557, 2512, 1558, 1135, 2424, 1580, 1581, 1147, 
       2434, 1295, 1158}], Line3DBox[CompressedData["
1:eJwVzzsvg2EcxuE/TYXFacFEF6dBzRJMVoOVySz1BXwF30FikDQWibCZkDgE
1UglTZ01oRJJnSJoXB2u/N7nfvL2TVPzizOZhoiYo5qI6G2KyLdE9GmKCSYZ
p2ifSkY0eh5imFbaOXXXpm/up1lx3tBLCpwxy5p9S3/5YZs/juw1XeCDDr/1
rjs8kXB+1iW+6HT+1APv7WqFpO1Fl7nim0P3Jc1xzSs39e9xx577Wz3nngeO
2bevap5HymzaTur/gSrdvpez9WgXWVuzpinYR3WEdfugXtj6dYAx/gGzMTtb

       "]], 
      Line3DBox[{1012, 1172, 2333, 1013, 1579, 1182, 2518, 1029, 1545, 2509, 
       1192, 1040, 1360, 2465, 1202, 1051, 1373, 2472, 1211, 1061, 2400, 1391,
        1392, 1218, 1070, 2406, 1393, 1408, 1226, 2496, 1079, 1409, 1425, 
       1235, 2498, 1088, 1426, 1436, 1244, 1099, 1444, 2482, 1254, 1112, 1448,
        2485, 1266, 1125, 1562, 2514, 1276, 1137, 2425, 1585, 1286, 1149, 
       2435, 1588, 1297, 1160}], 
      Line3DBox[{1014, 1173, 2334, 1015, 1183, 2341, 1030, 1193, 2346, 1041, 
       2388, 1203, 1052, 2393, 1374, 1212, 1062, 2401, 1375, 1219, 1071, 2407,
        1394, 1410, 1227, 2497, 1080, 1412, 1236, 2499, 1089, 1427, 1245, 
       2375, 1100, 1255, 1113, 2414, 1267, 1126, 2418, 1277, 1138, 2426, 1287,
        1150, 2436, 1298, 1161}], 
      Line3DBox[{1016, 1174, 2335, 1017, 1184, 2342, 1031, 1194, 2347, 1042, 
       1204, 2350, 1053, 2394, 1376, 1377, 1465, 2489, 1378, 1379, 1472, 2494,
        1395, 1411, 1396, 2359, 1477, 1413, 1414, 2369, 1090, 1246, 2376, 
       1101, 1256, 2381, 1114, 1268, 1127, 2419, 1278, 1139, 2427, 1288, 1151,
        2437, 1299, 1162}], 
      Line3DBox[{1018, 1175, 2336, 1019, 1185, 2343, 1032, 1195, 2348, 1043, 
       1361, 2466, 1362, 1459, 1363, 2467, 1364, 1466, 2490, 1380, 1381, 1072,
        2408, 1228, 2360, 1081, 1237, 2370, 1091, 1247, 2377, 1102, 1257, 
       2382, 1115, 1269, 2386, 1128, 1279, 1140, 2428, 1289, 1152, 2438, 1300,
        1163}], 
      Line3DBox[{1020, 1303, 1304, 2337, 1347, 1309, 2441, 1310, 1351, 1315, 
       2445, 1316, 1456, 1353, 2462, 1354, 1460, 1365, 2468, 1366, 1063, 1220,
        2351, 1073, 2409, 1229, 2361, 1082, 1238, 2371, 1092, 1248, 2378, 
       1103, 1258, 2383, 1116, 1324, 2451, 1325, 1129, 1330, 2455, 1331, 1141,
        1336, 1337, 1453, 2486, 1342, 1343, 1164}], 
      Line3DBox[{1021, 1305, 2439, 1306, 1348, 1311, 2442, 1312, 1352, 1317, 
       2446, 1318, 1355, 1321, 2449, 1322, 1461, 1367, 2469, 1368, 1064, 1221,
        2352, 1074, 1230, 2362, 2363, 1083, 1239, 2372, 1093, 1249, 2379, 
       1104, 1259, 2384, 1117, 1326, 2452, 1327, 1449, 1332, 2456, 1333, 1451,
        1338, 2458, 1339, 1454, 1344, 1345, 1455}], 
      Line3DBox[{1153, 1290, 1340, 2429, 1142, 1280, 2457, 1334, 1130, 1270, 
       2453, 1328, 1118, 1260, 2450, 1323, 1105, 1250, 2477, 1437, 1094, 1240,
        2411, 1084, 1231, 2410, 1075, 2353, 1222, 2402, 1065, 1213, 2395, 
       1054, 1205, 2389, 1044, 1196, 2447, 1319, 1033, 1186, 2443, 1313, 1022,
        1176, 2440, 1307, 999, 1165, 1301, 1346}], Line3DBox[CompressedData["
1:eJwVzD8vg2EUhvHTeFvBQKJT/UlQo4WodmIyWCQWC4uY8QEkRqvESGdLFxYi
kcaEhEgEUbUKC2ljkRr4Ga7c51z3c56hlfWFtVRELGM7iehJR0xmIqZQQK0j
YpNP8xP2cZTwxBflhu4HfeYB9GPV3sSo+dbdpbfv8g2L/Csq3I095U1gjqvj
mv/l99BEu64hp3V3yNpb9h18ImP/kAVd1e2V7OW+uS28ILHX5YV+TH+OQe6R
q+IZZ7qazOtO8WA++YdfkjnuEPfmIxzz87KbO0CX/8pcp8xjBAlfxj4/6+1X
m3vzLjesn8EfnRAzTA==
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJxc+Hk01e/3Po5Lo9CgIlFpQjI1qUy7FJmSQgqF0kRFporIWEkRUkiJaFSS
FCq3TBkyz0M4B4djrKRkqN+9H8/Xe63f93P+OWtd617X3vu6972Hx7LD9nuP
8vLw8DTx8fBMpv+7xv+9MVUNzaT/KaaqcZk+f/7R3yCYrGl/uqAuKPPOuS3f
NdVayLwLDyu71vfBtSfRczwO+mea9t/sfPudQ/b5PVpkacABVh2vk6qYe6ZM
Rvfqe9t7SOAIT/73nWyID5lnOeh5OrMokf3wSFIvidW+2LJNoA2OrrJ/yRe/
J/P+0danCzb3kZLBxXefyrWAtqnNvSvrrNR/96jrW62meHnAutM2LXDFRnAf
xTPVTcwYXHrDSgYfnls9aWb8HvVLQbkMT5uRD8Ozp3WJF7Wrnljxg7GbfcaK
scuzUv869VNd8n9+Bv/Pz4XS4aI0LnUB7Q9MXNJ9F5i4bKRmJVMd1KtFQhgd
+McDGR0SjyWkUd3UBQ3Yr///dQu29nQWfFxOAg0eTD8gFZtZyL9Vq6ZzABLO
RPA8vP2FzBFj14lzmsn50DSNiPhe2Ox/e3RoYy45FOv1W9OKQ65ssnWP2c2B
4/Pk0oy/pZMYE6E/C7hckiyfW7b2Ehveif57XGSdSIaHzfbkuvaS6zYWk6uN
2oB3Um275qQQUrJ1fVq+YB+JvNastCavBX54SoS/MoqBZ5cle6eP9xKj73aG
VqMt0LNyaBbFiZqxFYNPzVnO4Ff0HspoTQqBhsBZDI/pTpVNyDMyIl5B7cKk
FwcZu3vM5jB2F31NK6V+gmtY/Aj6We7ayvi558Qo78+NudBhIsLE5aFkxsQ1
389yKtUB7ngP1aIOv1ofMzqMPep0orpBgfEz0RGZ2Ex2jDGjWzVvmN6P3K9k
wM7Nedmie5nfGw/erjXqg37v91J2zo3kwQGVdxsONJDr8XFyeao9YDpty9Gl
aVXk5oXi5NTkDjIkJdz9y4gDRwuMXJfIF5HmpACH/sJuksLPWyQm2Q63JRQS
LSQ/kjWTz21K+dBD9m6uidZaz4Kq4Hk/ueGxhP1vMOKjVy953iaaqbq3DW6L
eG8xW/sKHDnljjVHe4mQ1XWR/BNtcOdV2fCBta9I9UstJ8RX9VYyeJ5erW5P
eCzsGJ8ZiTxT+oI+Ik+aqEo9tQt8Z0QYu9EbgbH7dWx2APUThk7m2KOf8uwT
hejnqxeaZ2hcUG916hXGNXuuRRfG1XoydA3VAVqcVzA65D56JYs6BE0/q0t1
g7KSgcB9IvcyD898xuhmMzCXdVS7nbT1dy4ezb2d+fjr3PqEAC68ubD54L98
FmlfI9cfFlpNhD6bNP4K6Ib9tjVflx5qJk+a1rdvGGWRBu/NASpmHHiywNnc
sKWK7Ju6I9w9jUPkhZyEyrd0QM6XJHudmnyS8GHGGV09Ltks1P7PNosNK9UP
C4r2PycGiQut+yx7SNOQ5BUHPja07XxS/CMhHfTc01ZLbughymHfbnIWsMGr
O/cgxUlCZ5MM4rNT00MQv7p+qSflgQ2mn62Qp9948DLyrEpdd4PaBZfnw6fQ
brOkCGO3yb7jBPUTkrR8QtHPc6PqjJ8j60900bhAZHEaC+Ny2m91BeM6PGxr
SXWAT5Ez+1CH0wpj9ajDRV6fNqobnCtZdml+9u3MiwGejG6vewPljHg4JMC6
bOt8/5uZj3sf74hQ7YKfJHR8SXsHaRuwM7iYWUpkytPfCv7lAG8BeZNbyiKi
3VumrU1tJn94j9zfaM2BrZ87b11NaiTt8iuWaJ5oJwVaw1q/nnZC4dLE5Uai
5aTO63Dr6EsOUQzj1OkId4L/B/6+y9JvyIdT0yx3bOomvul/yhRyO0BKpsdY
63Q2hP2xk333vYvMaFE4LZXeATzdd6dRnGiqhckj/uOPgD3iPduKda5Iv4EX
+1sPIc9i7felyNNov1CF2oVlp2Z/RbtLrT7WoF3pn/MeUT/BQ8BHDP20bJ26
A/204VmeQeOC3TkHeDAui3fjdzGub9P7/lIdoOxXox7qsM+j9A3qwL+8XZbq
Biem3Z/i5Xsz88/7nZqoGy2OO3TudJE+s2k6F7X9M6Vnv1g9cr8TiNb3Z0n1
HFK0127DTYNc8uTRXPvqyk5IOuoophLYQTbFFKo1/asiludPRPse58DGy4dH
YnzayMyZYtFFPF9Ja3pQm8D2Lgjn9+cu0aghgR4fJN2F2aTz+NT7H1Z3g5vb
ll8z4t4TMYWAwzn8HcRKwf1yb0o3rD33tfHW7ELgKSq27XraTn6LyacnOXdD
87xpdhQn5lp6ZxBfUH3lI+JyngFmfHHv4dT3ckvkUaX5iTzfLm6bslSjBvQF
2CvRbqTklUi0q9EylfeBD63fcS1h6GdLqnYz+imXlyBB44LHLFVlJi7nMxEY
16+q2kSqA/y7/2wd6vDGXuE06nCh4zLqBvMPu/LFHfbPDP45XwZ181K5/03S
rptMO3KYFm+XzCXKM2/7v+yA1Klhlw/1dJHZtyIjN0m+IeJmZF6UeCd0996c
rAccUpnmYnjySi5ZHXe4hm3HAcnbVrc+dLDJraDBOVkuZWSX9N+OV5HdUKii
fcZqooG4JuZwZ/2qJpUjyZ4l+r1gcm7yYYvUT2SPM79WqFk9mR8aVeCs0Q8l
b0C6Kb8MtkR0CdvH1ZHXNZaOWk/6wDr2993G/DLCOslagbhUjt0FxI/usUum
PNA/wN2OPPNW8+cjz7zz40HULuzUCOpAuwJ7uefQbrZW0D3qJ5zO+zQD/Wzv
imhBP8/vGZ9O44LImQn6GNernk0VGNceA/OrVAfwt+yKRh1uN72Yizrs28KH
usEBY+GlB8ecMxOkMxjdigKrCyoSu8nBn+F//1lOUf/vvwPa9izZsGRbN2kw
Md++8VqxerXRmM6n1g5Y8Ctff38Vh7w8lvjX93Cz+s0lc/LPnuaAsv/VWQdL
2kmo0Xf/5I0c9Xz/dekiK7iwNcC8+cD8ZmI784yF5KUB9Trn7fMcPvXBS0NX
fr3YHMKJ9ZYtNP2hnsQTGCoSMwjaS7v4WF4VkLpsqoCp9pD68n1Fc198HgDL
yTdIm1cFmbE/XghxJxMLccQHPCStKQ9c6w+TQR6hrk3ByCNe8Oo3tQs7/pr7
ZvoMqJdr3BFAuxZCEgupnyCydscl9LN8cXwy+tl+5+keGhdscrMewbjO6op8
wriezpqlRHWAdVZHtqIOgbvf70QdrkWvR91AL3fBvys3rquFNu7/h7r9P/mp
/n/5qeJeoon5WTens/iA5Bs4+TmkMZLey4gK8OnS/MzX2uoReCUXBtaJNbDo
PT44zhebQfMzJO9A+A+XMhASqTJ7Se+9L0jzmTnNzwDbcI78r2qY+0HOo4Dm
ybprTXz7aX4GfdwYnGpWDz9n/Y06TfMqY13Swmqan3uzw/ffjKsDF8lt87fS
PFxcNj24iubncJrCAcSrop8vRlzGY4YZ5YH6vMrLyOPj8CYSeVbJsIupXbi5
UbsJ7easO3AO7Ros3PSM+gmj39bcQD/j608bo59vYp8J0rjgWqj9BYxr0sVv
1RjXhpSYnZifpnN/FqIOi2cF1KMODnYzmPwsvfeD13vMWT1L7D2jW88dQU2s
n8ouU7eJHfJXXzPmzdTPsqiop1g/U/z1TWndgCaRs2ewbmicnLcQ6yc7X9yC
1hlIN37P1BkTftZ3rJ+7tn36ROsS9Ac7NGBd+tIwqxnrp3F6oDKtY5CnKBWK
daz3Y0M71s+Pu2XP0boH3ZtnuWLdC8p8WYT1c1pK+iVaJ+H8iSNPsU66m9eZ
Yf20Utjii3iQxMcXiIes9NTC+tloZuyKPFULp7ggz1tLgVFqFzLvWm9CuzdG
+26g3Y/OXWPUTxipdPmIfla8f1qFfn5qLhbH+jnvW/t+jGuXwdJwjCshq+Y5
1s8daaomqAO7Zcsp1OG8qj9TP1ksz5W0fqqvyxFm6uf/09/V/6+/64mTMezv
Ejw5drSvwb6D01Kxr/GY3k3G/m5wet8i2gfh6QyHKOyDuhd2B2J/N/67RIb2
TRiokgXsmyv2KS3C/i7yW6GX9ll4/r7iC/bZVTt127C/75G7eZL2ZfDx+JqD
fflqaIsu9vc7r18q0T4OrOJ2a+zjOvJLJzRpf3eYsWMz4s5h1jaI7wvXAuzv
g0t3nUAerSOdDI/Mo7h12N+PsJu70e69q0+K0C7np+w97O81GXGS6CfrY7Eq
+nlgfN5b7O8N9xeJYFxHU3ruYFwXx0ImsL/PSjY7hTosubknBXXoCWlj+vve
couJS7431Tet1mX6+/8zf6r/3/wZN1XCAudPoyi5ETp3gdPjSmbumue7ox7n
z0N/GnronAbCpMYP5zQ/TSljnD8TbivcpXMd7Pe5I4hzXVz2mWM4fzplKDrT
ORAqvHVGcA58Iz2DF+fPy/rSx+jcCEmjFZdwboy20fyE8+ca2UF5OmfCiuR7
AThnnph62AjnT9/bQoqI/648dg3xvsV5jjh/nv5dexR5ss2jGJ5gdpQfzp8r
RV44ol3PoBmM3aMXNxxm5s++6VHo5zwVB37087V+HQvnzxLlQ1yMKzl8wgfj
+sp/7hDOn9lSI79Qh9eB1nWow827nsz8Obp8wR06f6qLiHkzuv0/+5H6/+1H
R722SeJ+FDezNpPuBSCTuYbZCyx4ZQ7jflR0V+Mt3SNA6kZMB+4RE24PHXA/
EkyQcKZ7B/C11Ofh3sHrxROP+5F8aaoy3VNAZtukCNxTrpXmD+B+tOxRy126
14Dvc/l03GvizLw34n606vVOF7oHwc4hz3m4B31+t6kH9yMJ3jmuiA8mHmDw
QtYULdyPGm1SGZ7ZisIMj5tZZwnuR+8NBBi7lh/67qDdTRF/fXA/Soq744R+
nk8eyUU/i9wGbXE/4p7RS8W4gppvtWNcCe4RMrgfCSeOfkQd1F5qr0EdXoSf
ZPYjrodJBN2P1MX+PWd0u/F/+7vbvaUr5WLV8/+3v59NLfsXR/d3jQOjjXRv
hRcXf23DvdX5sMAf3N9vpmr/oXsu+Cx9dwH3XFHBsne4v4eNOYzSvRjcBJtK
cC+uKBWPx/29YlrKXrpHw6tjEpNwjw74XsHC/X32vfXpdO8GrY9K63HvjvKQ
uon7+xxdvz66p8P+xd56uKcHGJTOxP39+BdfBuf7yKePePcNWWnc31e37WR4
BH/nrUMedmVZCe7vH5b5MHYHpWUYu2kml4pxf+96b8L4aVkQyvip4tE3Cfd3
NmsDE5fXIV0mLmPCnoz7+8sa0SbUIbL2GaPDdb02Zn/Pt/2+lO7v6s/3mzC6
7Rq/9Pa/70ut9D9O/f++kyiMVz7D70uG/Hz4XQW+O71ivqtsI8+Y70uXHvjg
dxjo3JLKfIf5oPjsHH5fkkppwe82EGA1m/luY/p7gSl+Xzo73orfeWBlnxfz
nWdn/NuPzPelFYX4XQgEFc8y34UK4zSZ70umrgb4HQki1xsy35H2NKxkvi/t
dfkPP7TpP7xtdhHzfcl4+X88rA3/8cy7NOKP35fGR/+z+2TgP7u8ftbM9yXH
5P/8HD38n58Pfpcw35e23v8vrg2q/8W1O7QwCb8vPZ/2nw4KLv/poJ+Umorf
l5aVvfz/6NYieWzvGacs4j28OC3Gs5y8uLnmUU88nes4vP3Zb9KIttw1n57E
dmJqGr78Nz8Xiq2rhikO+toXGPxZzSUGd1U7Z0x5IERgAcMzf7IYw2O1LcP5
QW8tif6mO9c9soTsHbKbbvyjDxqS50yy4FYQF41qw92WbDL6a8pS7ZhueF/S
MZ3isIqlwuBuZPMSxFXy4RzlAbk/qgyPwez+acijYDraVdnRRh70pVv46RcQ
/omVYXs9euDzzyVlp6Y0k2kRrpq/eNoI30zT+FfdXfDqT2A9xeHo++fbEd+m
+TkO8RcbArmUB2aXzDVHHodHaqHII2JjVLrjQgfhW+t9oN4rmzS0WL72lOoG
Ca0b/koTLFKQkKLuXdVA/MdavQtFu2C2B6uMnofTjiWmeH5Qb0Uynu++9LcE
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
34/Q+f9enMhM/o9gMfRtWcrlHqhflV1YfpkFu2UY/4nEpv/8h+P/+a9YkLfz
7ZwssvayQ6zbObpXuliNa1Ldzj64qvj5azrRPP9QxSq3h/iYntU3UWXBYfUu
xu7Tnf5ol5xfr8jYfTdRhzip+Z8/V/7nz6/PHxh/dDnf0R/ycUYW409oBqMz
Of//6FzxdYry7qEOElWUPHWffxvRP5rxhE33dFuZNwX//DkkQrYge83tZuKV
uj7tfSILHlYsOusm2k0KTwmeZ1fUkrHV2vP1klnw2JobfWkFl5z/OHpPNq+C
WO+Q/FxH8bWuOZ+MZvSQjUGTeK2a8skaUdHcWpq3B86Z5SD/kd3SbZQfOGdX
piB/3Mjrk+F0/ow2Fp2QWdAKGg80RFVpvuU/krRHfOBtQTvFyWB+ymLEQ7jH
Ws5HdpOY1WkvRMKryYado6cKXlF9lPOOK2r2kKbXSrVcwWzy5+uCzLQ3LLA3
EFrFn9BDaqq7BA0e+kDO44ESyTQWCKkedTLt4pLtx4wap4kVwiHb8pSL1E8y
VaRGpqGLeCUuUqpsqoPNZ75kvaf819+FFuy+00EWtkaZS9P9Yz+rb9kmqltl
WbJZ6ac2ck1x68/uwg7iWfansjqOBXxvTD4fcu8hF0uNlS9KpsHY2oWNxym/
6FsSgboJTtPJpbqBxmbHHNTNfoRTu31zM1lerNQvm8Qh27NGr+XfY9H9Z9Wm
pZ/ZpPlD58b3I2xy8F1R//RHLKjPsj61lNaXTWIVl3/8ayBfx7f0b3hJ5wc+
k+PjEVyyt/jYy7MlJeQ5z7eWnteU52t7AfrTqWEZ7S6ZRr44Lm9Cf27x+9su
9akjdt+Hc/j+dZEbTy7qet5lgW/4RaG8xw1E7bEne9C+i7xYV1hwPJoFjzR7
bw0ksUjVOePW9//aSZeAyqsFdK6701ppwb7bQ/raOo2SNj4Bi/3nF05Qfhe7
6iPoT75O4DD1B0xn+TWjP1Y+UsfR/7vXTOOp/1DMr8FF//V+b79sXNZOThmM
8Oxh0z7Bl2rIeUz3puCeGf8/ut48GOv3+x+3tEhZWtBCWmjRIqm0cSqkEFGS
VCqKREVKFMmStVQqhYQkspMl4gqFyL5F9uW2r2mx9rvO8+Uzv5n3zPeve+bM
Nec651znOufxeF7XPVe5WiMZfJle7S/eBpMm3cNegTQOdkHfbsTVk7e1Lyt5
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
tK+4JaKc00bZHOXrHC3yXivUg9+BwyW1sU1kTbF6DN5/EBrusEtMbIYqz/6B
W97VRO6KWCbel6gdnS+TKNoGxzwGDy7myCci92rP4f2Kyuuen9r7C+Bfzbmx
xqg2ImxQXdVMcVRf2epHcStK4EL4GiG8x1UpnMKJ97iqcufq0vEkJWPOPxwf
mfKtFsfPmHo3J27q3ZzuqXdzAne+3DV9WzM4zZOt5vpcTS5XBR3C+yod6oMb
cB+lX/9Thn3Qrv6zNua5keUji5bRMrL8DccyvDcVvo69Eu9NHWmO/vI9OpLM
2fxqCO9ZRYRaKuI9q8sXLZt711WA35nyLXgvy35j8im8l8W2bMlG3F/ntXOq
sY8Hu6Xl4v5SmHoHh2vqHRyJqXdwcqbewSn+n3dwgn+KfTErqiDmvb37xJ8M
yIm3HuDB+07zs7fof7KIIb9XK7/D+1Erp/+LwvtRS0QOFWZNq4IQqzO38T6V
cmf2XLxP9Xrq/RqZqfdrbk+9XzP9//F+jdKogmIDjUNovV073keKnRStwPtI
vj7n7UtoHDoyvAjeXxpd2cPcX+qael/G43/el7lUYXamcUYxKfsZwnNuZgvc
tzo+9sK8A7LqfM4hzpFS3ciO9Wf757XxGJ+HyXNjMR/86lVnNUW1QdHxgHxc
X/YdJ5Rx3S/v7uBBeYV2VhEj99Azxbx1PrPqI81PiPsnewHzU0X+1VLM29i9
pekoL95xygjlVd8LXuR9/gpyOYeU8T7kid2p/nivJsF35qUuuo4al41z8b5W
boAsO97XWl12whnzUGXv0Dq8v1SyaHwY7y+tnBftgXqaevOP4v2chdaFXqin
Uuwp2yP+bDKW4/Z9ZUQHEZ339gmfP+WpfDJR7DsLyew3I0/FNraRq7dlgkU+
s2j9Wyz01byMbBE5dFXqXR25ar8k5XVQF1zNevp8pWMOJNpWLcfzuI0xY9fx
PG7dWeOjVD/s2NRTgfoNCngeo37+eWkB+D3/3hG/hHKLZuLkUy6F3/Pb5gas
vS1BeXQPe6p/WiOJFPhROZLYCeuuXfdz2V9BktZ7dNTqlZM5zztU3hj1wKxa
TovA7xXkXm3KqMfDApInIJNVt7oXrhUKmzjvr4CUby4z8Bwkv2jLNTwHGQzP
T6LjYWKJ4OP7tA6d5+yNwPEZcwW/btpVDgpp13/OWVUNCVcW+Q8FdoMwr446
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
uDbGQuhIc56WXRdaMqFw7Q7tJvh/atBq9A==
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{300.9686702792292, 220.87897128492767`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 2}, {0, 1}, {0., 0.6001621254347066}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.30708748981534806`, -3.000642208338262, 1.533572173436188},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.683322761385463*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.683321775342657*^9, 3.683321789234682*^9}}]
},
WindowSize->{822, 932},
WindowMargins->{{Automatic, 7}, {Automatic, 37}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2539, 58, 278, "Input"],
Cell[3100, 80, 387, 10, 30, "Input"],
Cell[CellGroupData[{
Cell[3512, 94, 558, 13, 50, "Input"],
Cell[4073, 109, 119733, 1949, 174, "Output"]
}, Open  ]],
Cell[123821, 2061, 214, 4, 30, "Input"],
Cell[124038, 2067, 483, 12, 87, "Input"],
Cell[124524, 2081, 94, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[124643, 2086, 1343, 39, 69, "Input"],
Cell[125989, 2127, 9290, 192, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135316, 2324, 2396, 68, 88, "Input"],
Cell[137715, 2394, 9578, 197, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147330, 2596, 1382, 40, 69, "Input"],
Cell[148715, 2638, 9295, 192, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158047, 2835, 2237, 67, 88, "Input"],
Cell[160287, 2904, 9516, 196, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169840, 3105, 163, 3, 30, "Input"],
Cell[170006, 3110, 145, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170188, 3118, 207, 4, 30, "Input"],
Cell[170398, 3124, 182, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170617, 3133, 154, 3, 30, "Input"],
Cell[170774, 3138, 94, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170905, 3144, 147, 3, 30, "Input"],
Cell[171055, 3149, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171164, 3155, 164, 3, 30, "Input"],
Cell[171331, 3160, 261, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171629, 3171, 189, 4, 30, "Input"],
Cell[171821, 3177, 271, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172129, 3188, 146, 3, 30, "Input"],
Cell[172278, 3193, 118, 2, 30, "Output"]
}, Open  ]],
Cell[172411, 3198, 835, 22, 50, "Input"],
Cell[CellGroupData[{
Cell[173271, 3224, 99, 1, 30, "Input"],
Cell[173373, 3227, 294, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173704, 3238, 802, 23, 30, "Input"],
Cell[174509, 3263, 13383, 269, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187929, 3537, 244, 6, 30, "Input"],
Cell[188176, 3545, 4854, 93, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193067, 3643, 155, 3, 30, "Input"],
Cell[193225, 3648, 116, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193378, 3655, 160, 3, 30, "Input"],
Cell[193541, 3660, 116, 2, 30, "Output"]
}, Open  ]],
Cell[193672, 3665, 2362, 62, 126, "Input"],
Cell[CellGroupData[{
Cell[196059, 3731, 100, 1, 30, "Input"],
Cell[196162, 3734, 621, 14, 30, "Output"]
}, Open  ]],
Cell[196798, 3751, 702, 16, 50, "Input"],
Cell[197503, 3769, 254, 7, 30, "Input"],
Cell[197760, 3778, 1871, 49, 107, "Input"],
Cell[199634, 3829, 385, 7, 30, "Input"],
Cell[CellGroupData[{
Cell[200044, 3840, 366, 9, 30, "Input"],
Cell[200413, 3851, 3752, 103, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204202, 3959, 169, 3, 30, "Input"],
Cell[204374, 3964, 3824, 103, 226, "Output"]
}, Open  ]],
Cell[208213, 4070, 2182, 59, 145, "Input"],
Cell[CellGroupData[{
Cell[210420, 4133, 680, 17, 30, "Input"],
Cell[211103, 4152, 1778, 36, 346, "Output"],
Cell[212884, 4190, 345, 7, 21, "Message"],
Cell[213232, 4199, 343, 7, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213612, 4211, 1356, 40, 69, "Input"],
Cell[214971, 4253, 9267, 192, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224275, 4450, 461, 13, 30, "Input"],
Cell[224739, 4465, 1673, 34, 340, "Output"]
}, Open  ]],
Cell[226427, 4502, 231, 5, 30, "Input"],
Cell[CellGroupData[{
Cell[226683, 4511, 2173, 65, 88, "Input"],
Cell[228859, 4578, 9487, 195, 79, "Output"]
}, Open  ]],
Cell[238361, 4776, 315, 9, 30, "Input"],
Cell[238679, 4787, 472, 13, 30, "Input"],
Cell[239154, 4802, 186, 4, 30, "Input"],
Cell[239343, 4808, 3334, 89, 183, "Input"],
Cell[CellGroupData[{
Cell[242702, 4901, 628, 17, 30, "Input"],
Cell[243333, 4920, 1683, 34, 274, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245053, 4959, 556, 15, 30, "Input"],
Cell[245612, 4976, 1704, 34, 242, "Output"]
}, Open  ]],
Cell[247331, 5013, 190, 4, 30, "Input"],
Cell[247524, 5019, 310, 9, 30, "Input"],
Cell[CellGroupData[{
Cell[247859, 5032, 9483, 253, 354, "Input"],
Cell[257345, 5287, 366, 7, 39, "Message"],
Cell[257714, 5296, 365, 7, 39, "Message"],
Cell[258082, 5305, 365, 7, 39, "Message"],
Cell[258450, 5314, 346, 7, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258833, 5326, 335, 9, 30, "Input"],
Cell[259171, 5337, 146366, 2390, 269, "Output"]
}, Open  ]],
Cell[405552, 7730, 92, 1, 30, "Input"]
}
]
*)

