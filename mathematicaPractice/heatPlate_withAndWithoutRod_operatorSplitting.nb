(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    342491,       6824]
NotebookOptionsPosition[    337507,       6664]
NotebookOutlinePosition[    337848,       6679]
CellTagsIndexPosition[    337805,       6676]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "system", " ", "will", " ", "be", " ", "a", " ", "plate", 
      " ", "with", " ", "a", " ", "rod", " ", "in", " ", "the", " ", 
      RowBox[{"middle", ".", " ", "\[IndentingNewLine]", "This"}], " ", 
      "example", " ", "will", " ", "use", " ", "Lie"}], "-", 
     RowBox[{
     "Trotter", " ", "Splitting", "\[IndentingNewLine]", "So", " ", "the", 
      " ", "equation", " ", "is", " ", "F"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"R", " ", "+", " ", 
      RowBox[{
      "V", "\[IndentingNewLine]", "R", " ", "is", " ", "the", " ", "2", "D", 
       " ", "plate", " ", "without", " ", "the", " ", "rod", 
       "\[IndentingNewLine]", "V", " ", "is", " ", "the", " ", "2", "D", " ", 
       "plate", " ", "with", " ", "the", " ", "rod", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "Here", " ", "is", " ", "the", " ", "pseudo"}], 
      "-", 
      RowBox[{"code", ":", "\[IndentingNewLine]", 
       RowBox[{"Let", " ", "F", 
        RowBox[{"(", "0", ")"}]}]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"initV", " ", "below", "\[IndentingNewLine]", "For", " ", "t"}],
       " ", "=", " ", "0"}]}]}], ",", "tau", ",", " ", 
   RowBox[{"2", "tau"}], ",", "...", ",", 
   RowBox[{
    RowBox[{"T", "\[IndentingNewLine]", "\t ", "Let", " ", "R", 
     RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"F", 
      RowBox[{"(", "t", ")"}], "\[IndentingNewLine]", "\t", "Integrate", " ", 
      RowBox[{"R", "'"}], 
      RowBox[{"(", "t", ")"}], " ", "to", " ", "obtain", " ", "R", 
      RowBox[{"(", 
       RowBox[{"t", "+", "tau"}], ")"}], "\[IndentingNewLine]", "\t", "Let", 
      " ", "V", 
      RowBox[{"(", "t", ")"}]}], "=", 
     RowBox[{
      RowBox[{"R", 
       RowBox[{"(", 
        RowBox[{"t", "+", "tau"}], ")"}], "\[IndentingNewLine]", "   ", 
       "Integrate", " ", 
       RowBox[{"V", "'"}], 
       RowBox[{"(", "t", ")"}], " ", "to", " ", "obtain", " ", "V", 
       RowBox[{"(", 
        RowBox[{"t", "+", "tau"}], ")"}], "\[IndentingNewLine]", "   ", "Let",
        " ", "F", 
       RowBox[{"(", 
        RowBox[{"t", "+", "tau"}], ")"}]}], "=", 
      RowBox[{"V", 
       RowBox[{"(", 
        RowBox[{"t", "+", "tau"}], ")"}]}]}]}]}]}], " \t", "*)"}]], "Input",
 CellChangeTimes->{{3.6831417990394473`*^9, 3.6831418137804728`*^9}, {
   3.6831803663239775`*^9, 3.6831804344752426`*^9}, {3.683259563851947*^9, 
   3.6832597717494993`*^9}, 3.6832598342294807`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"initV", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"20", "*", "x", 
   RowBox[{"(", 
    RowBox[{"x", "-", "2"}], ")"}], "y", 
   RowBox[{"(", 
    RowBox[{"y", "-", "1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.683141418724348*^9, 3.683141444936411*^9}, {
   3.6831803592539473`*^9, 3.6831803629489627`*^9}, 3.683180446035289*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"initV", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.68227683728271*^9, 3.682276887470913*^9}, {
   3.683141413639338*^9, 3.6831414164353423`*^9}, {3.683141455318433*^9, 
   3.6831414654615355`*^9}, 3.6831418193324833`*^9, {3.6831803534939227`*^9, 
   3.6831803536109233`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXmYztX7x2dh7IwtQiiDLGWnLPN5ss8o2SNCtCCDUkhISoksTWWJ7Fuh
so0lW/alZOyMZez7jH1nfl/zvF/n+XV36Z+5rlfHec55n3Puc99n+zzdoXuT
t0OCgoJ6pw8KCv3f3ykt5ywZUvrzSP/fnpE1j4aP2LG0TY0uz0eOKxq11oN/
db9Ng6bdx0XOPXsgJSJqp+PHQiI+79l3VmTE8lwVlsQkOF7065xemYjfI7dv
KL4wIuq44zX3tm6weNTCyKHPb/grJuG042vPdjm9LSQusu6YDqfjYi44/vMa
X3jPvksig4Me/XfZ8ZtvHN78y60lke0Wbf8mIuqq47OVfmWnn56Mir3u+J/K
P/9TXWfGJNx03FN5Po6vWiE24o7jz6j8+wZnWBMXc8/xA6pvpar7X06Ie+B4
D+nzbdLMAykpKY6fuvzP8Ed6orNf1wUeeqIzvEjnhTuKfLnXQ2f42GaTh47e
etJDZ3i3vg0XjBh90UNneOacC8r0b3rFQ2f4pjmXN1/sf81DZ/h76U5EjN56
3UNn+M2iX9f6+MUbHjrDuyg9OsM3Kn90hmdQedAZ3lnlR2f4KNUXneHZpA86
wz/rVyRVT3T267fWO672Qmc4eqIz/EDT9MeKl7vmdIavyXt/xOiOd53O8LQf
l3p1zP0UpzO8UdVt4bkfBvvQGf734IKfFy8X6kNn+M2JIx8OGhPqQ2f4X0qP
zjZ/dIYHqzzoDP9D5Udn+E7VF53hg6UPOsOfS04a9EhPdPbrtM0rpvGCzvDu
al90hqMnOsPrrUts3DsixIfO8Mbr/tg260FaHzrDP8mcbXGblemdzvDNEw9m
Gd0xo9MZXqVvwb1NL2d0OsM3KT06w/sqf3SGN1R50BleS+VHZ/gS1Red4c2l
DzrDf8yUHPlIT3T267HTe0n2Cp3hmTS+0Bkeqv6AzvBGKj86w68+1SDNrlkZ
nc7wt/6q1fjv+1mczvCft89YMPp+NqczvH3sC9+PaRrudIbPUnp0hndQ/ugM
T1Z50Bn+ssqPzvBbffz1RWf4vRx+fdAZXmp8mVQ90dlf773eOs0X6AzHfqIz
nPGIznD6JzrD31Z90RmeduWiDyocCXc6w5dkXLM018PsTmd4/X/W9c3YNofT
GR6n9OgMT6P80RmO/ugM76XyozM8WvVFZ/e70gedXfpiL6bqic7++iV4zO/o
DGd+QWc49hCd4YxfdHb5q7+hMxw90Rk+bFnFosXL5XQ6w3de+33ioDE5nc7w
oUqPznD0R2f4DJUHneFrVX50hm9QfdEZ3lL6oDP8xtxMqXqis78eiR7+Ejo7
rvkdneE3NB+hM7yy7Cc6wxnv6Ayvp/6JznD0RGd46p+gXE5neLzSozO8rvJH
Z3hblQed4eVUfnSGJ6m+6Aw/IX3QGf58mVmpeqKzv7zHvdmmP8Ntf4ZvM/0Z
vtH0Z5e/6c/wONOf4bY/w+NNf4bb/gxfbPozfLrpz3Dbn+HrTX+Gv2b6M/y6
6c/+cp30/jT2Gb7B2Gf4q8Y+wz829hnewdhneBpjn+GLjX2G1zX2Gb7I2Gd4
qLHP8HbGPsM/NPYZXt/YZ/e7xj7D6xn77P/9055n/A14BuNvwFP6/NvfgL9i
/A14svE34O2NvwGfYfwNeFvjb8CnGX8D3s74G/ALxt+ARxl/A37d+BvwO8bf
gJcw/ob/d855RYz/DO9s/Gf4CuM/w2sZ/xn+ivGf4b2N/wxfb/xneHnjP8PX
Gv8Z/pHxn+HRxn+G+4z/DF9g/Gd4I+M/w8cY/9mf3wXvgIkH4aNMPAiPN/Eg
PM7Eg/Dbff4dD8KjTTwI32DiQXiSiQfh6008CI8y8SD8Rp9/x4Pw+SYehG81
8SC8v4kH4REmHvT/u0ted7O+Ac9q1jfgX5j1DXhTs74Bx59HZ/gis74Bf82s
b8CPm/UNeAuzvgFfaNY34Ix3dIY3NOsb8P5mfQN+t9O/1zfgnc36hv//J3us
L6EzfKDSozO8tNoLneHjNF7QGU58hM7wKM0X6AzH/0RnOP4SOsOZ39EZXl/5
ozMc+4nO8NEqPzrDi6i+6AzvIn3QGT4kZGSqnqeWhf1VLGqB5/871Yuc9E+V
atFLvWMpff56FJ87vvhYYqUjO7yO33vfxSQ8dLyI0pOP/9/94dVQevKBr2ky
9tfPYs64fOCllJ58OjXu/WS3hI1evmFN8r90+IDLB77+crnGT9y84vKBPxjq
T08+PbK3KhYUtMObX3Fa5P6vEl0+8I/XnTs1/MZNlw98ktKTT3TvXRdTUs54
v4mHJfYIi4q973hnkw/8J5PP7FJTP46IOu9lV73IB77I1At+w9TL/+8uehWl
G/nAZxqd4c8Ynf3/P8l7Ru1IPvCnTbvD05t2Zx04xFdkyPrOQ509pJ9cPXh9
+oWOm1x61jOviDPeSR+qfCgPnPrSz+GHlQ/lpDynPX8+9H/Sx3995qtHnPSU
Z78pJ+uBT60ucafhmD1OH/rtQulMeeB/5dyxuU5koJ/QP5eb9iX/MOXP77I+
VvbJNvUy/35Y/eBuIJ/5n6Z5Z+g9x+m3CVfb/l7ox2AfvwuPMf2T/MNN/qX7
3vSiYnd7rereLB//cRqXD7znlJ4/FF981+UDvz2rbejaqie8i2vTtE+Iu+H4
iwUHtH39g6w++Nnj37WKjTjgVV9zMnzXjHCff5zccukPZBy+rFPpjI6TfmH2
xmlbTcrso5zwlrvSDq33VpgrJ/yvof+0O1Hxgeqf6Pgy5QOf3qBcz4S4w16x
3BVKxe/P4vOX46RLH6lywkn/99glwcXaZPf5051z6XePXNJ9TMUcPn+6S45P
ulV40p17OVx68oGXff3durERV/6TnnxIn27WnpgT23L6RmStvCsu5tp/fpd8
Hpfe/i7tAt+meqE/vLD0QX/4vnHDFw9qlc7p6f/9Y15Roycc3ZhPycd3qvGa
C/1zOn1IP1HlZJ4l/Y3qc2clnsrp9CF9mOrL/Et6T/mjj02PPvZ30Qdu9YEX
Un3943Ov44elD9z/Oye8Nuq36AZfov6JbvAa6ofoRv5WN9LvUn9AN9JfN7qR
/ifVF91Ib3Wz6dHN/i66wauZ8Q6fr/oyL8MTNH7h/vxOeZ/K/qAnvI3sFXrC
E2RP0BOOXUJPfndBj1Z/V5wf0A0+JiLrqVO5Av3KlV/psdvkn2m23x7CiYv3
rhxy5ImHx1y98BM+kn2mXvBDsufkQ9xXUnabfPATVml+IR/4Us0X2G3yyah8
yJ94J7fmI/LHf1ho/ArSP1zlT8+8T/qdmgfJHz8/wczX8LXi/C7+hvUP8WOZ
x/EfSH9K8z7zMpz88QfgC40/QP6LxJlfmK8jx2yZsv3+JTdvMp++tnJg/ykT
Uty8D589tsL+v3+67tKzL9Plh/z7Jj0b6uYveNr3m/Vt8eC20we+Qf2H8cW+
w6qapQdEhwXGF3xRw1Insw3P5Ow2/Oe0yesWDk/rftftazSrVyX4qftu3mS9
/XDThwVqdwzYc/iYrzqd2ZgnYM/dfK1xgV0i/UIzvkg/VuMLu0R67BvjjvSM
U+ySTY9dsr+LbvAfVH50g+9TfdEN/u5vVQd/8yBgt1kn/655cpmgoKxOH/jR
a/HtLn8Q8BPgtr5w7DP1spx62XyoF/ywfpd6wYernNgH1p9jTL3gh0y7w2l3
6gWnXagX3M4jllMvmw/1gtv2gu9VObEbrPeuVX+mvvC56v/UFx6n8UJ94Ywv
8seeh2uckj+8q8Y16bG3v8sOkB7eSnaD9NjVWrIz2FXs1T7ZsTbDXkpZ+r94
w/93jnep4bQ525ts9fq+1DMuLibF8fHbr8bmqrzApff//2Rvgjjp4cu7T94w
v/w47+COMeVK/C9e8v+N9VLEyQcep3xIz+8uEn/5TKYeEVEPXfrp5nfhh5U/
6clnl+oFb1gxU8+goDXemPwFs/3w1iFXnqTyNU6kpFzwfhGnPP5/l+R+l/Tw
Pcqf9OhwyJSH9H8YneFDTX3JB848RX2zJx/Yl3K6byT5ELdeSPJzysN8tO6p
n1I58xf5TxQnPfmEK3/S87vkk6fGvUmP/INdM8Yui0k44i185vNvO7fI6YPn
nVehSFRsordI3J8uyfvoypbSUbGHvA3BzXevX5XT5093+T+c9OTf4MrKj65e
DXDyf1m8frrxnRPirrj065UPnPTrze/afNAZfS4m/Vtn9EQ3xhfx+0H5LfQT
+ttC9SvGKf7Aqxqn6Ew+u/KM6PHLa1Pd75JP87QvTh0zfZ0b18T1W3ttfS7N
2bPudzemrTszNmKLl+vezfo7+510v4tfsUj2hHyI979uVzpv5b3Jbv0WfzXd
tHcLtSyeze2X4We+q/T4A9ilGcqf9PiTc1VO0mOvKhgdSF+79qJDaQrPdTqs
2b9nQkzCeS84usL5Hi9udvnjN64z6yf4h3DyJ/0Wo3PB4dNLxEZc8jr3bHDg
fMWVbtzRLi+OXJKanvFCu/RQu6Az60IJ+t1iYxIWPGon/984r9uGofkrXEp0
dgD+ufld2jfywLVUHcgn40+zv4mKXe8tyzspPiRXYH+H9K8Y3UifyehG+kVq
F+wP/SdI/YffHdTtxOqEuL+90hUXRn45/KrrP7TXWtMPRw3o1iIh7pyXXflQ
L9JXUr3Qk/YtonJSHvK5f/ff+dCOZUy70I6x0pN8sPMjNB7RB95Q7Uj/oR2J
R/z5PnB6TpH+7AvgZ2bReMEeYt9+bHT7jT1FAnaSdYbzOcs8fL9WTp8/3UVn
x7CHcPJZujFxbqFhATv2ODtJ/h+PqdzqzaOB9JZjJ8l/ifKHu/Wf974+9c6c
nL5eb4b8HpNw1f0udh5OPuNNff35HfPGiVMvOL8Lxz7beYH01p5bTnrWJawO
llNf8olTeagXnHaEU87F0oHxQn/+Vf0E+4BdYr0Xvxfd0Bm/13L0wT8v/mib
bkMgLqBd+qhecMppdSCfGtkulOhzJ/C7Nh+4zQcdyOd2v+t5VrQJ/C66TTT1
spx9NPpbkSM1M2apm8PXevcbXz5aH6E8D36YXrzkuewuPe34jElPOUkPp5wt
drarlTY5u+uf8FsqP/Em+qMz/crqRv+BF1N69u+oF+Wc+Ufnmykp11y98jer
Py9xWQ6Xnno9bdJTL9LD+d355x+kDVoTOPfF744v/ung2pHhvjQ9Xvg8Iuqm
+92mZ8cE1T0ZOFfD79r0/C7p4fxuYoV8O7adC3e6kR59iF+YT9dp3Yl9WPgr
8gf88+sON8++u7Hfx8GTk1wcxPz1p9apyAd+fO3yG988uOnyYV47/HOTlkWf
vOnWhdhHyGLW31g/2a/1E34Xf+mo1tkY1+QzSOuNlIf0vZv/Nbd2x8D6JPnn
VDxI3Mp6YGWzD0JcuVJxJesM+GmvaX2YOJd89mo9k31h0vf+a/Cu2QszuPTk
P1/xLPNdh4h04VGxZ728mvfh2LcfZN/gzL+N5OcwL+PnzNG8DGc+La15n/mX
8veQnnDi5RDphg74pfvVLux3O39V+vvn+3te+a2TtsTFnPGOvf7FE999GFjn
5Hdvan8Kzu+uVX/AryCfRuMLJ0d/eM6VBz9nvvon5YHvVP+kPPg5u9U/0Qf/
pIv8E/LH/2H/l/zh5TWOyJ98mmkc0V60Szu1F+sb9Ocj6j9w1v2WqZ8wLvB/
2qofco4C3l/9ze9HHvaWDSmdMyhov9fjmS0FTq8IrLfzu9XV/+H87hr1/weF
Rt551I/J5+EnTcu2jcvm5kfs3mTNL9gl7F512SXmL9JfkD/GvIA9PGf8NLjN
n3kN+8+8QHrrR8HxA/EfGEe0C34m5fxJ9hkdqFcL2WfSk79Nj30mvV/Hsy6f
pzS/wElvOfZ/oead3bnjq8dG3HD53Nf8Cycfy8mnueZl7Db9c8jII0u+W3/a
2XPsRo0DFU9HHb/q4o5J763pGhsR772n8Uh64pe8e/Lk/O76bcdJf0F2gHnN
P6+e8G6oX/nt4G3P327HvUmvzj707oRMjpP+XdOfqW++NxpsrhGT3Y0X1gGO
yQ7467Pb1WvuK2knxkfdcnEW4yLzmbvrYr4I1Nffnru8tVkfjjnW44Kbp4j3
22mdkPzRofK8Mysmbnzo4n3s3pzoqvVv9svs5nd/+5zy9oxd8+r5Zlld/6Gf
Xx02+Is8SwP9iv42P2322EW7wl19OUfxpM6xwImztih+pJy0+1LNL6RHh3ba
v2OehS/8M3O1TXmCXf9Bn5bVxnYoOu6Bs5+Uk/1oOOvDrNv77fId1+73n7s3
LaJnepce3V5TeZhn4cvb9lowf2A610/Qc/OoSZtOxGZw+uAPdNc6MDpQ/v7N
/+hQ0Rfifpf5epbWpSkn+X/0VvD55jPCfJn7ds8c/D//CZ1fKFm0cd74Xa7/
s+63fMrGTH9umR4JJ/2LFZeW6PbFcW/0nCPtHtlZ0g+6mLZ9sXtzI+Gkn9/7
wvaZu8553TVfkH7hb1XqfHBwfiSc9DUbHRiyfmKyl/PvtQWCgk669OX6f7ah
/yeLIuGkb/xNiQzvFrnqLZH9If0fbRN/X9w+LhJO+t9qXiqUJ/6a17r26AxB
QRdd+ibNmqXLN3RJZErqf8n/uT9LevKpvm3JkA/2X/dIb++B7jxc8V5KypX/
5A+3+UyX3076FSo/nPS/q/y9xk28kpJyw6UvL33gpG8iferLryP9IukPJ30t
6Z+vefqzKSmBe75fqH3hpPdKx0zL/ss576L8Cld+9Z9V4R8cSUkJ3P/tWnRo
hiXtR0fSD7F7LXo/telg9HHXD9190pE3x27Kc8X1N3jLvJnaZNt3y/UrZz83
50x+ouwD13/gv23LUKbKqiAf/QFeJkv7eQeiQ3y0L/zq7G+uXq0R6qN97f1T
2hF+RelpL3hZ5U+7wH9XedAffkLlR2f4hV/XZJn3+y0P3bDnd9rOHHGxWGBe
gy/fP6bCgoG3nG7wPb2HdDzYMciHbvAGtbaPyJY9jQ/d3P3Th1WnDUubzukG
z3rlpUwXimVwusEr5zux8bmPMjrd7H1SdINXUnp0s/mjG/xPlQfd4C+r/OiD
/Qx7+blP/+yX5PRx90BvrD55s999pw/8zORau48dDnX6wCf3CO20skl6pw+8
Tbtnj/1+JpPTB3795Qk/r+6X1ekDj5vwW+L19OFOH3sPFH3gi5UefeA3lD/6
wN9QedAHPlXlRx/85wLP729dJusVpw+8c0jMth8PpTh94L/89NG+KZXCXH3h
74+qsr5UseyuvvCoz4Pez5kxh6uvvY9JfR1Xeupr86e+8Bdf+y77tCHZfNgZ
+NOqF/Vl/33iN9VG1ip31dUXXrfOtXfKPgzyUV94p9y7x839PZ0rv73nSPnh
fdLcb9Cydk5XfvjilZnXTX8thys//MtCJ0I7xYf7sJ/w+ioP9YJPV/mpF37y
1hbpGkTHBurl7i0mtHk3vmWwqxf8wZn6g9OWSe/qZe8VUi94v8i7mdr+mtOH
XYKnKB/KD7+j36X88H9UTsqPf2XbBV7HtAu85pwOZ7LuC7SLva9H+eG2XeCL
TLvAbbvAbbvAp5l2wR/LZ8YXvOUHVfZGhwXq5e6vpasSNLFVYHzBe5jx5e6j
mfFl79Ohg+NmfNn80QFeWeMLHeDvyT6gA7yQGXesk4QaOwxPZ+ww/KSxw/Cf
jB2GtzR2GH7Z2GH4ImOH7f04dIMvNHYYfsXYYXgrY4fhE1V+xhH8z4HPRZ5a
GersM/un1838Do8z8zt8p5nf4fXM/O7ux5n53Z3rM/M7vJyZ3+19N3SDlzXz
OzyDmd9tedANXl/lRzf4r6vu/d0rKsjpxj5yQ+NPwpcZfxJ+VP4VusH3Gn8S
/rPxJ+HPGn8Sft74k/b+GrrBzxl/El7C+JPwX4w/Cd9v/En4ceNPsg9VzMSD
8GdN3AePkP+PbvAiJo6D+0y8Bp9g4jL3uybOsvfR0M2mRzf4TyZusuVBN3hR
EwfBi6u+6MY5kB9HvJYa16Ab/PLUMalxELrBy3Ra3+5RPIVu8DebZkuNy9AN
3rxM09T4Dt3g1zbNS40T0Q1e/alC/4pn7f0ydLPp0c3dO1P+6AZ/TeVBN3gH
lR/d4OVUX+YRV37pg57+v797rwyp+d2GffGuH3KOq3KZ7J/Mf/Gw64c/PTP9
VPeEmd7a2J1PTNif6PrhIa0v3Qi7UW5A02OuH1aduvOtP2LGe681T1v9dPXD
rh8u17mmT2p2rvPj1t2uH370cNn956IGeYv75f/68xc3uH7YVvHvWdMPQ1T+
0PuVRj3yB9Cztsqf/cfq505Uv+T64ecqf79iaz5/Y/Yp1w/Xq/zTirwd8e3o
Q64fZlT5a9T0Ek6X+cf1w/4jPlgWG/Gn9+L8PF/3GHDM6VNjUb1Wh+JWemv6
Tm/fK/t1p89h7a/la12iWXKRW06f/g1+8b6LWOZNXPJuxlVNbjt9Cmr9bdG6
Wi3TVrnt9Fl1PHOx6NhFXrkR5wtF5Lnl9JmpuPWysW99VM6YeteK/VgwxNm3
+trXm/5XxW+P5wly9q2syh/cdU+bPK/cc/rEc84q92tHv0644fR5X+WfMyP/
N588fdnpc6PdvIsRUVu9tcun9v/967NOH//fzd7VYo1Kp1/+wOnzjvYN956Z
8PWyMcFu3qx8K9uuhLgNXv+q0zJfrRPq7H+Y1mm75MzW6KM8aZz931vzpbpL
YtZ5Lb4YkCVLiTTO/hdU3Grnzcsq55bIK3NyDs3g9Fmj/cpt52M7vfp6OqfP
KJX/4sgpG3b0T+Psf3uVP9H7o9+b2YPd/BiX9/rIhLh4b037mrOmZklyOny1
6puoqNgd3t1ilZcELwxx/kN37VeOv5y7VNF3wpwOv26ODuuWsN2L27j9cPMH
6Z0OA7SeHLryw4qlhmd0OjTM1e/jqNi/vC+6P1cuQ+lMTodtik+t37VI5Xzi
ZK7XsrbO5nSYoPX5OwM7D/z0iSxOhy9U/g5jvp95OjmD06Grys+9fnT44LNv
f46I2uvta15435a0Af/cfy5gjxeeaXDC7JaB+LdW8ZIdYyP2eKd698u5aGha
V997Wo+dfqRJq+n9srn6nvig9d6YhJ1ekzSf1agVHfAzv1J8av3zHirPL/nL
5NqwOburb0uVZ0y9Nl1fnBnu6utTedZ/XSb/rWZZXb3KnH9+XUzCQS868uVv
/n885d+/OujtvPNhtfG7A3FHyshN/RLiDnhVwu6VzP9WIJ6qpXjTxlOllX+2
Lb+tSygSiKdyKf86f1fL1eLJQDx1X/mHRgcVufJJuIubJiTcTo6L2ed91G9T
2/8fL1xo8tehuJijXsszmaP/fzzL/lHRvENCb0QH4tk/br81OiLqiDd8wMPK
09IH4ln/36P/iWfPKv9tdwctKzInp4treuhcR74Mm7dmzhyIW1umtuchL7fs
OeXclZrfMS+bOOWsp32QPMqHcq4oG7w/LuZ/PGHysHQFAuVs+5i4dafyf3pN
xs5F2v6/9QTlX+qzy6XS9Q/ovFz5d+868bXf0mR39XpC+03FpZtbJ9k77tuI
qESvrXSmXuViQ4dERJ30YtQu1GuG9rOOfNqqfa2XA/0n36l/3kqIO+FNe3rz
7m/uhrl6rSA+Nf28rPJPrtPy6vAagTh0uvKPKVb5/be/DpT/Q+2z7Fa/pfxn
h3YqGBV73HtV/Zzyj6y7M1dU7Glv1MYO9S9uC8Sboan7V6c9b/irHxxt+cCN
6z6p+p3yxs4ofmDjwTRuXLNvMlbjjnFd36syJybhpDdH45T65uO9FGPHRqg8
jWUHqG+IyjNDdoN27KXylGh75auln2Zx4/rS3clTYhLOendnd8x9LDYQD77J
eYykD6rGzr3t6rX3lZgBEVFnvZvvrB67eEWws+ecf8AeYs9XTX6xdULcGa+j
7Cc6cJ7hnuwtOsy8lvaF2Igz3pOyz+jQR3FZJTOvXVT5B8v+o0N7lT+t5gt0
2K3yL9X8gj2vz714zUfo0+C37s/HRlzwto/qkGncrkDct1rnUuo989STk767
6vSpGFI9U1Tsea/PtoLFF/juuXmf8xjMm+hTINW/OOdd0jyLPpzT+FvzMvqk
mb17fVzM/7jmcfTZq/jrqvGLolV+/AT0WaXyx8ivQJ/yKv+n8kPQZ6bKf0B+
C/r83DHyj7iYS17e+6uaPVtgj9PnKZ0rmNB0QoHMBU47fb6Nyzg2JuGi97P8
KPThPAl+F/r0zbDvw4ioi16I/DT04ZzJTPl16NOhzbTGCXEXvO7yA9GnouKs
JONXz1b58TPRp4DKj1/q/CKVf4r8WPRJo/IXlN+LPmF5s9RPiEv23p6yKSlf
5alOH87/DytadscLR9Y4fZK6HIiIjUj2+skPR58Oul+zUX67WzdYOSM4KjbJ
GyU/H30a6N5HYcUF6LM61c5d8jJofkGfUYqbgoIGbvn/cVwalb9+f3+cgj59
VP6limvQ55LKP0RxEPq8qfKHpfPHTfjVe1T+iX++uuLJI8ecPocUN82QPui5
WXFBSfU37PYi8WfESZ8gP3mPxi/p4w0nfVP5k0E/++0h6aPEQwxfIX9y87kK
+8oVSnL5zJIdWybOvPOW7FJu2VXyuSw79lB2mPRrNU5rys6QvqGxS6QvrH77
jcYd6eeqn4dLH9JHq5/UVvwL76f2rWT0Z7/1HbPfyrmLp8bOf+aF79e7fIap
HRsqH/gXilvb63cpp3u/RfnA2ReO1DoS+eRQ/IidgbdU3Pdy/2ZLz55Jcvlw
/rPQsB5Fb35/yKUPUpwVJZ3hO4iP0uTpsbf0zYCeikNf13og/bms4jjsP3yy
4qmHigfhsxXvMJ/Cv1HcEVTcHzdRnj6Kg/Kp/8CnK36pO3Hojzk+vufKyT5m
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
Pobb+QI/Z4j2L/qq/7t1ftmrglqXhlfU+tUy6Ua9sNtLpr5/8s9ns7v8uYcb
HdLpu1+iA+fxTmvfoWu++fcuZUp2PJfat/Kt+/W6F7zsysN6UYsSl1oG3wis
Q9r1JXe/Rnbj+ZGZZ64uGygn53bWZ7hVKflMYP2Q+Svy1ZNRl/Jkd/32dcVr
0YfW7L3y9i43X+RWOcdrX4b5gvp+GLsxbesPHrrxS1zAejIcv8WuPxP/Er/D
WQ9ckvTj9y2XBnhbzUfd9nwy4ruRaR3vq3Wz0Wb/CN16vby3ydfVAumZR9pr
nQQeLT1zVLq994snw9z7eJzXZZ+R+9fwzOVeOlur3HH3vRL4U51+KLAy9Jx7
xwD+ea/lb+ZvkuS+VwLnnhrvxMIn6d4N7y3AuQ/Fu69w7hnxrg48v/Ln/ju8
v8rDPW74kyo/72zA06q+6MN7NVm2XLqT9dx09z0R+JFjX/456I1bTgf4l4Ve
2dSoyX2nA5x7eegAr6d7SegAv6V7WOgA574bOtj80QE+SOVBB/gBlR8d4N2j
8i0v+/Cy04Fztp/N8tXJX3Ke0wH+u+5xoAN8ne7FoAOce4joAO+s+3roAH+o
e2roAOd+HzrY/NEBvkblQQf4XJUfHeCJumfBuw2cpx2i9xLRB869eMYRvJfe
q0E3OPd20Q3OfVV0g3frWiI09xuZnG7wJZV97Z8om8XpBu/7T71P/9yWxekG
j1N6dIPHKH90g3PvCd3g3EtCNzj3bnifEB6hexm8cwjn3gE64ydkWnB2YrkX
rjqd4bwngM7wd4LKtOgUH+Teq4Gv1r0kdIZz/xed4Z9dij87861sTmf4uN35
D1deFXgXC155y9xfBv1v3kFn+FilR2f4p8ofneHcO0Nn+B8qPzrDZ+veEDrD
uReDzvAWuveBzuwv864COsN5xwCd4c/rHhM6wz/pGr1+0AsZnM7wpUuaL80R
m9XpDOdeMDrDWW9HZ3jynbNl+iwLfKcAzro0OsO5F4nO8Ku694fO8PS614bO
cO6FoTN8onRDZzj3btCZdZtqut8E9/unR927E+hPet6dgLv0eteCdiE97xjA
SW+/c0p67u/DSW+/f0r6d269MT0qa+D7p/DY1YX/zhEe+P4pnH0B2hHOeg7t
CO+t9LQj/FvlTzvC31J5aEc49xbh1Mt+F5X03O+Dk95+L5X0JdSOcNLb76iS
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
pVL6D6RzH77LYPyZverP8EnqD+U1L8PfUH/7VvMvfsJljS9f6nnBPY5f1DjN
o/Mh8FI6d+S+P6787X4T3O43wdlvGqr5i/yDG/vHL/bQraM+V6LqmAvHHWce
XCD7E6/5Hf6e7NgVwweLt9c783DsZA/DT5rvRzPfYbffl57w3Zo3m6Sea//b
8X80L5SVzvDeivuwq/BBZl5gPi2jeSSH2hdOPOu+2yKez8w7zL9Pax4kPZx7
T4vk78F5r4B1Zvh7OvfCPMJ8d1vn8ZiPmEcmX199/PqI+/+Zvw6aecrF469f
LZ9m8tX/zFNd1Y7kg90u8GNKwhdF07h83L7tnjkNK9S76+oL76J+xXeFsFf9
PhuyKWuLwPeg4RXKrvqw4hOZ3TwLH9j17swHtwPfg4av6T6swdXZge9BY8fK
fDGs/ayBge8Cw082uD/vyLOB7wLDuffEd8Tg3JfkO2KW811gmw/1hR/X71Jf
t0+nclJfeGiXV7MPzZXOfQcHe2u/4wy333GG2+84w+13nC2nXjYf6gW333GG
2+84Y4czmHrBbXvBT5n2cvG7aS+4bS/LqZfNh3rBT5j2cvuMKiff1cLe7lA/
pL7wweq31Bf+gvo59YUP0Lggf+zzOxpfx4y97aNxyu+S/hmN007G3trviGEP
18gOkB4+W/aE9Ni9DDoPP1lxEP5/su5hsZ4Gz6n7Vv57brGOD9P6ZxPNU3Du
u63ROg+c+2LEs3Dui/XTd2oo5359f7O64bHiRVUe7C336aaqPO7emcrTR/WF
c2/uoMoD5z5aeq3DwLmPdlH6wLmPdsGM33Ead/57OMnOPnCfxX8PJ8lx7rP4
771c/k96/72Xy/9JP+sx9qH8Y+wDcSXzEd9toZ/A06mfED/CB5p9FuajBdrn
miCd4a8oLiZ/+Gr122Nm/YFx4b5LqPG1WOd8mEfo53FmHqSf3NM8C6e9uF/G
77p1fnHqSznDtE9HnAsfr/rSz+GHdM+rmznXN0L7qvc/9p9npvwHlR7/Ac55
yLXKH77ZpKe+2XSONFrr0vAVGi8NDe8l3k/reM4+6PtxfQyfbL57i27cKy+n
dVT6Z06toz7Q+h58ZuLs3IPP5/BNeUy/9d83C8zj3DsLkf8cWB/239N8/jH9
3H+vLDDvc/+rvYmDeIfhGzNvMn7PpZ6rvvqfeoWm3ue59p96hYzy15d5Z5b4
m7p3Bn9G9+CGqr5wyrlK9gHOeB8h+wDHPkyVfbDpV0kHm/9F1cuuewepXrb8
jBe3z6h25zt36MY9OOJieA3zHT0434EdavY12I8oY/ylRPktpKecnONif430
9vutcL7fyndabTmJ3+H2O61w9l/glGeUysP+Hentd1fh7O/AyedtnUNjv8/p
oO+o8v0vt9+n96/Y74bzvaSqirPc+pXiLNLDW+k8Q3XFa/BXtS46QPsy8PZx
YcVbDbvpVdP8SxwxX+tOczUvwD9o/evf8c3PuPjLnV9V3PGO/Bns52H5P10M
xy/qr3iTfI4ofq+t8sPfT0rbr1jxgF8Ef1t+Wgetj+GP/an1MfxM5qP+8vfY
f4f31jlV/E94efmN/bS+R/5RWt/DrsJfU3nCzHo48d1MxR3wROnwi+F7xA/I
zyH/NlonJO6Dvyf9O5p19claT6isdUvmI+67/ajvkDJfFNV8kS/+33yF+Fqt
E8J5H++yuafGfbSvta9Ee03TvhL+uVs/lM5hGhfwXVqnGqDvisK76juMXxr+
vngd7Vvxu9wjw/8nPf7/PX3fEH5P34VMMTxFPPgx8xocO8C51u1mX5jvQ8Ub
/qY46cnnXdmTU8Zf5T0cvtcJ53udq4zdqyO7d97ElUdkn1lPhvO9zl/M/YWe
OocWIvvGeEG3MMOvibfX+jO8m9rrLcM7ihMfufMVuo+ZXvfLaN/yul9Geuwb
8VQnY3+OaHz9aurVR/XCnjO+Bnwa2Xteusy+s6n33ALtMuPFi93KtQ73Zde6
Inyd7qMlaD0Wv4t3LykPnPcWKsvOU68Lf+/fGvJGqK+v7La7F3C05cVWJ1Pc
ehG/yzpGQe1fUP5vtX+B3YMnLtn0QnKhdE5n8ieePaLyw3/MdHL7gzmBfRna
i/Wi84qbqBfvfjNf047F9H51Pc3Xbl9J72z/IT+Kdhyh98BXyC+C7x9Q8Gzq
fbrU+43XHL+tfd5p8ldp33XHio7vMDiLW69w+0cRHWp/1CuLW6+Af699ZOYR
eEXtOw+TH4g+r0YeTlvheLhvuvw6t7/T7sJnX14L94XIT4N/pH3zpbLD2Jne
2pd/Suui7l6D9vF7Ko7Gj12o71ms0jqnO/eu8wl71Y7w5nqX2P+OTGA/oofO
aaTR+KJfhem8xxm1r/Vj6yvepz/k0rmaaN2jdPsO2j/aof4AZ/+lrvqD3V/4
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
XVO3Pik79n+p3Q9+
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnHkcV0PUxu9+f/ayhGxFsiUUZc+SKBERRRJRJEolCVGWVJbsKqGQypYl
2SsVQmmT0qIsJUsIRZbe59sz7+d9/5jPOXfu3LnzuzNzluec+dW8uGvLq5Io
ih7MoygVPTeLor9FZ+jifPEbxX8i/r04iqaofKvrpIiiGqKviE5Q3Y/ij1X5
TPwklXXiL9KzA8WfJbqT2r2nuqf1jm3E/yw+L6PofpX3xY9RfVXV/yJ+c9VV
13Vd8YXqbtTzH6mf60XP0DhOUv14DbiJ+Ib0Kf4k8Q3EPyV+Z5UdVRrp+kzV
NxF9Sdenij9e/LPiW4o/WfzL4iuVKLpL1+fpvQeKf0f85nrvORrDNWqzXHRr
3ZtC/+JP0r29NJ6bRS9TaSH+I9HLVc4UP0b0K5Wl4ueIttU7dlI5Tc+fpeuB
opeqnx3F/wYv2lHlNLV/WvSa1G0W6pkddL1W/FuiTVRqqU0/0c4qLcU/KzpM
9FyVv9TuOo1zV+ZH/T+lft4Sn4pm+l39Rc/R/SFq+6/qv1LZRvVDVd9e9Tur
rz9V947owbreVvyf+uaxrquKr164zRzmXf2fKn6Q+E7iW6v0Er9C9Dj12Vt9
nqk+7tVv2JP5VT//6b1tdN1NtGnq9TJG1y/quqXoal031LMLdG8f9X2e6s5X
qan69qIXqdwnvq76vVF0N9HvMtc/J/q9Sm31lYkerX5Wq5/D1U8V3T8z8e9p
FdbFWNEj1Wap2hykNkeIXyz+QPFTY7dfGdqztp9Vn5sV5t8QPVztF6r9fuKP
Ev+l+EPEb5f4tzDmI/gdog/ruplKB5WmKnU07gtFN6h9pnKQ2rwmerz6uU7P
tNT9C/S+XOOYresTVd9X9GzV/8bcqP3voier/kbVn6X6xuJvEt9K/K+F379W
dD/NxzHi14s/UPdGir9N7U5Q+16iZ6gu1VjG6l09Yo+fb76tyr655+gfPdsu
8Zh5d1p4b26t+4+p7hDx4zTe4So91cejon+qzQ6695foMXrXH3pXI/FfszfU
Zj7yQ/dbq9yv5+/SOAaLXqY+T2edqY8meu6xzHvtPz1/utpmrCddH5e4nwPg
9UwrPXuonmslvqP4O9TfYl1/p/tLRBcj08Q/IPq5ys7i16rPZcyp+C9Fm+vZ
dnr2Jj17h9rso/o883fke1bVO89jHsS/ye/OLVvq636d3LJljtp/GXvv76dy
fuqxvaX2rxZeU/Rzgtrtovvrdf8Tve8K0a/Vx+Wq20Olg9odwF4SfUL3jxd/
jvgbxd+nMlH8ML6VnjtU/Cjki/j64keKby6+Hs8GucccPS7+XOZe/PPij9N4
1rFP9Z1bs85U/wJjU/1frEPVH4ucUf0xetcJKueK71taLr3C2lbdDqX7PFD8
Fqo/Wvw+Qb69Kv4R8Rciu/W76onuq/ojVb+36vdn/4ivLf7bzLLya9Gz2Luq
f0bXVUp/W77xU6W/Cd/mbvF3ir9cfL3c8vwG1d2OvtG7fuG3qf8hqm8jeobK
PeJbi3bQb7tF7T4Q31Slv+p/5Leq3Cv+CvU3o7A+Q7bfqr6eoI3G0xP5wjyJ
3qL6x1X/g+o3Fm7TGx2ReF0drnK32h3K3hK9TPWdVE5Hb2mst6Inc+vHP8S/
Lfp97HXbILbMuDjIjZ015qf1vsv13CCVG5CLevZBvqnaFqKjVA4SvyVj1L0z
1eY3PbNK17urj/GihyFHRK9VfxfoXlu1eVf3uojvI/5T5JXGcb34C7EJcut9
9H8nld1ULka+5f4d26q/dnr2AvGT9Oyn6rsaNoHqOuodXdm7ajMv7H1kQCuV
oWp/tfoYonvDxHcX/5Ke3U19vCD6idosUvuZorODPkWvnq3yiNp3Vfu9xK9C
v+teW72rnt71AnNT2E6BP0/8w+K7qf0E5GBov09p+VNb9CZ0aBLmNTHP3Jyr
Pq9Snyv17HnirxX/C/pO/NXivxffRnx38T/knnPm/kDRnwLPGjhbbTamlksn
6PowlZvU/xL9zq6iy8L+aKL203Vdqv1AtW+DLZS5j/uQW7q+Gjmpe0er7VGJ
53gez4vORW9UvC7PVdv9c6+5+uJ/Tr0vNu0PXR+DnVRaxiHrBokuFj1W9bsH
GdYosRy7UH3W1vMT1N+TeuYLte1Wsbxjbz6XWB+jl1epzULVn5JYxjYL6/cq
3WuhZ35VXT+1PU38qtTy5HTxP6WWvT+kXj+so+aq/za13Gsn/n3xvbFxSve3
C78rfLfTRWvougf7UfN8ltr/q/a3q6458lHl6tjP8OwXGmf7iu3LKcgH8X+q
ff/S+uLUxL/zdORX5DGnwcbA1the10eqzXaiXwedhD5ClzZGz4vellsmXIAt
JP559rv4XXLbqXshz8W/oPqLsYfFvyi+g/gHxI8Xfwn6QWN7Te8sxH+j8kiw
2TYTnaw2UzLbcW+Lz1LrBnTEpWrzFXIy2Ler9M7hyFv2f27Z2Lq07NolsW1w
a26Z1rb03qyltktEe+WWn6wrvjP6eE/RZSr9gm2JjfmY2nyve9015uV6thYy
Obftca/uj8POFn1Tdd/oGx2fWD6OV/2h+BnIAfGHiZ8q/mXxDcRPY+2F9si7
b1VOEL9/bLnC968ZZOeJieXndkH2DhH9R3UvaQwTxd+lvsaKb6e+J6gcpf7f
V90Y9oz4N8Q/K74uNjS6RmUc8lB1rzLvqp+uutHi9xU/Ufxz4g9iDsQ/I34/
8a8zt+IPEf8u8y/+YPHviH9H43gKmY9tqfoDNL5/sanoR/xD4qvrG45W+86l
5faVqv8bnav6J1LPbzXxI5G12OziH029fhqojFL/G9R+O9WPSL2W1mT2az7h
u+u6s+hPavNvYT/lP9Ed1X6U2nfS/arih6den1uLfyj1d9hK/IOpvyEOZNdg
y+2k+idVf5nqtxA/JPX6fz7IdmT8Zqq/G/9S9VXED0u9LzYXf0/qtbeL+GfE
XyG+YWm9WU/0UtGOwZ4vKtbNrOFhpfXGItFu7PVg62Mz/Kj6X0TXZv6Gv4v2
Zu/q/uhQ113lgchr9ijsYdEWqjtD5RpdDyz93fALDy/dP+O5mXlR/WmhHnmL
3D1H42qBbZ/YB2HM2/DNK7bvH+Adib8d320sa0DPHFnaNuZ7orPxZbuF31JH
93cU7Z/YfvhZ/cxjDarPV3XvGvH7iH9FfE9kofj64qdoPI+yJvXcHbllCWvj
Z+yZim2v/egncZuXdW9qZtpLtG7iNYkPfJnaX64+l6qfI3P/RmRgQ/ZcYj00
Qc88KfqqaKZ7tVX/j9pOzrwH2YvvhvXPPrhIfd4sOhX/V/w+6v81tX9LdQ+q
zVd8j4r1yij190bon/f0YjxBx10t/uwgVz/JPLaPRS9MbdtP1r0F6F98CdHa
av+y7vVQ+yLxfNdVfS3Vj1d999LzTz16pY7qtxf/h8a5PzJZba4tva6vQH6q
za6qH6P6Lnxv8RPE96KN+LHirxS/u/jpGtfjzLX451R/lfi5evchrE/1s1Vp
fsvSviBj3k31H2aeh96i9fjdKrMjYxNTwv291OeL6vNqPVtT/PPiu4rfU/wL
4ruJv6W0b4L/dH1p/wI/o0FhOx97v6H41uJPzL3O1+jZD0XL0t+ftXRKZp/r
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
To3JIZOXJMZs3mSLi96Z29fAngS/eUM8gX/sw0+RvZHxnndFC9E1sX0E7Mub
U9sVixP7FPjyfyfGaWaK3y41XvWJ+G1TY06TxVdS4z3gnH8mtj1bhT0O9vOO
aJ4au5okvkyNA4GF/pUYQwIL3ZDYt57F3k9DfoHK/Mg+7uei1UXbBjsYW+L2
1HYy9jI5B3yfrVVfU9evx75+KcgQ4gnt0LWR1y65AMSnvkgdtyNWTRzvjSAP
kYv47gvE75w6d4G5qFI4Tky8uIIeU/khcj7DW0F3oEMOKLyf5uSONVdP/Mzr
hePh4Ax7J9YpyPdahelE7GjVV0vc7wexx8YzYAyfiu4g+mTu7w/O8EFmeTYt
9e/hd92QGWcCgwJrui63Xw/G+Gji2PQmGaG+t4i9h4l7s0fwFVZmxo2Jv1+l
MW0We+8Qw8cXwCdoi30XW14g0/D1bxG9UnS72Pq4v653jI3JE7fHb8V/vUp1
28fW64NSY9dg2JfEjmW0jxxbJkb5uurbp/Zt8XGJeyG7JorvGNs/xyYgzo+8
wv+4SHVbxX4fuQCMEd+FXBjWNnjVe5nl+nup/VkwGvAZMNcPRbfCVs2sB8AH
wD7xJbdJjaHOYL2JXpdZt4BL9Mj9W9bnjl0Q+wG/ANP9gHUr2jz2WiKG2ja1
P/42+70wDkK8u0NqHGOa6nvmlgnYae11f9vY/vnFolvH1qMXFd7f26JTUvuG
+IjkLzC3+HPgVcvE75k6L4aYxXq12Vf3GvLdRScXXj/YM5MKx3xZw3vkjiPP
w36OvS5Zk6u1/hpjm4iOUJkYG0/AbkfO7xobVyO/YERiPbJC7f8orXNmBP3+
YuizRuQ8BfRIzch21vRgUxGPJi5GbGpd4TbkS9TNvU4+y72XsePQofRDrgk5
D+hmdDR5DeNDn9hDu+eOcc8VXRFbH9WIjZEerLbTMuc6kPNArsV0lf6qu7hi
nPNA1U/KjPmB2b2fWf+yd/cONtJzwU7CPmZdE4faNnd8/5MwZn7rkMT+Atga
sY8quWP9H4luldue/BAcJreOI66xeW6dSMzi78KY8gFg+7lzBj4W3TK33fJB
7nEhW8gdQf68H2xaZBMyirwQ8sOwnc7OnB+G7dImc5wQu2oicj22LYXceVX8
J7FlCrYSNtN7yO3YtjXzAUb9pvo4qGL7i2fBd1irrNu+QV6Bj4OZg82A0VSJ
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
          "]], Polygon3DBox[CompressedData["
1:eJxNnAf4T+X/xs/nzK9IikhpSRnZSYMWlUJWS4iQrIQKpahUUqlUKKWSqBAt
7aFJC00NEdqlZVRI/e+X+/ld1/+6PNf3uc9z1uec53mP+34f+/cZ2uWCOIqi
5mkU6V/UtYiiSfr7lTbmZVHUU3iO8EbhnYV/zKMoVv/CUhQ9rv7QLIru1PiY
JIraaHyVTrJdY0O17UtOqONraP9b1e2i/depbdb4cOH31f9JLdH4Rdr2hPq9
tf98jf2tbZV0vlOEBwkvEY6FewjfJ7xeeCfhP3SNwervrTZf/e4av1fjPwuX
0/hmnfNH4Tkaqy/cTuNnC7+i8X/Vb6/WX/hN4ZLGX9XvqSl8K/ck/DH3rHvb
X+069bdqfKbGf9X4Vzr2Gp33Y439qW2Xqj9c49PUH6vn0VrHn6l9bhFerf0z
4aU6x+fav4baZepP1TEljdUV7q/+2dp/hvb/RdvKa/+JOt8zwrfrfG2F39Ex
n4TrDVC/l/afq/4m7V9R422FewgvEt6u/rlqjwlvE66s8T7CC4S3CO8q/L3O
8Z/ON0ztW/X7avxRjW/V+G4a/1rb/tbYhdr2kfo/qEUaG65tj6h/le5vujbd
qPtbq2Nn6zdU1HhzjQ9S/xtt3039c9SOEl6rdobGb9Mxa/T3aR1fWf1L1B+h
69XRObqpv7+2/aHz36Q2Wsd20HEfaGyi8KXCPwq/L3yb8BXCnYQ/5N3qfIN1
7BBdd5nwn9p+kc53u7ZtVv8sjQ9Qf7DG39P4OrZp/CCdI1H/Rp3vEvXbq79c
480Kz6/fhT9Sf1cdX0vHt9Lxzwtv1XZtiuoKPyR8iNpA7X+MttXTwO5qddRv
o/EXNVZVuK7wScIvCf+i4wdo/w7adrq2NdG2fjx74cbqb9e4HkvUQGNzhf8V
LifcUHie8DZhXkk94YeFt4R1XEf4QeGSrldBuInwAuH/NLiTcCPhR4S5+fJc
S3i+cB/hkcIXCX8s3Fd4lPDFwp8IH6B2mu6vsbbtpbFN2r6nntd5aq117ne0
ranG7tM+z2rfWG0/9Z/Q2Gfqv6vxQzQ+Q9ueE35PuJnw/bGf587CNYSX6byH
6IcvEa4nfBdzReOLw/ObJvyU8GrtV1HX7qN2jK4xDpuk/snqv6Xx7zReWXiI
Whtte03HH6Djb9Pxj2n8S43vrLHeakdzjMYP1vjdGn9G479rfA+Nnat2nMan
6vxXq99F/U813ohnpn3TMB+/199zwvx+VP2v1E4V/ln4QvV/VjtXWKeNRmHj
wv0cl/h5TNH5x+n8nbXfCuG6zGnt943wxWW2W9ivw/W3l475Wtt7qH+Ktp0m
vF6tqo7vq3asxq7X+Uaq3079t3Wuemo9w/vbqLFdgr07NvH7Yr1cqPEhahuY
axrfQ+NHanyhxt/Q383CL+ucozVeVdtaat/O2tZS53tXbYXGrtXYo4X9QXuN
19G2Keqfr/Ndq30v03m+0PibiW1ZF40fovH9ta2D9q8pPEHnOqLw/bB2P1d/
T7Urtf9QHXeenscezFPhU7X/PPU/135ttf8F2tZW/X20bW+1x9QeV7sJO6mx
f9XeEU6D/WmWeD5kwlWED2V/4df0d4Pw8zr/JTrf68IbhTsKN0m9PqsJ19f2
77T/EB0/Xvhy4ZXCFwvfJHyl8CrWj/Dh3K/wq/gG4XnCd/AuhV/V39+F2+v8
jVjb2BD8s7Y/ofFX9Pc34Wc1PlLjzwp/K/wPa1S/7b/Y/qKdxidjA7TPLrFt
Cjb29WC/bo/9+3ZSq6/+bG3bVc/7Ve3fUPhV4XI6/ulgm/rr7xnCizXeVP33
ta2q8H3cU9h3H72PvcP6by/8ssYWat/2wrvHnp9Phbm6R2x7V1P7dMLXatt+
6lfQ8Xupf1Ti9fe2rtcs9pxbgu3SeHX1WyRe/+WF92TuJbYPxAPna/9rItvs
d9WaCx+m9h4+Qq1F7Dn7kfrL1I5Qv2fk9fSp2k56dj3UjtTYM2p1sF88Y/3d
J9ivU7TfIl2vYh7eh/ZrpN+faVtt7TdL23bRWKXc73OExhtr/HMdV17nPlut
hbbN0P7HanyejvlD/QY6fyvhM7Xfa8Iv6+8vwj21f0vtv1vh98F72aJ+ldzz
8zWNNdH5dy38WzuxZjX2hs53oPqTY8+fQriq8GE675Osv+Cf7oy9vmtkvp+2
Gh+o87XmfMIPavy34N/wV/itkWX2B9WF5xH7CLcSbq79Z2vbr9y/7uF13fuu
2lZS/zhtO1T9WZxD/Tt0vSeFr9LxfYi/sCHa/3LsqPCLudfea8wZ9U/QMcer
/5iO36j+iWonCD8uvEn9z3S+84XfEl4s/GmIB4gf3xT+XHiI8NvCS4Q/Ee4i
/Ezs591QuLVwV/3+1/m9wicJrxQ+QvfzQu61xz3vrn4zjZ+s/iqNH6nxkwrP
b+b539gqjd8tfIPG1wi/rmOW6fgr9Pt6a/8VGh+o8cXa/w2NX4YP1Xh9bXuB
GFLjXdX/Uf2W2n9d8MdLtf+72n+s9l+q/Z/Gp2mfQzXeVv2v1G+h/dsUXn+s
w7/Ufym37f5A26qr/4Da7cLfCO+j/uU6/iH1x+v4hjp+nrbdpfEt2jZI/bEa
f1j96zR+ksavyJwfTBA+WfgsXeMu4e90vUL4dN3fRB3/FzYP35J5/Artf7zG
T9b+3fEn2v8f9e/XNSZp/3XEF+qfpmNuCPhtHXOW8K3hft8T7is8LdzfoerP
1jFThDcJn6f+w2p3hOsPVL9lYXt9ja73g/pHqx2E/RX+ifmofa4pOac5Tf3J
xLjCN2BTeVZqVwpfz+9Rf3bmuXm1rt1Xv+cY1n9YTz+rf4P2GUWsz5rK/Tyu
L9lnzdX9T9O2a0vOGU5X/1aesfA44ZPV/0ptjPBVwqvV/5J3VLIPXKn+TJ2v
vK51sXB59b/NfK334xD/Ck8VXhfbHw1VWyK8s669v+73AmIq4QrC+wlfKPyO
cCXhWsLDhN8SroitFn6GHEB4mK51sPAQjS8SLsPPCp/PmhcuhGsInyf8rDAB
T1XhhTr+Ud3/ftoUq9+vsL/Cb+2u8Yt13qc1fjXzUf3+Gn8O26Hjq2l8qLYt
KNnnXYDvDfHhxxpvrvFlwkcIPxQ7vt43xJcdNP6K8NLgf7FnxON/afteOt8A
tROwr8Fettb2F7A1wmcJn5t4fQ5Qe557Jy7U9X7Q3yo69gK1k3R8rXD9Fdp+
GPFJiCc/YG2STwZ78mRs//9hsPePxPaXBwofKfyZ9j9c+38U7NH82P5ms/AU
4bWx46fBrGnhnN+h/YfjM/E9wgcIP5n7WTcV7iH8a4hPVsSO75/V+EJiDW1L
1R+k8bHqV9FvOUb7/yZ8nfCnseP/VZlzwXeFB2j8UuHJ/B7tP0j4IuGJwgcK
nyB8kHAL4Zd0/QbCW4TvEf4hdjw0OvyeF/DbGh8hfDP+QPuv1vhItWXYWuG6
jPMOuT/hOsKjhJdHjkXqMX/IKYQrC9cWfj7Er6x38qfngv8bGztfuoicRHg3
7X+Q9v8n3UFZRAcLz1FnkNqLwhl5DvY/xB/jY+dfL4V45YbY+RPx/lPkEqxf
cr4Qn0yInW89E+LL0bHzs5dDvjMxdn72bIj3Lo+dT+6j1i42X3CN3k9ZZnt1
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
MwvzKW0DP4j+R21Uf9ZcbhuMLT6PNaX+8Ny2lvdXD9+Vu/aWmsqG6l+Uu1aW
msbGvL/E+ik50Yjg/7ENsxJrB9SpUK/STdteiq0RnBiZE4Mb+y+z9kDMQexx
Se5vB6jxOkL9fzPHIsQoxCrXZdYan04D35r52wzmPHOfjy+4PjaK2HdSOP+d
ibUNNA60iImJtY/6ufmhlmG9Y5OxzdR4Hpbb5mJ74bDg87vm1vouSVxfgZZG
PcgVkfVyNFK0M2JyYvPuuW0bNg57hdaG7cKGfaZ9zsod21+auH6DYifytTWB
76JeiLmIz4WfJdenPoV4mbh5QuF3R60bei6aB7E9OQW5xfjCWhE+F9+LZoNv
g7ODu+P7J3xtb47JrdWhX+Pz0KPxIfiScyL7b7RA9G58IPo0PgpfdaZw8+CP
4BI3J65X+i5zrQu5K/UOv2fWDskVqZf4ObOeT25KfcbOqesjiO+J83/KXHtJ
bks9BZxF1cCZw2VcXphvgLMhf7yq8LvCB+ILqaH9Btugc94X4gHWIjk9uT3r
E22Ums+7csc3+PLaam1y19hSb0RN65zcet85qeuLHg7rndrUHTWquWtaqT+a
ig3Avubun85vyh2vYBuoWblb/f65a4UnBH/wSuZ7Lantnbvmdl3kmtt71V+o
8TNLrgHGPryduTaZmpwh4Xz4FmwEtT9olGiV1DxQX7wh8/cP1MCQvxEv43uo
gX0os37bM/U9cfwXmbUgahDIv5hjzDVsyFXh970RuWaI34s+yncjXcLzGlNY
mySmIbZhDjAX4DOohUFfnZE6hiWexQfgCxoG+39J4XeNT8I3UY/MtxWViA9y
19dj69Gg0KKuKMxNEzMRO1HnRb0X+gXfFI4rPJeJMYk1+V6G74nQnNCexhae
y8RoxGpLEj+7NWq1EtcnwT/hk+CnqH+Gv+IbFvgy6oPXl1yTQy3QD5lrR6gB
gn/7XnhM5Jof+AP04WmpY0BqOf7IXHtBTRL58prM3AA1SfAFrBnWDnwLtUes
GdYO/A61TqwR1sqYcP1hiXkg+KBVwb9hq0aH+G595lozaqbI1+HwqO0k59zB
7WX+FqQs3B85MLXK5HTkxs0z23ZsPP4G+44WTMzZJMwfcnf0KLRNNCTeBe8E
+049Pb6ImhjsLTkvtbLkkOTC1Kvia6hpxB+1ymzvqKnB3hDfomUQEx+bOV7D
lmPT4f6pv8eXUAOJv6JmEp/ENsaoaaK26aQo1AqXuZaSOcC3BtRMUjuJP+Db
AupR4O75xoL6C7YxRg0m/pF8jdgSThvtiW824Pk5Zlvuc3JuOC+4r5aZ5yNz
kO+1qJmGF4MfOyh3jTJ1dtTb1cydD9Gnxon4Cg6UGkxsANwo9cr4amq26gT7
gNbCnGWc+Je1xRo7MPc3Muic6J3TC3/jhy7DMfvlzre4Fzg7aqexT/tE5mix
p3C23VKvB7jcv9TfHvmbAdYnNRBwpcQIfG9CfQTfRbGGsWfUqFKryj1z73wz
gy6KPnov2kfm2Ihvdvgeim92qBsjhr2ncHyIlvNfuD75H7WcyzX+Rm5/R60C
Pot8juf7SeKacGrVeb4fJo6v9gjxINoC/u2OwvVAL6bWyNHbiTnQesk3iEWo
11go/EDkeij4FXQs9KwGheNHtAv899TC9VBwjPD/6A3kB3zj9Urk/IX5Mje1
HoH+Q35KjS7+qFPm9UzNMPWVHXPbrI9Tfz+FLcMGvp/6myNsI/E532yhL1N7
8D8NGc7igcIxBtoafC6xBxoxuiz6LLUL8BFoMeSw83PH0+NS5xTkFvCTcND4
6MGZYxjqPKn3JLYhRqIWlfpVYif0Rr5RZc4z94kRqFMkhyV2oMZ999Q+itp3
alzRhdEUP8tds4tNx2ZgO5gPi1Lr5ZXCfERLoN53Zu75vDzx/OVbVub786n1
eWqr+KZmUWIfTrxOfgZXBl9wW+F8bnjqHIVcBU4frQQOC66f/A3ub7Hw7YXn
7xupazao3UDjQOvAhmHL0BDQEvhG59bCHFiaWMOAG0PD+Cs2h462AYf+U+wa
Bbh16heI/YgB+d7lfxojNXmHFtGOwph/En+vCT+AxrEp8Hnwv8wh5hLfvBPv
wVmvD3wgXDY1nUsC/wsfC6fIt/toAnCN1NNQu9NdrUdmPoJrwSmcmtnfoTXx
fw58l5sD5/8OgKOEG4efhk+cGdYPmgL8NjUsaA3UZCwPfDC/FQ3nl8A/wmej
ofCtPJw72gr1UdsS52DkYmg2GwOfiZbTK3MsSUzJ9z5oZGhlaCp8PwRHBFcE
h1k5t+axOvDto8J8pC6W+thTwnyhbpr66Z2Dv4bbxqcPzMxnMPag2pjM/4cB
cQc+Dx0Afws3jk/vHeZDw9Qc1fQQn8Gtj/1/8/+m1D67fYgf0B6ooaGW5qTc
uSz/JwL/H8DGzPdKTkKtOvV81DlT73xGbpuB7SBG4fsl8hVqO4k5qPejPrB6
6m8+OJ41y9pFU+qUW0MjtyHHgS9mjbPW0aDQJwaHeJ0chv9f4u/M12Y9w79T
Y0j9DRoU33NR80ftHxoS31vBqfNtE5wwXDvrDS2N74XRKtEg+dYEDh1tknpQ
tBBqUqgXRYPj2xE4cLQ5NEq+PYGTR7s8LnctIzkOfOP/AVoHOEU=
          "]], Polygon3DBox[CompressedData["
1:eJwt1wnYllMex/Gnnvd531dlSpsJM2k1lMootAxDWoy20YxJG0rRUCktmqRU
WrRq3/eYTDtFtIxJMVrM1ZDKxKAiXJp0MSVlPv85XVe/3vP73r9zzv3cz7n/
5zyVuvS+q1fRTCazg3L0T/+1zGYyi8G6fEW+aUEm0wF7DfsdVgebm5/JjCqS
yZzErs3LZLrys2gkdgSrgXXmt9Mw7SfppL5l+P/oP9B4P8GewB7i91ELbJG+
12M/51fLPmS817Husqv4XfitclOxqnKX8G3c3wDsIDZMfqpcM6wTthXrIHeT
XCusN7YPGyx3SK4ofrHrb+O7aJDMk/SZ9ufU3bXbZPZQM362vldj5fkvqW88
K/dWHD9hvDn0tLGP8jXx+/g35RrJPYNdrm8J/lfmaIxNx2bQcf4LvA82R798
7Ct9e2BD4nNipWmiXEO6Ue4pmeH0WUF6hvEsS8qUognY29iv5abIVHGtFH8f
9dQuIlOUnpHbiTWUGyN3mWvF+Xx8o+snsKVYAT+KzsktwC+KtSB3np7BPuPn
yT0Vc9ID2l3w72mEfsPptPY0fc96Pq1l3orngI3X9wr5i/kichX5dXKraQ7/
FJ2Ue59v5lorud10W4zHV9O3NH+MemEX56XPGJ+1qr7/5h+jjeatxnf0XJtq
f6rvtsjzJ2T7ae/FHtf3AX4jXlv7ZryP/tP1HYsvw7by22g+9jX2mMwefQe6
1pV/VN8O5qgvs8+1ynwvao/dhL2HVefHUGVsIbaIZhtvNFYJmxWeZmG3UFN9
lpvjBnOUNcdh6oE9LFNDvrl+r2PXY89hZeTy+Bm0Xns79gYtiO8Wu0ruS96/
zJmYP9aMv7uoNVZDZg7t1F4oWwefInM/1h/7OtYHLcf+jL2H/UWuLjYVm4C9
gk3DamHPYmUK0ti7+X9Q2YI0T7C75b7ClmF9sXFYFb4qTcYaUM1sWvOx9lfw
C2mH6zvpHfmlUcQ8h5ly38qsZCfHmox5sTXYavorfzvdg23iX6Ht/KeyD2M7
+R76duBr4J35BfRCrN9YF9hx7ZZ56f2sxffE7/E93Bj3Yowr+U/0/6N2kULX
tNvT1bJHZT6lcsY8LbcBry73MvmXOe3a3bH2mX/JHKY8Y7TFhmTT2o013EHf
o/FOY29hj+h7L99Erj32KtYWq42doWHYB9hErD//XdSNeLew0VgvvrG+d2Hr
Yw6sMnYtdl/UGve1luby3+KD5fbjo+R68jfjTbBlWL2o91GvsTbYWux27Mp4
d7HfYuuwJlilXKprN2VTPYy6+CI/JpfqzyZzvkrzClLtvF1uqcwSeo1vRPWx
mXx1+UL9Ho/ahr1JH2Hrse1Uj39CrlwsFX4vNY+6i12DXcp30Xculk9bsClR
O7HZfF58R3Qk3gWao52jzXLPynXGpseXmE3rP96D2Btij1jiM5Sg8TIfR33y
HTZ17Q/a7agrPk+/gti79J2KPRLvF182agy2GOuGLeJLZNP7Ge/pA9h8vpC2
xXuH3YvNiPUX6xybGOsbe54vQ7uxRbEm3cOBbKpXUbf68G3xPPc8M9a8ayP1
axbnAfqNdveY299b89Mai7V2BrstP+0NsUfM1/cH7Gm5O+I50x3a3bAdUZv5
KuZros/vte+mS2O9xFlE33fpp/wSOqD9jX4V5EfEHk9XaY/BR9OMgvQM41m2
KEjv3a6oz/npXmLfOo+Nxs5eWFexv53C62F3xueiO7UfjHUTY9Bz2qVjrKiD
rj+ELeVL0t+x+VhtcxzmGxqrk3t6LL5TuRFRY2NuuQHxPLGr+A1yL1GWP5VL
72O8l+WipsT9Rq3jt/CbqTDeDfy48W7hu5jj8Tgf4MsurMdYlxXUiGP4Oden
xzmCxskcyU/77gf8IVoa9YHG63PcPF9QYWFa47Ow7/j/UsnCNMdy7BIqRUej
bsZeqH0q6rB7H+ozXGeOj7BGcfYzVz/+wfju4qwX9Ulunlx3bHHsu/GMsblY
J2xynBeMtwZ7GuuITcLORM3GRkYdMuYHWANzdDRH39hn5SZip+VWyY2QO51L
55E4l1SPWirXTm5k7DHYQtcG5lKNHZ5Nnz+ew4d886j38Q7xHeVuzKVnNSGb
nkk8m09i38EbYKP4CnLF+IP56WzZOs5gdIC/S3aQ3Idyk+TaYK/J1or3AiuG
/Rj1LT5fnJewi7Dz8d3H2oo1ixXPpEP6o8ZbjV0edRt6AXvdmEPkB9MXEYt3
MM6y2XQej3P5TGw5tdQ+h3WOvZb/MfZauc/jfdV3OF8ePxXPSGY47eC34HXk
xsqViDMkvzW+d2xc0XSOjvP036gu9iesbNwLv4muwYZgbivzgzEHxjkEqxLP
Blsn8wbdwD8pVz7OnXw1cxe653nY5qiN/AB9N8S5ig7LrZVriT3CvyM3COuM
vUy/wAYVTb9vvo+zoNx6rCIdwlbFOSVqID+46P+PD5mzcv3kXox9PPZMbLVM
H2wNfwUdiPNOnIWwl/hKsVdja2Id5FINOe9ai7g32h81OvYTc7SXa8IfyKU6
eq7gQu2h3tqrsMtib5VbkUtnnxr80PiNQ8eihuNjPZf743cGTcN60cqoA9l0
HotzWU9sBV+O9mJLsL7YWv5ndBBbGedBH3x/Np1P45zaO9ZuLp0tx0cdoZn6
vZqfztL9+Io0Kc5W1D+eiXsbY7zuF85crbJpj469+iv+TX1H6HNdnDGN8VbU
fXxoNv1mit9Os7H3oo5jq7DGcb7ifxnvq3ZH/ONYX/o9EWe2WOPZdC0yQ+J8
xR+jbtituXTWa5dNZ784A37Dv4u3xZ7n68tV5YvFOo91EXure6nJL43fidp7
sPbuewn/fi7tYT8UpP0w9sUGVN9Ye2X20OKCNHfcQ1fZT2J9Yf8DPv/z5A==

          "]], 
         Polygon3DBox[{{1873, 888, 733, 732, 1049, 1614}, {1599, 1013, 696, 
          697, 1014, 1600}, {1357, 1356, 1919, 1005, 1006, 1920}, {1366, 1365,
           1928, 1023, 1024, 1929}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rlLnEEYwOHZrJp4xXSJGs8IYmFKSaGloGglBoOKhYigiEkjiUiIEGRz
oGVi4Vloo4WFW1mIRMRO8Dbx/CsEQfAZCOy7z2+a2fm+2Yre923DiRDCpFkQ
sWd83fM2I4Rn3LJOZoZQpnf0U/1aF7GBNWzlG3axic1mUPdwlP38xg/8zc9c
5nZWCHv2TMe99b7e1kP6rV4xB9ZzbDfPkyEcWr/gEQt5HM/CExbzlC95xhKW
mr+6jP9YznNW8IKVvOQrXrGK16zz/O/85qq5sZ5nh1l39n3rTb2s/+gNPa3X
9Q8ucYy/OMwU+/iJ3fE9mQHdyM74W2xhNevj3p5/1561Oq3XdGl8Hp3Qi6bA
ejZemJl65F7iPTKfP5nH78xlijmcYDa/8gnH+cU8jnfCrHhuOkYYpVcQPtIr
CSP0CbsWd///Lw+crEEz
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1271, 1696, 1697, 1563, 1694, 805, 1562, 1537, 1726, 2143, 
       1461, 1272, 1840, 1841, 2165, 1462, 1273, 1958, 1463, 1274, 1959, 1464,
        1275, 1960, 1465, 1276, 1961, 1850, 2022, 1277, 1962, 1466, 1278, 
       1963, 1467, 1279, 1964, 1468, 1280, 1965, 1469, 1281, 1966, 1470, 1282,
        1913, 1967, 1739, 1471, 1564, 2098, 1698, 1699, 1566, 1695, 1472, 
       1565}], Line3DBox[{1283, 450, 1567, 430, 2140, 1715, 1538, 1716, 529, 
       1778, 1777, 1832, 2163, 1473, 1284, 1968, 1474, 1285, 1969, 1475, 1286,
        1970, 1476, 1287, 1971, 1851, 2023, 1288, 1852, 2024, 1289, 1972, 
       1477, 1290, 1973, 1478, 1291, 1974, 1479, 1292, 1975, 1480, 1293, 2099,
        1568, 1645, 1481, 1569, 2100, 404, 1571, 433, 1717}], 
      Line3DBox[{1294, 1539, 1572, 1719, 2091, 1941, 1718, 1540, 1720, 1781, 
       2092, 1782, 1780, 1779, 1834, 831, 1295, 1976, 1482, 1296, 1977, 1483, 
       1297, 1978, 1484, 1298, 1979, 1853, 2025, 1299, 1854, 2026, 1300, 1855,
        2027, 1301, 1980, 1485, 1302, 1981, 1486, 1303, 2102, 1574, 1646, 
       1487, 1304, 2101, 1570, 1648, 1488, 1728, 2144, 1729, 1541, 1579, 1489,
        1727}], 
      Line3DBox[{1306, 1542, 1573, 1543, 2141, 1305, 1730, 1544, 1721, 1545, 
       2161, 1827, 1307, 1836, 1786, 1835, 1787, 2153, 1308, 843, 1309, 1982, 
       1490, 1310, 1983, 1491, 1311, 1984, 1856, 2028, 1312, 1857, 2029, 1313,
        1858, 2030, 1314, 1859, 2031, 1315, 1985, 1492, 1316, 2103, 1575, 
       1647, 1576, 1317, 2104, 1577, 1649, 1578, 1318, 2093, 1546, 1580, 1547,
        1319}], 
      Line3DBox[{1321, 1783, 1785, 1784, 1833, 2164, 1320, 1788, 1790, 1789, 
       2166, 1843, 1322, 1848, 1842, 1847, 2032, 1956, 1323, 1952, 2033, 1808,
        1324, 1233, 1813, 1325, 1986, 1493, 1326, 1987, 1860, 2034, 1327, 
       1861, 2035, 1328, 1862, 2036, 1329, 1587, 2037, 1914, 1330, 1916, 2038,
        1589, 1331, 2105, 1581, 1650, 1582, 1332, 2106, 1583, 1651, 1584, 
       1333, 2107, 1585, 1652, 1586, 1334}], 
      Line3DBox[{1336, 1863, 2039, 1335, 1864, 2040, 1337, 1810, 2041, 1953, 
       1338, 1811, 1812, 2157, 1809, 1594, 1339, 1815, 1816, 2158, 1814, 1596,
        1340, 1011, 1598, 1341, 2109, 1599, 1600, 2129, 1342, 1601, 1602, 
       2130, 1343, 1603, 2042, 1923, 1344, 1588, 1653, 2043, 1915, 1345, 1917,
        2124, 1654, 1590, 1346, 1918, 2125, 1655, 1591, 1347, 2108, 1592, 
       1656, 1593, 1348, 1988, 1494, 1349}], Line3DBox[CompressedData["
1:eJwVzcsuQ1EUBuAlovUKQqr1MkhjQjQiHYmBkXoEcSl9AWHK1IR3UJeGVEjU
vTepSyoewXcGX/5/r7X3Obml0uzqQETMMT0UcZaOeJCTVPWGzHOuP8oZ1vUL
NlIRT86j+hil4YhDuWn+QY9n+648Ml+zH5cZtsyO+eQl+Z/cM192p6XfsM0J
X6wMRozY1/U2t5Q55TvZe/fqO1P6HR3u2WHfu3n7vv7mzo/Mmk2QY9f5QBbc
+dPf3flN3ppdUtGbZgUqzle09AVqelsucq13ZZF/yAc3AQ==
       "]], 
      Line3DBox[{1371, 1507, 1996, 1369, 2049, 1868, 1367, 1606, 1665, 2132, 
       1928, 1365, 1605, 1664, 2131, 1926, 1364, 1925, 2048, 1663, 1604, 1363,
        1924, 2047, 1662, 1750, 1749, 1362, 1943, 2149, 1746, 1661, 1712, 
       1711, 1361, 2151, 1709, 1710, 1660, 1743, 1161, 1360, 1740, 1741, 1659,
        2128, 1922, 1359, 1597, 1658, 2127, 1921, 1358, 1595, 1657, 2126, 
       1919, 1356, 2046, 1867, 1354, 2045, 1866, 1350, 2044, 1865, 1352}], 
      Line3DBox[{1374, 1869, 2050, 1373, 1998, 1509, 1375, 1610, 1674, 2135, 
       1510, 1376, 1930, 1999, 1675, 1511, 1821, 1838, 1839, 2000, 1676, 1512,
        1766, 1931, 2001, 1677, 1751, 1513, 1612, 2110, 1752, 1753, 1678, 
       1754, 1870, 2150, 1818, 1755, 1756, 1679, 1757, 880, 1615, 1758, 1759, 
       1680, 2136, 1514, 1772, 1609, 1681, 2137, 1515, 1775, 1932, 2002, 1682,
        1516, 1377, 1957, 2003, 1844, 1517, 1378, 2004, 1518, 1379, 2005, 
       1519, 1380}], 
      Line3DBox[{1382, 1871, 2051, 1381, 1619, 1683, 1872, 2114, 1383, 1611, 
       1684, 2138, 1520, 1384, 1933, 2006, 1685, 1521, 1385, 1934, 2007, 1686,
        1522, 1386, 2111, 1613, 1523, 1623, 2118, 1614, 1873, 2112, 1624, 
       1616, 1874, 2113, 1625, 1617, 890, 1387, 1618, 1792, 2162, 1828, 1829, 
       1722, 1935, 2008, 1794, 1830, 1831, 1793, 1946, 2009, 1849, 1524, 1388,
        2010, 1525, 1389, 2011, 1526, 1390}], 
      Line3DBox[{1392, 1626, 1627, 1875, 2119, 1391, 1620, 1687, 1876, 2115, 
       1393, 1621, 1689, 1877, 2116, 1394, 1936, 2012, 1527, 1395, 2117, 1622,
        1528, 1396, 2013, 1529, 1397, 2014, 1878, 2052, 1398, 1879, 2053, 
       1399, 1880, 2054, 1400, 1791, 901, 1837, 1947, 2015, 1530, 1846, 2167, 
       1845, 1531, 1401, 2154, 1795, 1796, 1532, 1402, 2156, 1800, 1801, 1533,
        1403}], 
      Line3DBox[{1405, 1548, 1628, 1549, 2094, 1404, 1629, 1688, 1630, 2120, 
       1406, 1631, 1690, 1632, 2121, 1407, 1881, 2055, 1408, 2016, 1534, 1409,
        2017, 1535, 1410, 2018, 1882, 2056, 1411, 1883, 2057, 1412, 1884, 
       2058, 1413, 1885, 2059, 1414, 913, 1415, 2155, 1798, 1799, 1416, 1948, 
       2095, 1550, 1797, 1551, 1417, 1949, 2096, 1552, 1802, 1553, 1418}], 
      Line3DBox[{1432, 1559, 1637, 1558, 1733, 2146, 1431, 1557, 1723, 1556, 
       2097, 1950, 1430, 1803, 1216, 1429, 2067, 1892, 1428, 2066, 1891, 1427,
        2065, 1890, 1426, 2064, 1889, 1425, 2063, 1888, 2020, 1424, 1536, 
       2019, 1423, 2062, 1887, 1422, 2061, 1886, 1421, 1937, 2060, 1692, 1636,
        1420, 2122, 1635, 1691, 1634, 1419, 2145, 1731, 1555, 1633, 1554, 
       1732}], Line3DBox[{1446, 1737, 1738, 1640, 1736, 1735, 2147, 1445, 
       1560, 1724, 1807, 1224, 1444, 1806, 2078, 1951, 1443, 2077, 1901, 1442,
        2076, 1900, 1441, 2075, 1899, 1440, 2074, 1898, 1439, 2073, 1897, 
       2021, 1438, 2072, 1896, 1437, 2071, 1895, 1436, 2070, 1894, 1435, 2069,
        1893, 1434, 1938, 2068, 1693, 1639, 1433, 2123, 1700, 1701, 1638, 
       1805, 1804, 1734}], 
      Line3DBox[{1460, 1706, 1707, 1642, 1705, 1122, 1459, 1561, 1725, 2142, 
       1912, 1458, 2090, 1911, 1457, 2089, 1910, 1456, 2088, 1909, 1455, 2087,
        1908, 1454, 2086, 1907, 1453, 2085, 2084, 1906, 1452, 2083, 1905, 
       1451, 2082, 1904, 1450, 2081, 1903, 1449, 2080, 1902, 1448, 1939, 2079,
        1760, 1643, 1447, 1940, 2139, 1704, 1641, 1703, 1702, 1644}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{629, 951, 806, 2143, 630, 593, 1191, 529, 656, 594, 1193, 
       2092, 532, 669, 596, 2161, 1195, 597, 681, 617, 2166, 1261, 853, 693, 
       2040, 862, 703, 2045, 870, 1990, 712, 877, 1998, 720, 1056, 2114, 886, 
       729, 1057, 2115, 894, 740, 1067, 2120, 903, 753, 1069, 2122, 915, 766, 
       2068, 1072, 927, 779, 2079, 1076, 939, 792}], 
      Line3DBox[{631, 1259, 807, 2165, 632, 1190, 819, 2163, 657, 1192, 831, 
       670, 1194, 2153, 842, 682, 2032, 1260, 854, 694, 2041, 1229, 1230, 863,
        704, 2046, 871, 1991, 713, 1037, 878, 2135, 721, 1038, 887, 2138, 730,
        1058, 2116, 895, 741, 1068, 2121, 904, 754, 2060, 1070, 916, 767, 
       2069, 928, 780, 2080, 940, 793}], 
      Line3DBox[{633, 808, 1958, 634, 820, 1968, 658, 832, 1976, 671, 843, 
       683, 2033, 1226, 1227, 1228, 1232, 2157, 1003, 1231, 1004, 1088, 2126, 
       1005, 1006, 1992, 1097, 1025, 1026, 1999, 1100, 1039, 1040, 2006, 1105,
        1059, 1060, 2012, 742, 2055, 905, 755, 2061, 917, 768, 2070, 929, 781,
        2081, 941, 794}], 
      Line3DBox[{635, 809, 1959, 636, 821, 1969, 659, 833, 1977, 672, 844, 
       1982, 684, 1233, 1234, 1235, 1236, 2158, 1007, 1158, 1008, 1089, 2127, 
       1009, 1239, 1010, 1240, 2159, 1098, 1241, 1250, 1027, 1258, 1028, 2000,
        1257, 1101, 1041, 1042, 2007, 1106, 1061, 2117, 1062, 743, 906, 2016, 
       756, 2062, 918, 769, 2071, 930, 782, 2082, 942, 795}], 
      Line3DBox[{637, 810, 1960, 638, 822, 1970, 660, 834, 1978, 673, 845, 
       1983, 685, 855, 1986, 695, 1011, 1012, 1091, 2128, 1016, 1172, 1243, 
       1242, 2160, 1246, 1244, 1245, 1173, 1030, 2001, 1102, 1044, 2111, 1045,
        731, 896, 2013, 744, 907, 2017, 757, 919, 2019, 770, 2072, 931, 783, 
       2083, 943, 796}], 
      Line3DBox[{639, 811, 1961, 641, 823, 1971, 661, 835, 1979, 674, 846, 
       1984, 686, 856, 1987, 696, 1013, 2109, 1090, 1015, 1093, 1161, 1162, 
       1029, 1160, 1159, 2148, 1171, 1167, 1168, 1043, 1166, 2110, 1165, 1103,
        1047, 1063, 2118, 1049, 732, 897, 2014, 745, 908, 2018, 758, 920, 
       2020, 771, 932, 2021, 784, 2084, 944, 797}], 
      Line3DBox[{643, 813, 1962, 644, 2024, 825, 663, 2026, 837, 676, 2029, 
       848, 688, 2035, 858, 698, 1017, 2130, 1094, 865, 706, 2149, 1163, 1164,
        1032, 1131, 873, 2152, 715, 1132, 1133, 1050, 1170, 880, 723, 1051, 
       1065, 2113, 889, 734, 2053, 899, 747, 2057, 910, 760, 2064, 922, 773, 
       2074, 934, 786, 2086, 946, 799}], 
      Line3DBox[{645, 814, 1963, 646, 826, 1972, 664, 2027, 838, 677, 2030, 
       849, 689, 2036, 859, 699, 2042, 1018, 866, 707, 2047, 1019, 1175, 1176,
        1177, 2133, 1180, 1179, 1033, 1178, 881, 2136, 724, 1052, 890, 735, 
       2054, 900, 748, 2058, 911, 761, 2065, 923, 774, 2075, 935, 787, 2087, 
       947, 800}], 
      Line3DBox[{647, 815, 1964, 648, 827, 1973, 665, 839, 1980, 678, 2031, 
       850, 690, 2037, 993, 860, 700, 2043, 994, 867, 708, 2048, 1020, 1181, 
       1183, 1184, 2134, 1188, 1187, 1034, 1185, 882, 2137, 725, 1053, 1139, 
       1248, 2162, 1249, 736, 1256, 1196, 1254, 901, 749, 2059, 912, 762, 
       2066, 924, 775, 2076, 936, 788, 2088, 948, 801}], 
      Line3DBox[{649, 816, 1965, 650, 828, 1974, 666, 840, 1981, 679, 851, 
       1985, 691, 2038, 995, 996, 1085, 2124, 997, 998, 1095, 2131, 1021, 
       1182, 1022, 1993, 1099, 1035, 1186, 1036, 2002, 1104, 1054, 1140, 1055,
        2008, 1202, 1199, 1255, 1200, 2015, 750, 913, 763, 2067, 925, 776, 
       2077, 937, 789, 2089, 949, 802}], 
      Line3DBox[{651, 817, 1966, 652, 829, 1975, 667, 980, 2102, 981, 1080, 
       982, 2103, 983, 1082, 987, 2105, 988, 1086, 2125, 999, 1000, 1096, 
       2132, 1023, 1024, 1994, 716, 1262, 1263, 2003, 1264, 1265, 1197, 1201, 
       1198, 2009, 1269, 1270, 1266, 1268, 2167, 1267, 751, 1206, 2155, 1207, 
       764, 1216, 1217, 777, 2078, 1221, 1222, 790, 2090, 950, 803}], 
      Line3DBox[{653, 970, 971, 1967, 1157, 974, 2099, 975, 1079, 977, 2101, 
       978, 1081, 984, 2104, 985, 1083, 989, 2106, 990, 1087, 1001, 2108, 
       1002, 709, 2049, 874, 1995, 717, 883, 2004, 726, 891, 2010, 737, 1203, 
       2154, 1204, 1205, 1209, 1210, 2095, 1208, 960, 1142, 1219, 1220, 2097, 
       1218, 962, 1144, 1224, 1225, 1223, 964, 1146, 2142, 966, 967, 804}], 
      Line3DBox[{654, 1112, 1113, 972, 1115, 2098, 1114, 973, 953, 976, 1117, 
       2100, 1116, 979, 955, 1147, 1149, 2144, 1148, 986, 957, 2093, 958, 
       1084, 991, 2107, 992, 701, 868, 1988, 710, 875, 1996, 1997, 718, 884, 
       2005, 727, 892, 2011, 738, 1211, 2156, 1212, 1213, 1214, 1215, 2096, 
       1141, 961, 1071, 1153, 2146, 1154, 1143, 963, 1073, 1155, 2147, 1156, 
       1145, 965, 1075, 1122, 1123, 1077, 1125, 1124, 1078}], 
      Line3DBox[{791, 938, 1109, 1107, 1121, 1120, 2139, 778, 926, 1074, 1119,
        2123, 1118, 765, 914, 1150, 1152, 2145, 1151, 752, 902, 2094, 959, 
       739, 893, 2119, 1066, 728, 885, 2051, 719, 876, 2050, 711, 1989, 869, 
       2044, 702, 861, 2039, 692, 852, 1251, 1253, 2164, 1252, 680, 841, 1247,
        1138, 2141, 956, 668, 830, 1137, 2091, 1136, 954, 655, 818, 2140, 
       1135, 1134, 952, 628, 805, 1108, 969, 1111, 1110, 968}], 
      Line3DBox[{798, 945, 2085, 785, 933, 2073, 772, 921, 2063, 759, 909, 
       2056, 746, 898, 2052, 733, 888, 2112, 1064, 1048, 722, 879, 2150, 1238,
        1169, 1046, 1130, 1189, 1129, 714, 872, 1237, 1128, 1031, 1127, 1174, 
       2151, 1126, 705, 864, 1092, 2129, 1014, 697, 857, 2034, 687, 847, 2028,
        675, 836, 2025, 662, 824, 2023, 642, 812, 2022, 640}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
LS5C/PGZfQaIX3nyo/d4v6a6rXlH/RBexta/Rj/kV1GJ5C3sJyHCJ91+hlSC
b03KtTBtWpceuuHkyNdL4nY8nvvTrAk2p3kyDzemQ5+1iQLeL6dZQeuo/4No
GteANfV/6S1Tn+P98vF58ZTeF4gu72PN/+d+if2v7+kelAok4v3ambjrCcof
mzzERPk1WxfuwPtVdspjNerP/tXdj/pLHErz8H4dtDDvofcL8q8Ed0vQ+8XI
LT5A4wNYzZxzlcYHcK9cfhnjQ6b2gnC8d9W5Q4FoL++sVm+0N3SXiQTGYe9m
3gM0DkMT74/LGIcfJRk9wzh8v+X7QRqHQaB+oAnj8JMNizdhHC6QmVZL4zDs
fCqog3GYUT3kiXH4tbrVOxrHYE3De2+MY+cOLV+HcZg/Y+MAjXuQme0sh3GP
W5+/04HG4caT1gE0ToJsrK4nxkmX9EVPMA776xyyp3EVtr0ZtZuIwxH/6/s4
g/1+hRiHWzJvYtyGnRmp9ig/fOHNONUPnF97/VD/iEbGA9S/P8JSFePwGJ8A
E/HIZIjLIh7Ji9t8MQ5Lrat9g/gHuHWfIn5P+/4w+Z0dIHo83ynPtQMcea9e
2Hg+DVzPyldifucb97Sn+R26G+9vx/yuvvZSIeZ3p5OiXOHyHZAYsbIb87vM
tONvMb8XF234RfM7WFcvmoT5fSXjyB3M74s2JaTR/AiOdz7cxfwYO5ifiPnd
2knqCc2nIG3qa4H59PyJdl/M73vqX66g+Rc2hl44hPn3CZftdczvjXVpmK8h
S4p/0z/53V7qf33vFvN53zPM70mfTdny882j2fJN3S5hmN9lTg1g/QC1j2XZ
+r9d2J+L+d1S7y7WGzDNdQEbj3VWoQfmd9daIIh/QJ/HCfHfdF7JCk5tghl2
xVwrRnrAWjnw17VHBLjeqE/GevJ16OIFtJ4EhtVlV6wnWwON87GeLLCbKUXr
SbjhFHUb68mLSmcYtL4iHVeO8dL6Ctatbf8eTOuruQPH+rGeLK9f/4fWY6Dl
670D67HEozMdsZ48ken7ntZvYLxNcxHWb3U5m/7spPWkXnQI1pNQw3vLGOs9
N4Eudj35S/A51oeQbqt46J960v7y//p+bYnwRmWsJ6/McmXL5+olseUrxXfO
xXpS++Yptn5v1X/0/z4Z5on1pHY/HxtPv1bQQsTjeOv5GMUPyz6oYT0MjO2B
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
XhWr11tt4DQN7Vhtsog4tWPk6rdtP9GOfZKadFg8pBPySh0PPxWuIk9+OPR3
7UyB2fuELNG+6f50H0ftG/EJPnoe7VsKiQu3W80Dm2NFsQGWGeSgf27nB5Fk
WJjUN2j3DEOP2VO7R5pr9v9j90B1REppBRj/+hFP7TApDOySRjs8fsYZ+R25
9RDad2ci9RckQ23zffQXD6e6TUc7HD1sZDG1w+R6lFU22uFDc0x3/Shpg4lD
k2LVlRvIqlWSs1vC0iHYwvwM+hGT4MZz1I8Qv1iJW+hHVrI6uzpWZ7ee1dld
0XI9e28iDy5JGdbo+eSQvPMtyg/mJkPn1ycH0K/1mOSMon6NPJCZuQH92vfv
09XRv58NEBxG/TsZt99oIvp3uat7Jan8xL21YjLK7yqf/wjl7/o98h76fb0O
mYXU7xOhr0PK0e+PqQkWeEL9YOGvg+HUDxLRK1fWoR98t0nIQFgnm/Sfnao0
L4NLJkSPM9q5LwdG9VqEWJFIstNuzkbppTyibrqjqscrB8bJzN64g0TCIxvf
9UiX2NFQgXSFhqCLlA+MLtSbhnx6p71Yi3xOC7hL09+FofIlL/B3Hx7TXYO/
u37e2cdUThhX+F4F5Qx78fgtyrlLVk0GcYXoKk77idh35Ln1xK2IK1y9zDQQ
V0iPbrlIcQXZsDLLAHGFDMOBQzmcVYj3TBkOzGI4UIjjpor0/h//4ED7LXJn
8He/FLtaIi5KXGzxGn938ir/BZQ/OTPg0IW4hV/kijHyN23nO07nl4Q5a8Yh
ThhdHTE4v0nTzhji+TwISYV+TmoD2VfDruF5+9/1U2KsfmpqjJUy6tnS034W
1Q/YVWjIoH6C7ti44Ll9UeGVB8hnlZPreeSjE8g/C/XcHvFyE9UzbNxpEYR6
Lv+sMEDxDMwqTYhCPFOU5jQF9akvXi2C61nK55Qy4h+b0X0ncD0E2yu70/VG
zlvdn6TvkwMD9fpzcL0l7DPbRPcX+e7Jr474IX6Ptgfur/dOmybSfUpe6j+d
iXjj4Pcl33Cf/l1/9IbVH+0NTT6E901vbRovOy3iwoWb0sZ4f9QydPxjvG8q
u8OrCTXnQevg3znw0s3vLN43uced9sDxmdFfDXH8RJn1uH/J8yvJfohbYrqW
FOP+rRk24/luFx7Z++XIrbZtyTDpVr1rWQCBD8zPvmJ+9hnzsybsPWjXv96D
Xs3onoz+ntGnsXeiP7J3ok+zd6L/fj/6FKNvltudM2i3XaaXUXsIjlqJXmgP
Zyziv4J4pnx5zHX0m+eldJ3Qb3ILJxtRv0AczY/XU78AprwRQugX/LPm/V5T
UkvIeIskGvdB0ZDhXIz7ds3NzkV7KxJq9xb5nyvrPIf8zQPct6KfWq7P50n9
CHh96TNBPyJ+IqwbcdfSD5m96GeT6iYMoJ99ELhrO/od3Y5P7jj++amFq3H8
o4c2DuhP/VZJ8qgfBLFL5Az6wcx8ncPoH21uHO1AumlGxCmk37aTP4h4b45K
nCH66ydjpIvRX19geS8vDaNf4PmJF8t7MTK+R1Q06mCYg7XL7BkdZPLk/pf3
eakgoWoyU/VrDXxTrUg1GdJJ1KKP5by8mQQJzE+N/8tP/Vq6NHXJ1mYoyV4w
ZPOuZuJa2yD2OD4VEpifmvKXn+pbeam/MqcV9v186HL6dSPJVuisj/9CcdqA
326nGV2geeew0ZTKcuIwYD2Ra0D9SPuqF3RdQfnEIme6roiQgcdBXFfrPM+U
Sa5tBFm7YcOOVreS2elbPmuMyoJPbfvEZka2As+jZuH2x40ErEIT4yZkgLe8
4/6AI53gVS4hMjG8iohPuKDP15YKeYeP9GdE0v1g6iZ6ve8t2XPn4l3/iGTw
Ur4j8Nq6i6Rc67m8bE0ZMejZ07i3NQv8rB7YG51tJ7KLeU7cJXVE4GhV4Za5
b0BjdulticsfyXKnJ2Y33JvJ7NZxvvXOxTDBhX9R6eFCwt+tFDwmoJOIVc1V
tNv1Hvy1Fx2hdBhzJTEQ6bnTZ05Buoy2exjlA1oD9SuQj0fH67PIpyFq1kH6
u+Di2XYIf3eZQmE6/u7kGRVCVE6YcCTYDeV0mKVainL6mM0JsHzLBX3ekARp
73xibOxlu9b1f3VVfJzkW//XO858HO0h/9c7zgIcbX58x1nzr3echTh1efhe
80j2jrMXe8dZiMOJ/b/ecRbguHHxHWcue8d5LnvHmZ+j/cOf/q7uX+8403j/
0n/fcV7/TfkW/S4Sub9TVcY7H1ZsrbfH71JTNvjyis7Xzqhf1VQP8Ghlz6Ae
MjmXDHG+EjI3hlK9QX7L2yjUW2Ju4lGcL5eRq1ypniH8kcVe1PO85X2COF8h
nsaEzguMLHn8wZbOC69JAucR4qeIxCP9hdvBCqS/rBc/j/OlsM/nIPLR+BW5
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{299.1294812113239, 158.85415758481247`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 2}, {0, 1}, {0., 5.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.5785217946142531`, -2.987714917096389, 0.17840548782906665`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6822768731254525`*^9, 3.682710504229278*^9, 3.6827144698371997`*^9, 
   3.683141466043537*^9, {3.683141820832486*^9, 3.6831418483125353`*^9}, 
   3.6831445271248875`*^9, 3.683180354073925*^9, {3.683180440675268*^9, 
   3.683180448225299*^9}, 3.683180516476859*^9, 3.6832566859950686`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"alphaPlate", " ", "=", " ", "0.05"}], ";", " ", 
  RowBox[{"alphaRod", " ", "=", " ", "0.2"}], ";"}]], "Input",
 CellChangeTimes->{{3.683141943407442*^9, 3.6831419495104637`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"maxT", " ", "=", " ", "15"}], ";", " ", 
   RowBox[{"NN", " ", "=", " ", "100"}], ";", " ", 
   RowBox[{"tau", "=", 
    RowBox[{"maxT", "/", "NN"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "max", " ", "time", " ", "and", " ", "num", " ", "time", " ", "steps", " ",
     "respectively"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6831419816025443`*^9, 3.683142012574606*^9}, {
  3.6831805891391582`*^9, 3.6831805929081726`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6832594500030193`*^9, 3.683259452174038*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u1vals", " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"alphaRod", "*", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"y", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{"initV", "[", 
         RowBox[{"1", ",", "y"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], "}"}], 
    ",", "u", ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tau"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.683180693820776*^9, 3.683180758484045*^9}, {
  3.6831812954342775`*^9, 3.6831812957402782`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.15`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.15`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 1.}, {0., 0.15}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.683180773572118*^9, 3.683181296077282*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v1vals", " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
        "\[Equal]", 
        RowBox[{"alphaPlate", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"u1vals", "[", 
           RowBox[{"y", ",", "tau"}], "]"}]}], "*", "x", "*", 
         RowBox[{"(", 
          RowBox[{"x", "-", "2"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"2", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}],
      "}"}], ",", "v", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tau"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6831809818849564`*^9, 3.68318101775512*^9}, {
   3.683181058606282*^9, 3.683181107917488*^9}, {3.683181205548892*^9, 
   3.683181214408926*^9}, {3.6831813007012978`*^9, 3.683181305050325*^9}, 
   3.6831814190528154`*^9, {3.683181642776716*^9, 3.6831816630667944`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.15`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.15`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "5", ",", "3"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 2.}, {0., 1.}, {0., 0.15}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.683181095416433*^9, 3.68318110850049*^9}, 
   3.683181306030331*^9, 3.6831814196328163`*^9, 3.6831816645208*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u2vals", " ", "=", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"alphaRod", "*", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"y", ",", "tau"}], "]"}], "\[Equal]", 
        RowBox[{"v1vals", "[", 
         RowBox[{"1", ",", "y", ",", "tau"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], "}"}], 
    ",", "u", ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tau", ",", 
      RowBox[{"2", "*", "tau"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6831818013394485`*^9, 3.683181848180697*^9}, {
  3.683181917251978*^9, 3.6831819179389825`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15`", ",", "0.3`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15`", ",", "0.3`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 1.}, {0.15, 0.3}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6831818619377537`*^9, 3.683181918401984*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v2vals", " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
        "\[Equal]", 
        RowBox[{"alphaPlate", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "y", ",", "tau"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"u2vals", "[", 
           RowBox[{"y", ",", 
            RowBox[{"2", "*", "tau"}]}], "]"}]}], "*", "x", "*", 
         RowBox[{"(", 
          RowBox[{"x", "-", "2"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"2", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}],
      "}"}], ",", "v", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tau", ",", 
      RowBox[{"2", "*", "tau"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6831819258620157`*^9, 3.683182014674384*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15`", ",", "0.3`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.15`", ",", "0.3`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "5", ",", "3"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 2.}, {0., 1.}, {0.15, 0.3}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6831819962433124`*^9, 3.6831820152133865`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list1", " ", "=", " ", 
  RowBox[{"Range", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.683260337808288*^9, 3.6832603443372984`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.683260344619299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AppendTo", "[", 
  RowBox[{"list1", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.6832603476833043`*^9, 3.6832603527453156`*^9}, {
  3.683260889117637*^9, 3.683260889549638*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "9"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6832603533253164`*^9, 3.683260890019638*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{"list1", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.6832608918726416`*^9, 3.6832609419050665`*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.683260905872712*^9, 3.683260942245067*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list1", "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.683260956465111*^9, 3.683260959039116*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.6832609593291173`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listR", " ", "=", " ", 
  RowBox[{"Range", "[", "15", "]"}]}]], "Input",
 CellChangeTimes->{{3.6832610159523735`*^9, 3.683261022990388*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
   "15"}], "}"}]], "Output",
 CellChangeTimes->{3.68326102406239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listV", " ", "=", " ", 
  RowBox[{"Range", "[", 
   RowBox[{"16", ",", "30"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6832610427414265`*^9, 3.683261056842454*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", "22", ",",
    "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", ",", "29", 
   ",", "30"}], "}"}]], "Output",
 CellChangeTimes->{3.683261057132454*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listF", "=", 
  RowBox[{"{", "0", "}"}]}]], "Input",
 CellChangeTimes->{{3.6832610747314863`*^9, 3.6832610787334943`*^9}}],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.6832610790434947`*^9, 3.6832615097477093`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"rr", " ", "=", " ", 
      RowBox[{"listF", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", " ", 
     RowBox[{"rr", " ", "=", " ", 
      RowBox[{"rr", " ", "+", " ", 
       RowBox[{"listR", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]}], ";", " ", 
     RowBox[{"vv", " ", "=", " ", 
      RowBox[{
       RowBox[{"listV", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "+", "rr"}]}], ";", " ", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"listF", ",", "vv"}], "]"}]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "15"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6832611033505383`*^9, 3.6832611044925404`*^9}, {
  3.683261352699401*^9, 3.683261478590645*^9}, {3.6832615171777215`*^9, 
  3.683261524624735*^9}}],

Cell[CellGroupData[{

Cell[BoxData["listF"], "Input",
 CellChangeTimes->{{3.6832615292777433`*^9, 3.683261530032745*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "17", ",", "36", ",", "57", ",", "80", ",", "105", ",", "132", 
   ",", "161", ",", "192", ",", "225", ",", "260", ",", "297", ",", "336", 
   ",", "377", ",", "420", ",", "465"}], "}"}]], "Output",
 CellChangeTimes->{3.6832615305327463`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initVals", " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "t", "]"}], "\[Equal]", 
        RowBox[{"-", "9.8"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], "}"}]}], "}"}], ",", 
    "y", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.683262123516144*^9, 3.6832621311292205`*^9}, {
  3.6832621707446346`*^9, 3.6832622547585*^9}, {3.6832622940089197`*^9, 
  3.6832622967569556`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{{}, {}, {
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AAF9iAApGvTd0wYnD
3cQ/hIGjE+6qwL/SUFjDa77VP56wlSZiGeK/IqE47Akn4D9452dls/nzv9Wb
k3tZVOU/7EUPcHtqAcC7wbiC/fHqP4C3yMREywvAgEqXStgX8D/iPW+lMNQT
wLtJtw/c7vI/Mipo79FxG8DziT6Xnbj1P1P7N1C5DyLA2iBupGZS+D8yDcoh
OqUmwFrNgu1ZJPs/XOEf4oozLMCJ0D+8VMb9P9X6OfgE+DDAWwqypoYtAECE
0Rcuwgk0wD63Ng34kwFAtSgfOyGoN8B4j482beICQFB3cU3STTvAf/LaffdM
BEC1A5J9e40/wAX2WabgsAVAKmfIP90CQsDiJK2RzfwGQKhptWKSOkTAjN7y
ms9kCEDOVUJSj8dGwI3DDGfVtAlAbY4GSwRMScBbMxlR8CALQDE64OlzLEzA
p0NZHGqGDEDvpBqDDSZPwEt/barn0w1ArroqRYEHUcC8RXRWej0PQFw+Grkj
rlLAwpunYohHEEAuDKS1YkpUwOXkrgoD7RBAHGiSUhTvVcBvc69BiKARQJaR
oif+yVfApRcaWg9IEkDIpK15kZZZwEEBfgGh/RJA6omKDrScW8Acu3sZ4q8T
QGiDmdyPrF3AoorjEiVWFEAVIRW0CapfwI+fRJtyChVAKmCOPp3yYMAoyg8F
wrIVQBT4GM38BWLAAMV038BXFkCRht1CKRxjwD4F00jKChdAvVUJ3jdTZMAo
W5uT1bEXQOzTcooVfmXAePZcbetmGEDRNJawf8tmwHSniCgDEBlAwFpC3K8L
aMCvKE5UyrUZQPUqImHmTWnAUe8MD5xpGkAMnJJrsrRqwJ/LNatvERtA0vYi
FEoMbMBT7VfWTccbQDdfH4Qjim3AR98Tctt5HEDvqbfhpgpvwObmOe9qIB1A
N8gHofc8cMDrM1n7BNUdQL3AjxTHCHHAnJbi6KB9HkBxx97hdMtxwIzJBUfs
Ih9A3z/KVm+OcsDiQSI0QtYfQBbQWdmYZnPA8mdUAc0+IEBGTH84pDR0wKZR
FDB+mSBAieazLbQYdcB6IyEXh/IgQLwTeFpi/XXAJADj7pBFIUBtUaXM79Z2
wIF/IQ6gnyFAFl/keIvHd8C0CRUesPMhQMpyNaGCrHjAmjaFdcVOIkAbwseC
Xql5wJ9LQoUyqCJA/jNNbXSmesB6a7SFoPsiQGjvZxXilnvACC6jzRNWI0B1
V2FKP6B8wGz7RgaIqiNAgk4W22+cfcAyFFD6//8jQJnRle7/n37AZ/zDKA==

                    "]]}}}, {}, {}}, {
               DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, DisplayFunction -> Identity, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{0., 10.}, {-489.9999833919806, 0.}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{{}, {}, {
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                   LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AAF9iAApGvTd0wYnD
3cQ/hIGjE+6qwL/SUFjDa77VP56wlSZiGeK/IqE47Akn4D9452dls/nzv9Wb
k3tZVOU/7EUPcHtqAcC7wbiC/fHqP4C3yMREywvAgEqXStgX8D/iPW+lMNQT
wLtJtw/c7vI/Mipo79FxG8DziT6Xnbj1P1P7N1C5DyLA2iBupGZS+D8yDcoh
OqUmwFrNgu1ZJPs/XOEf4oozLMCJ0D+8VMb9P9X6OfgE+DDAWwqypoYtAECE
0Rcuwgk0wD63Ng34kwFAtSgfOyGoN8B4j482beICQFB3cU3STTvAf/LaffdM
BEC1A5J9e40/wAX2WabgsAVAKmfIP90CQsDiJK2RzfwGQKhptWKSOkTAjN7y
ms9kCEDOVUJSj8dGwI3DDGfVtAlAbY4GSwRMScBbMxlR8CALQDE64OlzLEzA
p0NZHGqGDEDvpBqDDSZPwEt/barn0w1ArroqRYEHUcC8RXRWej0PQFw+Grkj
rlLAwpunYohHEEAuDKS1YkpUwOXkrgoD7RBAHGiSUhTvVcBvc69BiKARQJaR
oif+yVfApRcaWg9IEkDIpK15kZZZwEEBfgGh/RJA6omKDrScW8Acu3sZ4q8T
QGiDmdyPrF3AoorjEiVWFEAVIRW0CapfwI+fRJtyChVAKmCOPp3yYMAoyg8F
wrIVQBT4GM38BWLAAMV038BXFkCRht1CKRxjwD4F00jKChdAvVUJ3jdTZMAo
W5uT1bEXQOzTcooVfmXAePZcbetmGEDRNJawf8tmwHSniCgDEBlAwFpC3K8L
aMCvKE5UyrUZQPUqImHmTWnAUe8MD5xpGkAMnJJrsrRqwJ/LNatvERtA0vYi
FEoMbMBT7VfWTccbQDdfH4Qjim3AR98Tctt5HEDvqbfhpgpvwObmOe9qIB1A
N8gHofc8cMDrM1n7BNUdQL3AjxTHCHHAnJbi6KB9HkBxx97hdMtxwIzJBUfs
Ih9A3z/KVm+OcsDiQSI0QtYfQBbQWdmYZnPA8mdUAc0+IEBGTH84pDR0wKZR
FDB+mSBAieazLbQYdcB6IyEXh/IgQLwTeFpi/XXAJADj7pBFIUBtUaXM79Z2
wIF/IQ6gnyFAFl/keIvHd8C0CRUesPMhQMpyNaGCrHjAmjaFdcVOIkAbwseC
Xql5wJ9LQoUyqCJA/jNNbXSmesB6a7SFoPsiQGjvZxXilnvACC6jzRNWI0B1
V2FKP6B8wGz7RgaIqiNAgk4W22+cfcAyFFD6//8jQJnRle7/n37AZ/zDKA==

                    "]]}}}, {}, {}}, {
               DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, DisplayFunction -> Identity, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{0., 10.}, {-489.9999833919806, 0.}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6832622603145695`*^9, 3.6832622980719748`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"initVals", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683262300531002*^9, 3.6832623152531686`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
xMAVC/Krm5tkeKR/2/RmCgP/Bzo5AtU=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-489.99998000215, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6832623157261724`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listVV", " ", "=", " ", 
  RowBox[{"{", "0", "}"}]}]], "Input",
 CellChangeTimes->{{3.683262410403429*^9, 3.6832624138154726`*^9}}],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.683262414718487*^9, 3.6832630759532533`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listVeloc", " ", "=", " ", 
  RowBox[{"{", "0", "}"}]}]], "Input",
 CellChangeTimes->{{3.6832628361300435`*^9, 3.6832628401200542`*^9}}],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.683262840608055*^9, 3.6832630774652586`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"curY", " ", "=", " ", 
      RowBox[{"listVV", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"curVeloc", " ", "=", " ", 
      RowBox[{"listVeloc", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vals", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "''"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"-", "9.8"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "curVeloc"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"y", "[", "0", "]"}], "\[Equal]", "curY"}], "}"}]}], 
         "}"}], ",", "y", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vals2", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"vel", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{"-", "9.8"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"vel", "[", "0", "]"}], "\[Equal]", "curVeloc"}], "}"}]}],
          "}"}], ",", "vel", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"listVeloc", ",", 
       RowBox[{"vals2", "[", "1", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"listVV", ",", 
       RowBox[{"vals", "[", "1", "]"}]}], "]"}]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6832624167955074`*^9, 3.6832624315796785`*^9}, {
  3.683262463544078*^9, 3.6832625029385834`*^9}, {3.6832625886276827`*^9, 
  3.683262619961074*^9}, {3.6832628071369333`*^9, 3.683262810579941*^9}, {
  3.6832628438810616`*^9, 3.683262963088378*^9}, {3.6832630073464966`*^9, 
  3.683263007682499*^9}}],

Cell[CellGroupData[{

Cell[BoxData["listVV"], "Input",
 CellChangeTimes->{{3.6832626291621904`*^9, 3.683262629846199*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "4.900000002106483`"}], ",", 
   RowBox[{"-", "19.600000039101477`"}], ",", 
   RowBox[{"-", "44.10000010504874`"}], ",", 
   RowBox[{"-", "78.40000018671334`"}], ",", 
   RowBox[{"-", "122.5000002763808`"}], ",", 
   RowBox[{"-", "176.40000037043131`"}], ",", 
   RowBox[{"-", "240.10000046708393`"}], ",", 
   RowBox[{"-", "313.60000056538985`"}], ",", 
   RowBox[{"-", "396.9000006648052`"}], ",", 
   RowBox[{"-", "490.00000076499873`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6832626302712016`*^9, 3.683263011322509*^9, 
  3.6832630812362676`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "above", " ", "example", " ", "shows", " ", "how", " ", "to", 
     " ", "combine", " ", "lists"}], ",", " ", 
    RowBox[{"for", " ", "loops"}], ",", " ", 
    RowBox[{"and", " ", "PDE", " ", "solving"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "In", " ", "the", " ", "below", " ", "I", " ", "will", " ", "try", " ", 
    "to", " ", "use", " ", "the", " ", "heat", " ", "equation", " ", "on", 
    " ", "a", " ", "simple", " ", "1", "D", " ", "rod"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.683263290194906*^9, 3.683263310802983*^9}, {
  3.6832633569570065`*^9, 3.6832633724442096`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"curT", "[", "y_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "20"}], "*", "y", "*", 
   RowBox[{"(", 
    RowBox[{"y", "-", "1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6832645468124685`*^9, 3.6832645860085583`*^9}}],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tvals", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"u", "[", 
               RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
            RowBox[{"alphaRod", "*", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"y", ",", "t"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"curT", "[", "y", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], 
         "}"}], ",", "u", ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"curT", "[", "y_", "]"}], " ", ":=", " ", 
      RowBox[{"tvals", "[", 
       RowBox[{"y", ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683264496622363*^9, 3.683264508950389*^9}, {
  3.683264594707575*^9, 3.683264670875729*^9}, {3.683264732642556*^9, 
  3.6832647339215727`*^9}, {3.6832648143307943`*^9, 3.6832648227149334`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Here", " ", "I", " ", "need", " ", "to", " ", "take", " ", "the", " ", 
   "above", " ", "and", " ", "see", " ", "if", " ", "I", " ", "can", " ", 
   "make", " ", "a", " ", "list", " ", "of", " ", "tables"}], "*)"}]], "Input",
 CellChangeTimes->{{3.683265287180859*^9, 3.683265287915862*^9}, {
  3.683265339218011*^9, 3.683265354161051*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"initTvals", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"curT", "[", 
     RowBox[{"i", "/", "100"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6832653679710836`*^9, 3.683265404528181*^9}, {
  3.6832654592834787`*^9, 3.683265459453479*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["99", "500"], ",", 
   FractionBox["49", "125"], ",", 
   FractionBox["291", "500"], ",", 
   FractionBox["96", "125"], ",", 
   FractionBox["19", "20"], ",", 
   FractionBox["141", "125"], ",", 
   FractionBox["651", "500"], ",", 
   FractionBox["184", "125"], ",", 
   FractionBox["819", "500"], ",", 
   FractionBox["9", "5"], ",", 
   FractionBox["979", "500"], ",", 
   FractionBox["264", "125"], ",", 
   FractionBox["1131", "500"], ",", 
   FractionBox["301", "125"], ",", 
   FractionBox["51", "20"], ",", 
   FractionBox["336", "125"], ",", 
   FractionBox["1411", "500"], ",", 
   FractionBox["369", "125"], ",", 
   FractionBox["1539", "500"], ",", 
   FractionBox["16", "5"], ",", 
   FractionBox["1659", "500"], ",", 
   FractionBox["429", "125"], ",", 
   FractionBox["1771", "500"], ",", 
   FractionBox["456", "125"], ",", 
   FractionBox["15", "4"], ",", 
   FractionBox["481", "125"], ",", 
   FractionBox["1971", "500"], ",", 
   FractionBox["504", "125"], ",", 
   FractionBox["2059", "500"], ",", 
   FractionBox["21", "5"], ",", 
   FractionBox["2139", "500"], ",", 
   FractionBox["544", "125"], ",", 
   FractionBox["2211", "500"], ",", 
   FractionBox["561", "125"], ",", 
   FractionBox["91", "20"], ",", 
   FractionBox["576", "125"], ",", 
   FractionBox["2331", "500"], ",", 
   FractionBox["589", "125"], ",", 
   FractionBox["2379", "500"], ",", 
   FractionBox["24", "5"], ",", 
   FractionBox["2419", "500"], ",", 
   FractionBox["609", "125"], ",", 
   FractionBox["2451", "500"], ",", 
   FractionBox["616", "125"], ",", 
   FractionBox["99", "20"], ",", 
   FractionBox["621", "125"], ",", 
   FractionBox["2491", "500"], ",", 
   FractionBox["624", "125"], ",", 
   FractionBox["2499", "500"], ",", "5", ",", 
   FractionBox["2499", "500"], ",", 
   FractionBox["624", "125"], ",", 
   FractionBox["2491", "500"], ",", 
   FractionBox["621", "125"], ",", 
   FractionBox["99", "20"], ",", 
   FractionBox["616", "125"], ",", 
   FractionBox["2451", "500"], ",", 
   FractionBox["609", "125"], ",", 
   FractionBox["2419", "500"], ",", 
   FractionBox["24", "5"], ",", 
   FractionBox["2379", "500"], ",", 
   FractionBox["589", "125"], ",", 
   FractionBox["2331", "500"], ",", 
   FractionBox["576", "125"], ",", 
   FractionBox["91", "20"], ",", 
   FractionBox["561", "125"], ",", 
   FractionBox["2211", "500"], ",", 
   FractionBox["544", "125"], ",", 
   FractionBox["2139", "500"], ",", 
   FractionBox["21", "5"], ",", 
   FractionBox["2059", "500"], ",", 
   FractionBox["504", "125"], ",", 
   FractionBox["1971", "500"], ",", 
   FractionBox["481", "125"], ",", 
   FractionBox["15", "4"], ",", 
   FractionBox["456", "125"], ",", 
   FractionBox["1771", "500"], ",", 
   FractionBox["429", "125"], ",", 
   FractionBox["1659", "500"], ",", 
   FractionBox["16", "5"], ",", 
   FractionBox["1539", "500"], ",", 
   FractionBox["369", "125"], ",", 
   FractionBox["1411", "500"], ",", 
   FractionBox["336", "125"], ",", 
   FractionBox["51", "20"], ",", 
   FractionBox["301", "125"], ",", 
   FractionBox["1131", "500"], ",", 
   FractionBox["264", "125"], ",", 
   FractionBox["979", "500"], ",", 
   FractionBox["9", "5"], ",", 
   FractionBox["819", "500"], ",", 
   FractionBox["184", "125"], ",", 
   FractionBox["651", "500"], ",", 
   FractionBox["141", "125"], ",", 
   FractionBox["19", "20"], ",", 
   FractionBox["96", "125"], ",", 
   FractionBox["291", "500"], ",", 
   FractionBox["49", "125"], ",", 
   FractionBox["99", "500"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6832654063081846`*^9, 3.6832654624414854`*^9, {3.683265769794345*^9, 
   3.683265777835479*^9}, 3.6832661011011*^9, 3.6833112000228176`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listOfVals", " ", "=", " ", 
  RowBox[{"{", "initTvals", "}"}]}]], "Input",
 CellChangeTimes->{{3.6832655011035995`*^9, 3.6832655115006304`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    FractionBox["99", "500"], ",", 
    FractionBox["49", "125"], ",", 
    FractionBox["291", "500"], ",", 
    FractionBox["96", "125"], ",", 
    FractionBox["19", "20"], ",", 
    FractionBox["141", "125"], ",", 
    FractionBox["651", "500"], ",", 
    FractionBox["184", "125"], ",", 
    FractionBox["819", "500"], ",", 
    FractionBox["9", "5"], ",", 
    FractionBox["979", "500"], ",", 
    FractionBox["264", "125"], ",", 
    FractionBox["1131", "500"], ",", 
    FractionBox["301", "125"], ",", 
    FractionBox["51", "20"], ",", 
    FractionBox["336", "125"], ",", 
    FractionBox["1411", "500"], ",", 
    FractionBox["369", "125"], ",", 
    FractionBox["1539", "500"], ",", 
    FractionBox["16", "5"], ",", 
    FractionBox["1659", "500"], ",", 
    FractionBox["429", "125"], ",", 
    FractionBox["1771", "500"], ",", 
    FractionBox["456", "125"], ",", 
    FractionBox["15", "4"], ",", 
    FractionBox["481", "125"], ",", 
    FractionBox["1971", "500"], ",", 
    FractionBox["504", "125"], ",", 
    FractionBox["2059", "500"], ",", 
    FractionBox["21", "5"], ",", 
    FractionBox["2139", "500"], ",", 
    FractionBox["544", "125"], ",", 
    FractionBox["2211", "500"], ",", 
    FractionBox["561", "125"], ",", 
    FractionBox["91", "20"], ",", 
    FractionBox["576", "125"], ",", 
    FractionBox["2331", "500"], ",", 
    FractionBox["589", "125"], ",", 
    FractionBox["2379", "500"], ",", 
    FractionBox["24", "5"], ",", 
    FractionBox["2419", "500"], ",", 
    FractionBox["609", "125"], ",", 
    FractionBox["2451", "500"], ",", 
    FractionBox["616", "125"], ",", 
    FractionBox["99", "20"], ",", 
    FractionBox["621", "125"], ",", 
    FractionBox["2491", "500"], ",", 
    FractionBox["624", "125"], ",", 
    FractionBox["2499", "500"], ",", "5", ",", 
    FractionBox["2499", "500"], ",", 
    FractionBox["624", "125"], ",", 
    FractionBox["2491", "500"], ",", 
    FractionBox["621", "125"], ",", 
    FractionBox["99", "20"], ",", 
    FractionBox["616", "125"], ",", 
    FractionBox["2451", "500"], ",", 
    FractionBox["609", "125"], ",", 
    FractionBox["2419", "500"], ",", 
    FractionBox["24", "5"], ",", 
    FractionBox["2379", "500"], ",", 
    FractionBox["589", "125"], ",", 
    FractionBox["2331", "500"], ",", 
    FractionBox["576", "125"], ",", 
    FractionBox["91", "20"], ",", 
    FractionBox["561", "125"], ",", 
    FractionBox["2211", "500"], ",", 
    FractionBox["544", "125"], ",", 
    FractionBox["2139", "500"], ",", 
    FractionBox["21", "5"], ",", 
    FractionBox["2059", "500"], ",", 
    FractionBox["504", "125"], ",", 
    FractionBox["1971", "500"], ",", 
    FractionBox["481", "125"], ",", 
    FractionBox["15", "4"], ",", 
    FractionBox["456", "125"], ",", 
    FractionBox["1771", "500"], ",", 
    FractionBox["429", "125"], ",", 
    FractionBox["1659", "500"], ",", 
    FractionBox["16", "5"], ",", 
    FractionBox["1539", "500"], ",", 
    FractionBox["369", "125"], ",", 
    FractionBox["1411", "500"], ",", 
    FractionBox["336", "125"], ",", 
    FractionBox["51", "20"], ",", 
    FractionBox["301", "125"], ",", 
    FractionBox["1131", "500"], ",", 
    FractionBox["264", "125"], ",", 
    FractionBox["979", "500"], ",", 
    FractionBox["9", "5"], ",", 
    FractionBox["819", "500"], ",", 
    FractionBox["184", "125"], ",", 
    FractionBox["651", "500"], ",", 
    FractionBox["141", "125"], ",", 
    FractionBox["19", "20"], ",", 
    FractionBox["96", "125"], ",", 
    FractionBox["291", "500"], ",", 
    FractionBox["49", "125"], ",", 
    FractionBox["99", "500"], ",", "0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.683265511951631*^9, 3.683265781487545*^9, 
  3.6832661035131516`*^9, 3.6833112047338295`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tvals", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"u", "[", 
               RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
            RowBox[{"alphaRod", "*", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"y", ",", "t"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"curT", "[", "y", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], 
         "}"}], ",", "u", ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"curT", "[", "y_", "]"}], " ", ":=", " ", 
      RowBox[{"tvals", "[", 
       RowBox[{"y", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"curTvals", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"curT", "[", 
         RowBox[{"jj", "/", "100"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"jj", ",", "1", ",", "100"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"listOfVals", ",", "curTvals"}], "]"}]}], "\[IndentingNewLine]",
     ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"ii", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683265538693697*^9, 3.6832655662127733`*^9}, {
  3.6832656077738967`*^9, 3.683265649074005*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"listOfVals", "[", 
       RowBox[{"[", "ii", "]"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"5", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "100"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"ii", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683311539286979*^9, 3.683311547298992*^9}, {
   3.6833116128599105`*^9, 3.683311662593997*^9}, {3.683311702803216*^9, 
   3.6833117242042513`*^9}, {3.6833117626738605`*^9, 3.683311772872877*^9}, 
   3.683311841358*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ii$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`ii$$], 1, 10, 1}}, Typeset`size$$ = {
    360., {111., 118.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`ii$10368$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ii$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`ii$$, $CellContext`ii$10368$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[{
         Part[$CellContext`listOfVals, $CellContext`ii$$], 
         Table[5, {$CellContext`i, 100}]}], 
      "Specifications" :> {{$CellContext`ii$$, 1, 10, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {161., 168.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.683311548038993*^9, {3.683311638985953*^9, 3.6833116630239973`*^9}, 
   3.683311724774252*^9, 3.6833117736458783`*^9, 3.683311842828002*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"listOfVals\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,1,28732372139705306363,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6833200331321363`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"listOfVals\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,1,2,28732372139705306363,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.683320033172138*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"listOfVals\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,3,1,28732578158505266420,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6833518271086283`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"listOfVals\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,3,2,28732578158505266420,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6833518271730285`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uvalsOriginal", " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"alphaRod", "*", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"y", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"y", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", "20"}], "*", "y", "*", 
         RowBox[{"(", 
          RowBox[{"y", "-", "1"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], "}"}], 
    ",", "u", ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.683311852483019*^9, 3.6833118844620748`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 1.}, {0., 10.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6833118860790772`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"uvalsOriginal", "[", 
        RowBox[{"y", ",", "t"}], "]"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683311889837084*^9, 3.6833119199661736`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 1.68, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10}}, Typeset`size$$ = {360., {109., 114.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$12519$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$12519$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`uvalsOriginal[$CellContext`y, $CellContext`t$$], 
         5}, {$CellContext`y, 0, 1}], 
      "Specifications" :> {{$CellContext`t$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {158., 165.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6833119090351553`*^9, 3.683311920426174*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Attempting", " ", "the", " ", "above", " ", "but", " ", "with", " ", "2", 
   "D", " ", "function"}], "*)"}]], "Input",
 CellChangeTimes->{{3.683316084882187*^9, 3.6833160917711997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vvalsOriginal", " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
        "\[Equal]", 
        RowBox[{"alphaPlate", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{"20", "*", "x", 
         RowBox[{"(", 
          RowBox[{"x", "-", "2"}], ")"}], "y", 
         RowBox[{"(", 
          RowBox[{"y", "-", "1"}], ")"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"2", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}],
      "}"}], ",", "v", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.68331598169401*^9, 3.6833160343391047`*^9}, 
   3.6833177638930545`*^9}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"5", ",", "5", ",", "3"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 2.}, {0., 1.}, {0., 10.}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.683316042311118*^9, 3.6833177648610697`*^9, 
  3.683320759277994*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"curTv", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"20", "*", "x", 
   RowBox[{"(", 
    RowBox[{"x", "-", "2"}], ")"}], "y", 
   RowBox[{"(", 
    RowBox[{"y", "-", "1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6833166622520885`*^9, 3.6833166677721496`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"initTvVals", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"curTv", "[", 
      RowBox[{
       RowBox[{"i", "/", "100"}], ",", 
       RowBox[{"j", "/", "100"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683316704735627*^9, 3.683316731113902*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"allTvVals", " ", "=", " ", 
   RowBox[{"{", "initTvVals", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683316742628034*^9, 3.6833167477890944`*^9}}],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tvvalues", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
            "\[Equal]", 
            RowBox[{"alphaPlate", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"curTv", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"2", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}]}], "}"}], ",", "v", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"curTv", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
      RowBox[{"tvvalues", "[", 
       RowBox[{"x", ",", "y", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"curTvvalues", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"curTv", "[", 
         RowBox[{
          RowBox[{"ii", "/", "100"}], ",", 
          RowBox[{"jj", "/", "100"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", "200"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jj", ",", "1", ",", "100"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"allTvVals", ",", "curTvvalues"}], "]"}]}], 
    "\[IndentingNewLine]", ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"iii", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6833167720643654`*^9, 3.683316810447779*^9}, {
  3.6833168435651417`*^9, 3.683316854095251*^9}, {3.683316940807632*^9, 
  3.683316999703276*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"allTvVals", "[", 
       RowBox[{"[", "jjj", "]"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"5", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "200"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "100"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"jjj", ",", "1", ",", "11", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683317421303147*^9, 3.683317474663486*^9}, {
  3.683317508147681*^9, 3.683317524977767*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`jjj$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`jjj$$], 1, 11, 1}}, Typeset`size$$ = {
    639., {11403., 12.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`jjj$2654$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`jjj$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`jjj$$, $CellContext`jjj$2654$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot3D[{
         Part[$CellContext`allTvVals, $CellContext`jjj$$], 
         Table[5, {$CellContext`i, 200}, {$CellContext`j, 100}]}], 
      "Specifications" :> {{$CellContext`jjj$$, 1, 11, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{690., {5754., 5761.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.683320154760659*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"allTvVals\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,3,3,28732578158505266420,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.683351827422629*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot3D","arrayerr",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"allTvVals\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"5.`\\\", \
\\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\
\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \\\"5.`\\\", \\\",\\\", \
\\\"5.`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"50\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\
\\\", \\\"49\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"150\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}]\\) must be a valid array or a list of valid \
arrays.\"",2,3,4,28732578158505266420,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6833518275006294`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"vvalsOriginal", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6833177710451527`*^9, 3.683317806053692*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10, 1}}, Typeset`size$$ = {
    360., {141., 147.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$3719$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$3719$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[{
         $CellContext`vvalsOriginal[$CellContext`x, $CellContext`y, \
$CellContext`t$$], 5}, {$CellContext`x, 0, 2}, {$CellContext`y, 0, 1}], 
      "Specifications" :> {{$CellContext`t$$, 0, 10, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {190., 197.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6833178065447006`*^9, 3.683320762739999*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"BELOW", " ", "HERE", " ", "IS", " ", "THE", " ", "CODE"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6833215896002436`*^9, 3.6833215968712597`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"curF", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"20", "*", "x", 
   RowBox[{"(", 
    RowBox[{"x", "-", "2"}], ")"}], "y", 
   RowBox[{"(", 
    RowBox[{"y", "-", "1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.683321791651686*^9, 3.683321792121687*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"initF", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"curF", "[", 
      RowBox[{
       RowBox[{"i", "/", "100"}], ",", 
       RowBox[{"j", "/", "100"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.68335239654508*^9, 3.6833524000856876`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"allFvals", " ", "=", " ", 
   RowBox[{"{", "initF", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.683352411374512*^9, 3.6833524154375196`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"curR", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
            "\[Equal]", 
            RowBox[{"alphaPlate", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"curF", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"2", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}]}], "}"}], ",", "v", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tau"}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"nextR", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
      RowBox[{"curR", "[", 
       RowBox[{"x", ",", "y", ",", "tau"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"currentRod", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"u", "[", 
               RowBox[{"y", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
            RowBox[{"alphaRod", "*", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"u", "[", 
                RowBox[{"y", ",", "t"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"nextR", "[", 
             RowBox[{"1", ",", "y"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}], "}"}]}], 
         "}"}], ",", "u", ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tau"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"currentVleft", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
            "\[Equal]", 
            RowBox[{"alphaPlate", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"nextR", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"0", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"1", ",", "y", ",", "t"}], "]"}], "\[Equal]", 
            RowBox[{"currentRod", "[", 
             RowBox[{"y", ",", "t"}], "]"}]}], "}"}]}], "}"}], ",", "v", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tau"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"currentVright", " ", "=", " ", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], 
            "\[Equal]", 
            RowBox[{"alphaPlate", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "0"}], "]"}], "\[Equal]", 
            RowBox[{"nextR", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "0", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "1", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"2", ",", "y", ",", "t"}], "]"}], "\[Equal]", "0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"1", ",", "y", ",", "t"}], "]"}], "\[Equal]", 
            RowBox[{"currentRod", "[", 
             RowBox[{"y", ",", "t"}], "]"}]}], "}"}]}], "}"}], ",", "v", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tau"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"curF", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"currentVleft", "[", 
            RowBox[{"x", ",", "y", ",", "tau"}], "]"}], ",", 
           RowBox[{"x", "<", "1"}]}], "}"}], "}"}], ",", 
        RowBox[{"currentVright", "[", 
         RowBox[{"x", ",", "y", ",", "tau"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"currentFtable", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"curF", "[", 
         RowBox[{
          RowBox[{"i", "/", "100"}], ",", 
          RowBox[{"j", "/", "100"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "200"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"allFvals", ",", "currentFtable"}], "]"}], ";"}], 
    "\[IndentingNewLine]", ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"iii", ",", "1", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6833218067847214`*^9, 3.6833219191449327`*^9}, {
   3.683321959463009*^9, 3.6833219623420134`*^9}, {3.683322006298141*^9, 
   3.6833220372121954`*^9}, {3.68332208172028*^9, 3.683322093061299*^9}, {
   3.6833221536924157`*^9, 3.683322187066476*^9}, {3.6833222506496167`*^9, 
   3.683322279163667*^9}, {3.683322390202637*^9, 3.683322448806284*^9}, 
   3.68335183939285*^9, {3.6833524330395536`*^9, 3.6833524663846316`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","mxsst",
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"10000\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"",2,9,9,28732578158505266420,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.68332250182294*^9, 3.683351853817677*^9, 
  3.6833524717302427`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","mxsst",
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"100\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"",2,9,10,28732578158505266420,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.68332250182294*^9, 3.683351853817677*^9, 
  3.683352475548051*^9}],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue","mxsst",
   "\"Using maximum number of grid points \\!\\(\\*RowBox[{\\\"100\\\"}]\\) \
allowed by the MaxPoints or MinStepSize options for independent variable \
\\!\\(\\*RowBox[{\\\"y\\\"}]\\).\"",2,9,11,28732578158505266420,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.68332250182294*^9, 3.683351853817677*^9, 
  3.683352479448264*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NDSolveValue\\\", \
\\\"::\\\", \\\"mxsst\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,9,12,28732578158505266420,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.68332250182294*^9, 3.683351853817677*^9, 
  3.683352479469266*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"allFvals", "[", 
       RowBox[{"[", "jj", "]"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"5", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "200"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "100"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"jj", ",", "1", ",", "100", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683352827548339*^9, 3.6833529035746827`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`jj$$ = 7, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`jj$$], 1, 100, 1}}, Typeset`size$$ = {
    306., {62., 67.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`jj$39945$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`jj$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`jj$$, $CellContext`jj$39945$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot3D[{
         Part[$CellContext`allFvals, $CellContext`jj$$], 
         Table[5, {$CellContext`i, 200}, {$CellContext`j, 100}]}], 
      "Specifications" :> {{$CellContext`jj$$, 1, 100, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{357., {111., 118.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6833528843510475`*^9, 3.6833531263420153`*^9, 
  3.6833532136964054`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"curF", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6833227510102425`*^9, 3.683322760447461*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHdcT+/7x98NKkRDS7veZRNl1zlGtOydkVG2krL3+mRFhOyQJJFdMkNI
VkVmVmWkIcqI8P51zrlf9zmn7+P3+afH4+n+3Oe6X+d+X/d1Xee+b9vxMwZO
UFcoFJtqKRQa1X8PDD96bk2LlYzwN5Sp/pe1/9We1mVqK2ang9d1Ftw7+qe1
1dgjrscKn6uUXg8p/3Soh32OS4qr8kJD53OBuZS/HzLs6uSrV10f3Gx8RumV
T/m8b5e3Ghekua5rdfNeYO4Hyut3Ha5yG3TTtdf28R+SA4spz/IefNT31Q3X
MWcfhCu9yinPJvzy5L1mXpHf/qcfc8vpcYG5Pyif+y2Rf+787M7OkcpflOcP
GcPb+fQ/navJgVWU5x0axI+rXednvXOT/1LeLvowr8Pmz3HPVSoV5R5z74Zx
ukFPQb/TrEIR/8014ogr9AQ3VWu65JLqoxv0BC8f9i/v6LsfbtATvLuu84/5
J1Ru0BP8tWJ7xNkH6gz0pP3sDo4MbabJQE/w0csrgjQuaTDQE3xZoMChJ3jT
eUI/0BO8S04U/1zoCf73TFveTugJPkZPGBf0BN97qgmvA/QEHxG1iNcNego6
Xa/Wc/LgD0UpVE/wiYsnqFZP+En1BJ/fKLf1hgG1GegJ7j+jIsasoD4DPcG1
Sht5Gg0yoHqC36waHHlpryHVEzx2AlMyrYkh1RO810CBQ0/wt8+EfqAn+H/X
hOdCT/ARpoKd0BM8MecFPy7oCf6xtaAD9ATfmmTP6wY9BT3ucvPTuOjDNaon
+PKOy5K6ZSoY6An+q6j15a/aelRP8ItxD/NcnIypnuD+1w4uSOjXiOoJ3ufa
baNr5hZUT/DYmTv7WI41p3qCPxwicOgJ3jhC6Ad6gj9dITwXeoK3nizYCT1p
/ynCuKAneI5C0AF6gvtqLON1g57CuB9W67kme2rILaoneL5a4+THhrWonuAn
O23rbWHekOoJPjhx2px52eZUT/BA51WfjBbZUD3B3V7UPzp/qy3VE7ys5TGH
TENbqif4YguBQ0/wuxeEfqAneMd6wnOhJ/gnP8FO6Ame/XsrPy7oCa5/yZHX
AXqCj9szhNcNegrje1Kt5/4xqa8yqJ7gJ39+vHffS5vqCb6o7uI1Fs1NqJ7g
i3ttqrhS24bqCf7UJupb4h87qif4AP37Zcc6Kame4M8sYryD99hTPcFTtQUO
PcGNSu/x/UBP8ISKbfxzoSd9rplgJ/QE10xbxI8LeoKzhwUdoCe4ss1EXjfo
KYwjt1rPZSkWf+9SPcG7XnmZoO1Zh+oJfq5q0bpUfTOqJ7iG7uxy5TBbqif4
3KKi9R3WKametP2Kti/evXKgeoI7zW21NKCVA9UTPHicwKEneOYIoR/oCb7l
vPBc6Alu83IWbyf0BO+fKIwLeoI7TxJ0gJ7gL3yH8bpBTzUF99/baj037eqb
dI/qCT7CNzP73zdRT3Ddtb3VkpJFPcEtCxcqW2SIeoKf9Ojy9JeeA9UTvPJC
2XH/6Y5UT/A6rg+8E5NFPcEvOQgceoLfiBT6gZ7g4UbCc6En+I8kwU7oCb63
ozAu6AmurxB0gJ7gdxpO4XWDnoK9+Zz/lM1P8B3FRbL5Cd7p5wbZ/ASvlfSf
bH6Cz65VJ1w6P8FPr5kmm5/gwSHrZfMT/MSo9bL5Cb543DTZ/ATfmKMTLp2f
4Jar/pPNT/Ds+A2y+Un72Vokm5/g30dMkM1Pwa53/+M/wdvvU7sv9Z/giRd3
y/wnuN224zL/CV5lkiXzn+DDdnb5IvWf4Hl+vj5S/wl+y1vg0BPccrbQD/QE
zyzKlPlP8IpJx2X+E7xd6G6Z/wS/0VfQAXqCv4peKvOfwvM/cL932foOfri9
h2x9B/eOvyhb38HnzEiRre/g7UKzZOs7+KlH8bL1HXxw5ElH6foOnr9M4NAT
vNvZeNn6Dq7yyZKt7+Datimy9R18ypSLsvUd/NmXXrL1HfxEymzZ+i4851O1
nrdl8Sf4utP7ZfEneJf1Q2XxJ3jMG5t8afwJvmt6r4XS+BP85npHE2n8CX5s
SEU/afwJ/qKTwKEn+H5foR/oCW7QSngu9AQ3OyDYCT3BTX2HyuJP8DcL9svi
T3CfQ/tl8afQX3G1nsGy/AjcVGOXLD8CvzrMzEmaH4F37RJ6UJofgWdkHJLl
R+B/AjZtkeZH4FH/jf8szY/AXUMEDj3BjbsL/UBPcPfoQ7L8CLz9u5CD0vwI
/Ke+MC7oCb4vaacsPwJ/WTpclh8J/19ptZ7PZPk7eO9of1n+Dt5tT498af4O
3uj0dVn+Dr7uY4dN0vwdfP73oi3S/B389aCwmdL8HVyjq8ChJ/jxbKEf6An+
/oLwXOgJnj38uix/B08cLIwLeoI/7usvy9/Bvw1LkeXvwr+XVetpI6svgV+J
vS2rL4E7D98kqy+BnwuIl9WXwMe+HbVNWl8Cf2tYqGAk9SXw+30tj0vrS+Dp
nQQOPcH1Pn/k+4Ge1M5TwnOhJ/j6dvGy+hL4unqbZPUl8JT+t2X1JfCEqm2r
Od3en699z9HrNCv8jWG7lKRddJxx2w06g1fHUTMjU3a6+m9ltwTm/qPtm+4S
2qN/8HFblvLt0b/w/31mO/j+k/UPrlB4hkj7B3fWEtqD0/Gan/s69ZjYP+pm
rOmEco6jPXhz022y9vS9zBT6gf14bq2Pl3j7X2Rtb9O0ejzC30i25ezQVs7r
490WdAtNTg5UUT7aTuBoL/x7GdtTlShrDx50TODQAf1U+4fl2dfXuqI97Lce
besZnbqW2gP7278L5TnsR/8Ox9uv4PpBe/Qz8/JpL2l7PDfM+Bf/XNiDfqp/
Xyul9uC5zAbhubE+bUL53z9579n9rvbvN6PcDTxPNe/eucCLbPn7sp6jmtZl
wCcPmGsWlHuLTbsVoxWXbkR5sL6vo0KRxW6vvbXOmLsWlLdY8IP1isxhvVIb
KD82taW8MH+Lb6TyOZuldqPbT0N7yoW/r1hl+pvlcfWVlDuNmNQrUpnHTn5s
uELKN9Zv/yg5sID1qRrVXdpPyXXNsbnJ71kfPzUH6XO95z4qUak+sqV+JfWk
dsY3j5mv9Cpi7cP+6EjHVfttcG2vyBK2q0uQl1QHzLdms9hBUt3wvposq1Sd
HJJGdab1zBNd/S0GqtN+UJczn31ta7cH+pSjvrTg7ofDt2eZUY46ydSdXjr3
rltTjny/f4iv2vkudpQjbzVIKf7X/qSoD/Kvbn9PXWNbiXoij9A2HKSStkc8
vErPVl3aP+K6ihcz60rtQXwy68eABKn9WGe3vsiLko4X68XKyuQJUn0wbxdt
HqN+qlrPKe3iLK6Zf6Hcc2Vr+06jrrqGj9hZPDCjjA3fcdBjZtAptlW56lft
h3/dyldHPfSrbv8jYGdZpd80tsR8dKHB6HNuG0j7K3vrPb2Te439EX12y/UC
XQbtdYLKW1ooz7DPdj542HikgkH7jjM86oxW3GX1jyv+tDhgxHwl7Rdru3jv
T77O9vJyNorq2IC297W5Fj3X4CE7MTB6+uvm5rT/L8+DFrfNvcuOWbHwv2Bn
Ywb2G6/1S7ka+4QNXdqcXTvMmrZPejx4eP7Sh6zjlf2PIvaZ0/aPvlZl63TI
ZX9t96sM/WVD24cw5TObGzxlCzebPD1/2Jq2j+D/vmEzi/uUbQ22pe2dDkes
nxWby1rVsisv1rWl9h8Yt1v9Qct8dvTmU+Pu6Yrtv/F/37JVp8/UPx0sttc0
nhpRPucd22hj+O55h0X7B7lOGLMyIJ8tW5rJbKi2E+397nS0MLn6ga1VWTq9
3z5RnxNfnEsOJ75jn13MyjhVrcNG0v76Eq0jXXQ+saNsOju4VOuG9oaH1Off
+/GBLU7Ub1zVXNSnkfOTdmMHFrNlPYqnNK9+L2g/1Te71lf2E/tf70HtXKvf
I+yZ/zH2+qrdpey5X2NPZo9Q0PaZuvsjjdYWs68aF31Oq54naP94d2i/I+/K
2HdXvadmDzlH55vd9SDrzg9LWfWXH20eZP+l861Hi4Dwk0OnsQN+/JjMtYed
PjeeFT23P8PmfP14nHsu2u9zPtxkafW8qqyqmNhcMq+Ma+WP1K+eP+tHBti7
SOaP97SN6dnV8+Ttno7T+knmSe2c5nmNqueDyYTuu+ZJ5sN114zf/tXvPe3I
CP79gl8e6LxuaPX7Pe8xkJ8n4NZa6iYLq9/jrfDL/HyDPfMuZh3cV/2+ok1X
dOXmLdrnztjndKP6vWw6NCKIm/9o304ZdLmwWv9/UY/+cr8jtN/xzNVbt1rn
6Rc2Rl2X6FwaXvdpm2o9wybG/OF+1/0Muv9ecbuMzSpzTeH87UX7ayWtqv0A
/MOMCHee74gttusk4fDDWWZ1mCYeKjdw+OHfy69kNNlcnwGHH75w/cqroBIj
yuGH1zg9+K/PZHPK4Yc3pbV7tG+FNeXww6Mqiwp717KlHH647k+rcZ4hIocf
TvvZ85O0Pfzw9SlhOdL+LYgfntZ79WqpPTQPPbPljdR++OHyXvH3pON1In74
5JHHXTl9oDN002+wv76xhEM3v7BvV02q+wGHbv0snnwdX/1ccOhm7J70lKm2
Exy63XHVcoyoHhc4dKtr/Ka8R7UO4NDN6VVSWzZE5NDN0ahzhbQ9rWvlDWss
7R/r17fRQc+l9kA3pzpHK6T2QzeDXq/TpOOFbnuipulL9cE6tba9eik3P+st
mFFPTXGV6vl2xArbm6p3bn1d6oZy8RPih44nZ76OGZTkCk6/F+f3mD+v+Te3
qKOvx1THnLT91rVxiwdqXnEFR/seXvuOT/f/4zaDj8/e0vatDq1LSB1w3RUc
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
yZdZsycdumbt0KL+6hX5vjno5OGbFUwd+rtb7JPAblGeZ4dbLvFYMrcO/d1Z
bc89HZSbzF49XHGw3llt+rtbQOw56Z5u/+icPtXHk9gzUC86935Lffq7cyL2
FEbX/Xpzbn36u8sm9nT94W728Zk2/d3NJPb8/phXf1pPdeqvDIg9XZ8N+5Sv
+ZP+7s7m13P0jjzL5rg0GCj93X0fk1ii9LrDhree01q6Pt6q1SsuUpnB2m06
u9v8dx2qm/D3NtvsskXYNF0DqttE8v13zaX6cbvfNqS6tf/Z4FFu8k022sI1
acg/I6pb7b3x4V6RN9hOZo7XBm80orqVE3vW7h0d1/SxGdXtKrHnk2rC3eLX
ZlS3TcQeI42wHl/vmVDdxhJ7nm790fBQt4ZUNydiz+PzFwcdGtyA6qYg9ly2
dh/w+4sm9fPZ3bv1OheYxvq1begh9fPnTL9F5CZnsznfW9tL47F9065Oj1Rm
s4PLrYPdWonx2Oor4V5ekVlssPv3Lz0nmlDdZpDv47fDAkc4bTWnuh2/7V07
KPcBu3bR13sOByypbkuCClJzk++zZYdb+KdEW1LdzhJ77jf1iWnqI8Zje4g9
We3/ffLbbUN1W0Xs+equd2+lgzXVbTqx503w6nmb9cypbvHEnlZjco/4TDai
us0j9vi4D9AZO1CX6ubVcNF8r8h77KtjU4ZJ44rQ5ZuPKL2esH4PWneVxv8j
c0aH5SY/Zp/H21lmqYvxf4/GzfwjlY/Zy31a9NkZaU51a072D6RWvTdJCrGh
ugl/c9gDYW/WtyqwpbpVWUf8Sg58xBYkVAyca2xHdZtJ7MkZFP459bkd1W04
sac0xX1xu2B7qltXYs8QRsN312w7qlsTYs9Ng3VBU7vZUN30iD3z3rX5a2TY
iOpWSezRPVWvYqOlAdXtbcjIJ4G5D9kJ/pbO0ji2dVGrtMDcF2zHQ64Z0nzT
xK1qn9LrBZt6ccG4tU+MqG6qiPRFucnP2c0u3fJNR1tR3T6S/RXzd1xmF3qK
+WZmu7HtvSKfsR43T66z01dS3YS/z9jbUw89ejFHzJtaEntehv8NObpAzDcb
Enu8e/VNXt1HzDf/EHvehY/ZrDFdSXV7R+z5MOm/0E9NxXzzHrEn4e34VcYz
LKluZ4k9LtbnFw49IuZNe3Iry5IDn7L5xe4+0rypeOC9l8mBb9gDhyNaS+sb
jw7tOB+Y+5qN/Df4iXakmKdfrAyIUnq9ZtdcXatmHSPm6QfJ/hPfZs8CGriI
9Y310X/7RSpfsYdT6plps2KeHvo1o4VX5Ev2v2DfH8Y5Yp7+idizt3uflu6N
xPpGFrEnqJcqv8BCrG+kEHvCModVZo8W8/T9xJ70Ds7PTjUV6xtriD3T4zc2
CBkg5unBxJ66401WlDUX8/Th/PeWl2z03OIH0jz9EW9vHjuyeeUD6Xzz0No9
JTc5j40KUPL9UN2c1J4lB+axCY8P8s+Fbtifc/tHd95O6Ba78v7ZwNy3rN7Y
QH5c0M000dneK7I6b4g3LuB0gG4PiT0eEx75PjgpqacRezYYrOJ1hm4XiD3v
qqz59wLdWhF7nvV+y79H6BZD7Ll3PYJ/79DNmNhjtHgoP09oHfLJzs1Kr7fs
Xl9hXkG3NpEaa5Re79jrsSN9pP7tEG9vAevS7CE/b6Gb2fvMgNzkAtZ6bgQ/
z6Eb9i8t+5DA/y6gm3rHPd0ilQVs0Z49/O8Ius0Zp34yMDefZf/F8b876OZE
7DE+nNTkSw+xvhFL7FGf0SCH+11DN1Niz8AORbwfgG7hxB53q5e834BuCmJP
gNM43s9At1nEnpWT1/F+CboVrpts5RWZzz676pkhnW8RvR429Ir8wEY+6OQs
XU81gjuuVHp9YK3KW/B+ErrN5e19z9Y5Fsj7VeiG/V3NV6Xyfhi6jS2Z+iA5
8D071m8c77ehW45Rtmuk8j274+kz3s9Dt43EntIdqba734nrqTqx593zrYO4
dQS6zSH2BC7sGM6tO9CtiNhz/K+RKbdOQTc/Ys9Kr7H8ugbdHhJ7Ns9y49dB
Wr9lOxwNzH3HHvnds6vUv5X+3n8gMLeQPV8QM0wav41Taul5RRayK6K38Osy
dHvcJ3CJ0quQzStqlMCt49AN+9+0g1T8ug/druzvNDI3+SMbpFnBxwnQre2d
fRnJgR/ZRTqXi7i4ArrBnvELbrX08DWnuo0l9iRqJAVwcQt0yyH2aATcuc/F
OdDNk9izbc9bPi6CbpeIPY3mOH/l4ijo5kTsmRvdlY+7oFtsRa2OkcqPrNpH
H3vpeupzYkarSGUxqz+tu4c0X0h99nhPYG4RG9JqIR8HQjdndde6XpFF7KzS
JoO5uBG6YX9g8mB/Iy7OhG4WvL2f2GtNx7tzcSl027QkaGhu8ifWbd33e1wc
C928iT3TcvodnrTQkOp2hdhTT3HkOhcnQ7e2xJ6N74ySubgausURe2yylvJx
OHRrROwxM/Xl43botpHYE3TpGx/nQzf1+JwbyYGf2JyDx1tL47cj/szF5MBS
9nFa94HS+oblhtimkcpS9me7nXzeQfP05Do7AnNL2M3DHRtweQp0w/7JyZsf
83kNdFug83SW0quE7Tvco5zLg6DbZ97eYtbN+NVLLm+CbrBna7OkrFK9WlQ3
C2LP9KG2cVxeRvMFYk9w7UxPLo+DbprEnnUuQ29xeR90m0fs2Ra0lc8ToVsJ
sWee+i8+r4RuY0cdHJCbXMz+vtjOTJov1DbV9cxNLmPrfW14o9OMeKob9uXG
NneO5PJZ6PZ56nNlpLKMHWCYxue/0G082V+as8ohlMuXaT3t8iE1r8jP7KqM
Fme5/Bq6+XysG6z0+symuN3V5PJx6KZJ7Dk55bzPfM9MN+g2j9gz9q3tTC7f
h26lxB6L6yPnc/UB6DaO2KPvwezh6gnQ7TGxZ27wHL7+AN28iT0vLobw9Qro
c+Pf+T8tvVawLqtepHH6QE9HwvXbyLkNqT8oUoV6CPq5yv97Kdt7zzqeo/0V
wi+MlHNtooNztPBewFGHMbER6lHoH/survr24jn2q8whdqaWXbMfNuOhG7gx
sbPu0b6LSxqp0f0tV0g+vmDX6Vjf7bUoX0HqBqrbJfMXpelT/oTkoZ8Wm4R2
zjKk/DfJl8tvmS9S/TKjvC/Jv94YP7tUesGc8vMkT/Q6uMXNY7IN5QUk7+hp
0NNhiJkt5bNJfjT3v7+KByo7yveReNskaqr2wAX2lLchecGL549aZxxWUj6S
xJmt7r5Qzfog8lISDz+MjtxxtLcD5eEkvvKP2SfjOSQObL2+pWK2pJ8iElcc
yWGdpM9tS+KfPz0b6Ujt9CTr6RW/NDXpuDaRdX/gTXdHqQ5xZB3Z/+sAI9Xt
M1nvqra3SZXqrEn8Z9aB2Uuk76U38fPJtbxmS9/jeOI3UhN+LpS+9wTi3z77
LDssnSepZD7PTQxfKp1XWmQ+K426OUrnIb0P5F7tY2vHadD22PeysumYoXnZ
BpRjX4fF7RZKz/eNKMe+hZghU1+5pIs64Lt8x/J+87q7izrju/PUdEvr5w/E
94Lvqr4tVhduHiy+X/pddcRiWXt8F/PxqTtf2j+++1gfCXkttQffNd7+Xeco
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[CompressedData["
1:eJwtmgf8TuUbxs/znOdN898QoYGsCimllLaQMtIubW1FaWdkky1UNCXa0dTe
Ew0NRCklLaVSKhX/6+t6Ph+P91znft73Pe8597ju6/7VPbvnMT1iURRX67+k
18f03zS9rghFcVGlKDYpi6KqcF3ZF8v2qvC7wi8L95P9K73+IZy0f7WOX5J9
jvALOu4t+0N6z23CX8h+jvDLss8VflH2PsJba70l20Cdu0a2B7X/Vh0v1blu
st2uc5OF79D++sKPy36P8Leydxd+VPhu4W+ELxR+WPh24S+FzxV+RPgO4WXC
5wlvrM/bRriOPu9T2e4UfkD4zujvq671nvbeoHPXy/axzv+s4/+0Vup4G9nf
ln2Q8LWy3631kI6nRn/fpsLbCu8svESf31B4D+EDhH/k2rVGC8/XZ5yq/Vtp
vanjATwD7b1X61Edz4j+PdW03pV9uM71k20m16zjr3TufNmq6NzWwrW1f5Fs
Lwq/I/y88HWy36tz44Q/1v4zhGcIjxX+SPh04fu1/3Hh+6Lv54Ncg/CDwo2E
HxCeIfyAcEPhILypcC3hT/RZbwrPF35deKDs5+tzPxP+ROtNnbtP9sd0fG+0
P03lGQvfFe0P/2S/21av7+sgyr6Z8PbCC4T/1au2FdX0+oHw07K/KvyU8FUy
rNWrThVV9fqe7KXA5sI7CC8U3ly4unB94c+El+t1jXBF1/m7ju/XuYnCi4TP
0uc9r/1vCT8r2zXCtwnfIny7cD3h6do/RvhD7T9N+HXZ3xd+Vfb+wi8Ivy38
nPC13D/tnyT8qfafLbyt1jwdD9O5vtr7n/ZtpOPqep2vvRW9fi68UOsZHR+r
c5tq/3Y6/lDHb+g9H8j2mvAAfdZrwu8JvyJ8vfCtwjcL3ya8s/A9wncJ3yPc
QHi9XjcWrqHXj4gVrV7CT+s7jpf9VeHnhP8Njt/bhC8Tni18nHADfV4z4VZ6
/w+y1azYt/CxobJtr9VAx81l/0b2V7SeFf4n2B8nlo7HidH+N6m0P0+K9s+r
tL++8KXavzv5QvgZ4bXB9/M14eeJx+D8sb3WAh3fqHPD9VlDSvv3UH3eSbK9
k+wvZfbPt4RfFg75eb3NNQrHfD9fwseE/w5+/m8Kv1Swwff3DWJMcH1w/nta
+GHhVcKXCk8pnZ+mRD/vyaXz6eRo/6qh9YH2jtS5AbJdrvfvqOMLda6xbONL
58sbo/PDyNL+M0q4K/lJuI5wU+Gv9N5rtZqSO/X+PWXfTva6wrvL/rVsNYR3
Fm4mvFz4Cq2dhC/S/ibaf41wE3KP8B7kI+2vJbyL9n8pWy2d+0S28To3TLbt
hN8XHiHcv/Qz59kP0/6TZZtQOv9OiI6PPvqMvchdes/ewlcLNxa+SriZcG/h
5sSC8F7UA3xIeFe9f5lss5Pz68+y95T9qeT88ZNwD+EdtL+h8F7av0K22sK7
Cu8j/L3wE1r3C/+o/Rdz7bLXED5T+GPZPhCuKXx2cD5bp/dVEX5Xr4O1/zK9
1pCtldYsrXnaX032U4Lj9T3uifDpwfH0Yb7+84Lzz9Tk3E6O5/7cKXw9+VL4
ROFppf3n7uj6tEX+vAbkAe39X77ehsJLhQeVzj9Dot+/Zb7+RsJfyH6XVn/h
N4L9f5rwUOG5wf5DjeF6ro2O93dyPTwuOH/OyfX+hOB8PDfXs5OC8++VpT//
muh88GRy/Vwp+yXkv+R8/7vwlcIvJteXP4Lz9XPCs4R/E76c+Mv16xjhd4l1
rUeEfxG+jHycXA9XC1+BL2b/vji4fn+c46F7cP3bUbiR8N66vm/xdeFdhFsI
fyechLfItWmQPm9+9vdzgusNxWQTvdSM9o9FOZ+Rj6gfC4XrCfcIru+fZv+7
LPh5LcjxdkkwX9os+8v7+rwhOR/z+6ZF1++qPAPtHaxz1/Hd/GbuFb9ReH/q
SHDOJfe+ojVPxy/pfF/tfaJ0PnpMuJdwPe3trFVF6y+dv6U0P7pF9jNl/0v4
osK+/J+ub0bp5zFd9guwxw2prtgm+nn8TX6DO/GMSucIcgU5p57wP7LPFL4A
nxH+k/iE6wl3EG6t40ZaP1EDtGqVjvc99PlN9VndhM8iH1HH+X7iHe6mc0eX
vsZZOf5OgQ9oLdbeX2Vvk5zzyH27C9eHm+Z6f2pwvSTHketq61w12dbiX3An
fB5fkP0Vah3PsHSdpd7urfWnjnfVuUNlOyg6Px2gNUq21jq3H89HeETwnn3B
WofruLP2/6bvain7UNkPJEfJ1oqcLnyYcEvhfYQH8/uE9xR+g7qs4yVa86Jz
JLmSHF239Nqf78o2ngHvbRn9bKqW3rtbdD3Zkpqp9/fVuctLn6PWUAPYe4T2
DRM+iJgpfY94to2j712T6Ngixqrn+k4+3zO6Pi/Q6yrhdeTk6GdwAPcm+tkc
ybOBa1FC+d1aDbVWCq/VOlz7T9Xridp/GPwSnyaXkKNlu4ScHszZ9tfxxcR4
cM/RUsc9k30eXz8Q/khOojaQ0/X+RM2gdhDjwhdoT7Vg/9krf1aH4P6FzzxP
57YO/k175O/uGMwXuYYeOlcX39DxAeQLehJqCzUAbkzOgzuwV3gj4WfIdcIX
ClcRfpZchs+X/qxOWhvlz6TevKDjA8jX5A84CdxHtp5wWzgRXIqcVPo3EUPE
Dr+1UjGXg9OdX7rmbqi9+ERpDkhuJQeRi/itbYOfH795Lx030PpRx3+Tt6mf
wTHanlyqdQj3WtfZXJ/VnlygtVrngl77lK43/WQ/QfYj8F2t3wo2mI/D7+rJ
vlvFPkRuJcfiWyNK8/GRsp+C/8rWJrj/og/7Xddzn/CZOj5Ce89N3oNtdx3P
03qB69b7x8F3qUeydycnUNt03E5rPTVGax+d66TXI7V/P+1fR70JzpGnyHZp
8m/g2sk3/4Mj8zt1qpfs5yd/Jp/VXMdrqIfC3YQ7lb7GY/ju6Gsnh2zgOoVz
y77CQ4JjpnnpGkDu7xtdG+iJ8ZXe0b0yPeeVwn1yL0o9x7eui+4luSZ8/6ro
ayWnEUtXRue6m0pz5ZuF61acE4gN+n9yBT7Gvbo82vdqa30e3IOPLe2z1AJE
A3yZGkXuvzS6dvXI9aVXdCzA7+GONwnXET5Br3eTy3XuMNl20rnPgnusMaV9
mli6ItrXu5fO1T3pWyqOIWrDJdGxhY9Tay6O9v1HS/cvM6P5Ir/x6+AeiN8+
OroXg1PDrZ8sze8fj+YjT5XuD56I5hvPsEf4aeFdiPXS/vVoND/ZQWuxPu8m
nRsl2+zS/cST0fxnUbRv4G8/00NEczFihFj5Ljp3Ua/X6HhHvWdJcA83WvbH
Svc7s6L7i4dL9ycPRfNZNJEfgnt2tJJZpfutR6L5MT6L766Krp3E8LE6dVp0
bN8araVs6FlkWxGdh8hHf+Qe8jsdTy/cW9IDfx+sCdAbzyzdnz0czf/QKMhN
A6K1C34DWsrY/Nu4R2gZY6LvHT5/pHDb6FigBrYXbhNdG6mZRwm3i66laBBr
9P1PFNYmmhFj1BHZW8jWSriN8NHCq5M1jD+DnyHaBjW6s46Piq7d+CRayoYe
tLRP4pvHy34o90/4NOGThFtnfyO3dhc+tuKcSi0/ODrXVkrX1h3hDhVf06Dg
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
          "]], Polygon3DBox[CompressedData["
1:eJwt13W8VVUWAOB3730PaRFRWgkDRVRQQAxC6U4JJRUFBREkFKRBCWmGUFoJ
BSQUkE4Dc9Sxe4yxxxoLhPmW5/6xfmevb69zT+2z97kV+wxqf0c6JyfnA5En
uuXm5HQV/xA36/jL9qdMTk4P7SYKWmi3FGfyaexoKidnsv2msgmsBVvIWrNa
7HrRSczXd5O+Y7Y/y3tqN/V7bbTbZiPac/T30ve7bT5xl/ZWvzfA792pPz8b
xp5kd7AhrBgbzw6wUWws6yg6iHn6+uj70/ZucYX2JHVXqquo/x5Wh01mV7HK
bCm7hz3NxrFhbASrzSayOqwSO4NNZc+xSWwKK8pGsz1sBBvFlrPJ7FU2g01i
v2SS62zmHrTTbi9mqruBrVXXU10Tdj/rwJazzqweay1aiVm5yXP51fYH+Y3a
D6nroK6Z/Dp+Qrsxu1DUkJ8mJqg7KL9X3zh1p7NJ7DAbwyaw4mwiO8RGs/Fs
MmvHlrJOrG52LMSYmJ2bPNPfbB+IMaS9Wl13dY30l2BT2LNsIruf/U/0Zs3z
kmcVz+zXTPK8WuQl4ybGz4+iO1ti3472bS6f4fe6sTWsR1wjm866sEfYjawh
W8HuY6+xmWwiW8fOktcVb4leecn9j+cwNzc5pz9sy4oF2m+omWvfBfoLs1Fs
FxvG7mHL2Bj2PLsmji1/XKxi38s3qFulbj1bzr5hj7IVbBWbnk7OI86nu7yI
uJftlg9XN1JdITaS7WRD2d2sKcvIf+Ifi1ryjWKl9nd8vbqV6k5l49h+NpKN
YaewoewJNpANZhvYCvYte4wtz55fuex1xfV1c69KspnqXpJPVTdD3TB2KbuX
1Y7xIS8ghrNt8kHq7lJXni1h77FFbAl7jD3IvmAPs8Wsi+gs3uHvihdiv3iH
tY+oG6tuuP767Lj2N/GMxUXyh2MMar+tbr6+aeqasLT8R/6hqBnnJqprj453
Q10ZdY+yxexztootYiPZNWwqu0JcLy8lZrGX5dPUzVS3kt3PXmez2GRWms1m
r7DpbBYrw+awf7IH2Gy2NuZc9glbxuazTXEt7L9sI3uYNcs+8xbikjifmCPF
heqGy6uqK6FuImvJFrE2rDZbzeaxj9gSNoeVYwvZm2weW8gmsVZsMWvLrmAF
2Qi2nd3JhrKz2TL2AXuQLWO7xTPaO2NejHcixrKopz1dXQN9F2TfwUXsM1Yv
3uEYj6IqGyG/SN3p6n7PJOtQK+Ouq3Y3sUbd/Bjz6paqm8ceYXPj2bKH2Fx2
FlvK3meL2VJ2H2vPlsVzZNewT0QNNpidx8rJc9QNYOtZX2l/toNtijWM7WKb
M8k6eWasJzF2U8l57mRbYu2U71G3Vd00ViLWDrFAXKvuINujLn/cK3V71R1g
u+WnxFzJ9rAn2Dr5L/bbytaxp9hmdpztZlvY9ph3Yq1jO9kmtpWtZT+zLWxt
zNmxtsYaHeM+3m35k2JDrLvyHeoeVzeeFc+O+Rj7dZzzEXZOPEdxItYGto9t
t2861hX77rDvLrY1ndREbS/5V7wBGyevpe6i7NxZRn612BvPxO99za9VNz7m
EnXV5EPUFZbXjPk11jN1X8b7r25suLqq8m9i3WMT4rzZxfLN9l3NfmT1Y22V
v83PYT3kJdUVibHLn2An2T72JNsT9yY+kGL+tNnG9rJt8lR8c7Dt7C1RSd7N
vmewQtl5o1h2Pox5sYZz3hZzdKwv8qfUbYz92Hr2NVvHNrAX2X/YlzH3sQNs
MCsv76+uPMvHnmOH2akxx7AjYbF+y9upi6H8Z8wh8Y1lO4s1ZlfLn7bvAVZY
vMgOxnHFmfKu6k5hJ7SfUXfQtkjM+exQ9p5WyL678Q73c23PxzqvplMq+ZY8
nk7GQaXsfY/7P0THUXZEX7GYA9U9bb8prKN8hZourD47Gt8mrEPq79cx51jM
wRqdbFeyrqyBmrrsT+2vYj4WF8qfFYe0i4bpO6zuhfhmk3e2bz72Vxw/5mPb
3qxQPGZ5Pfse0/46+kVV+au8rPZN6grry2SSd2E/KxTvMO8tfy3mVHlfeZGY
RuSvxDrAerKCLCX/V8yfrCMrzvJnx3hlNijeD9FR/jIvxbrLC+Tk/P1AD/N9
rGDMr2g/e0NUkF+v7nRWQP6mqMi6sBKsoPwlUZL9FufMTtoe8nt7bQuIo2yf
mobsZHyDxpoiLpNXFI+p+Uq+Vt96dd+J1mwGa8iulG9Rt4b9xDazNexTcTm7
i1VhZ8mPiVtZW2Oip3av7DzZOZ3MpTGndolny29hbdR11+4h+oje4kH9/WPu
0VdB+xHtT+230jFW628V3yEx36aSMRJjZZSoq25ajEtWRV1zlitvKS6NY8ur
idfTybdFfGM0kLeJ77O41lRi8f3RWhSSX5dKxk2Mn7iWuKbF2v1irnB+f8j7
arfWvkH7RnE8k/S3y0uup092jYu1bkFuUn8i1nwxSPvxeNccY4D+FBvINrBb
2G2sMUvJf4h1T1wuP8Fv036U91HXV57m8cdvI7uV3Z69r3F/F+UmzyVe4jzt
Idpb1N2OBun/K5Pc8/b6b4r1WfyWSf7ftcxLvtvi+y3XvneyTfbtb9+B7CF2
O9vBBrN+2fsQ92NhbvKcT+Yma0/zdLJWxprZOeZDNVezUfLq9j1f/m9xGRvC
zmfl5ZeofYN9G2swu1b+Bb9KPjKeLzsvkzzPeIbxLKuIi+Xv8HPV9ZKX0ldU
3oLnxdoex421Sj5GNFI3R95U3SXqPhTV2ABWkZWUj1bXkM1mTdilmeR84rwa
sQvifOTf8zbqZsob6btKPo43YfNYc1aDVWZPxfvLtrNd7FvRjE2J+ZjVlI9V
15jNZc1Y9bh+9nl8R6ST64nr+oBfIO8nL6euuPzjuIfsDlaZlZa3U1s6ziOV
fEfH93RbUTJ+P5WMuRh71cVb9v0unfz3jP+gn9u/lnxYrNusgvz1THK8OO6z
+s6N7zJRNpV828Y3bvy/qSM+je+XdPJ+xntaW3ySTv73RF18E8f/j6LZeTPm
z2rG4buOcZ6aPvLSjnWq/D1xPruZlWHF5O+LKuwWVpadJv9IXMwGskqslPwz
UZMNjefGzpbvd9xdLF86+e6N79//A7UNEDM=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{231, 1, 227, 212, 761, 15, 774, 29, 788, 43, 802, 57, 816, 
       71, 830, 85, 845, 846, 99, 872, 113, 886, 127, 900, 141, 914, 155, 928,
        169, 942, 183, 1064, 216, 233, 197, 229, 221, 517, 198, 518, 199, 519,
        200, 520, 201, 521, 202, 522, 203, 758, 263, 335}], 
      Line3DBox[{337, 2, 716, 219, 231}], Line3DBox[{339, 3, 337}], 
      Line3DBox[{341, 4, 339}], Line3DBox[{343, 5, 341}], 
      Line3DBox[{345, 6, 343}], Line3DBox[{347, 7, 345}], 
      Line3DBox[{349, 8, 759, 308}], Line3DBox[{351, 9, 349}], 
      Line3DBox[{353, 10, 351}], Line3DBox[{355, 11, 353}], 
      Line3DBox[{357, 12, 355}], Line3DBox[{359, 13, 357}], 
      Line3DBox[{232, 14, 228, 220, 359}], 
      Line3DBox[{786, 28, 1062, 214, 232}], Line3DBox[{800, 42, 786}], 
      Line3DBox[{814, 56, 800}], Line3DBox[{828, 70, 814}], 
      Line3DBox[{842, 84, 828}], Line3DBox[{869, 98, 842}], 
      Line3DBox[{884, 112, 870, 869}], Line3DBox[{898, 126, 884}], 
      Line3DBox[{912, 140, 898}], Line3DBox[{926, 154, 912}], 
      Line3DBox[{940, 168, 926}], Line3DBox[{954, 182, 940}], 
      Line3DBox[{523, 204, 524, 205, 525, 206, 526, 207, 527, 208, 528, 209, 
       715, 218, 234, 210, 230, 222, 967, 196, 954}], 
      Line3DBox[{307, 249, 347}], Line3DBox[{523, 264}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{761, 1060, 529, 760, 1229, 968, 762, 1230, 969, 763, 1231, 
       970, 764, 1232, 971, 765, 1233, 972, 766, 1412, 1066, 1086, 1101, 
       1122}], Line3DBox[{774, 1137, 1321, 773, 542, 775, 1240, 980, 776, 
       1241, 981, 777, 1242, 982, 778, 1243, 983, 779, 1413, 1067, 1087, 1102,
        1123}], 
      Line3DBox[{786, 989, 1249, 785, 988, 1248, 784, 987, 1247, 783, 986, 
       1246, 782, 985, 1245, 781, 984, 1244, 780, 1322, 1138, 1108}], 
      Line3DBox[{788, 1139, 1323, 787, 1140, 1324, 789, 556, 790, 1250, 990, 
       791, 1251, 991, 792, 1252, 992, 793, 1414, 1068, 1088, 1103, 1124}], 
      Line3DBox[{800, 997, 1257, 799, 996, 1256, 798, 995, 1255, 797, 994, 
       1254, 796, 993, 1253, 795, 1326, 1142, 794, 1325, 1141, 1109}], 
      Line3DBox[{802, 1143, 1327, 801, 1144, 1328, 803, 1145, 1329, 804, 570, 
       805, 1258, 998, 806, 1259, 999, 807, 1415, 1069, 1089, 1070, 1125}], 
      Line3DBox[{814, 1003, 1263, 813, 1002, 1262, 812, 1001, 1261, 811, 1000,
        1260, 810, 1332, 1148, 809, 1331, 1147, 808, 1330, 1146, 1110}], 
      Line3DBox[{816, 1149, 1333, 815, 1150, 1334, 817, 1151, 1335, 818, 1152,
        1336, 819, 584, 820, 1264, 1004, 821, 1416, 1071, 1090, 1072, 1126}], 
      Line3DBox[{828, 1007, 1267, 827, 1006, 1266, 826, 1005, 1265, 825, 1340,
        1156, 824, 1339, 1155, 823, 1338, 1154, 822, 1337, 1153, 1111}], 
      Line3DBox[{830, 1157, 1341, 829, 1158, 1342, 831, 1159, 1343, 832, 1160,
        1344, 833, 1161, 1345, 834, 598, 835, 1417, 1073, 1091, 1074, 1127}], 
      Line3DBox[{842, 1009, 1269, 841, 1008, 1268, 840, 1350, 1166, 839, 1349,
        1165, 838, 1348, 1164, 837, 1347, 1163, 836, 1346, 1162, 1112}], 
      Line3DBox[{846, 1270, 1010, 844, 1271, 1011, 848, 1272, 1012, 850, 1273,
        1013, 852, 1274, 1014, 854, 1275, 1015, 856, 1227, 1276, 1093, 1136}],
       Line3DBox[{869, 1022, 1283, 867, 1362, 1178, 865, 1361, 1177, 863, 
       1360, 1176, 861, 1359, 1175, 859, 1358, 1174, 857, 1357, 1173, 1113}], 
      Line3DBox[{872, 1179, 1363, 871, 1285, 1024, 873, 1286, 1025, 874, 1287,
        1026, 875, 1288, 1027, 876, 1289, 1028, 877, 1418, 1076, 1094, 1104, 
       1129}], Line3DBox[{884, 1034, 1295, 883, 1033, 1294, 882, 1032, 1293, 
       881, 1031, 1292, 880, 1030, 1291, 879, 1029, 1290, 878, 625, 1115}], 
      Line3DBox[{886, 1180, 1364, 885, 1181, 1365, 887, 1296, 1035, 888, 1297,
        1036, 889, 1298, 1037, 890, 1299, 1038, 891, 1419, 1077, 1095, 1105, 
       1130}], Line3DBox[{898, 1043, 1304, 897, 1042, 1303, 896, 1041, 1302, 
       895, 1040, 1301, 894, 1039, 1300, 893, 639, 892, 1366, 1182, 1116}], 
      Line3DBox[{900, 1183, 1367, 899, 1184, 1368, 901, 1185, 1369, 902, 1305,
        1044, 903, 1306, 1045, 904, 1307, 1046, 905, 1420, 1078, 1096, 1106, 
       1131}], Line3DBox[{912, 1050, 1311, 911, 1049, 1310, 910, 1048, 1309, 
       909, 1047, 1308, 908, 653, 907, 1371, 1187, 906, 1370, 1186, 1117}], 
      Line3DBox[{914, 1188, 1372, 913, 1189, 1373, 915, 1190, 1374, 916, 1191,
        1375, 917, 1312, 1051, 918, 1313, 1052, 919, 1421, 1079, 1097, 1080, 
       1132}], 
      Line3DBox[{926, 1055, 1316, 925, 1054, 1315, 924, 1053, 1314, 923, 667, 
       922, 1378, 1194, 921, 1377, 1193, 920, 1376, 1192, 1118}], 
      Line3DBox[{928, 1195, 1379, 927, 1196, 1380, 929, 1197, 1381, 930, 1198,
        1382, 931, 1199, 1383, 932, 1317, 1056, 933, 1422, 1081, 1098, 1082, 
       1133}], Line3DBox[{940, 1058, 1319, 939, 1057, 1318, 938, 681, 937, 
       1387, 1203, 936, 1386, 1202, 935, 1385, 1201, 934, 1384, 1200, 1119}], 
      Line3DBox[{942, 1204, 1388, 941, 1205, 1389, 943, 1206, 1390, 944, 1207,
        1391, 945, 1208, 1392, 946, 1209, 1393, 947, 1423, 1083, 1099, 1084, 
       1134}], Line3DBox[{954, 1059, 1320, 953, 695, 952, 1398, 1214, 951, 
       1397, 1213, 950, 1396, 1212, 949, 1395, 1211, 948, 1394, 1210, 1120}], 
      Line3DBox[{967, 1065, 713, 966, 1410, 1225, 965, 1409, 1224, 964, 1408, 
       1223, 963, 1407, 1222, 962, 1406, 1221, 961, 1405, 1220, 1121}], 
      Line3DBox[{1062, 979, 1061, 1411, 772, 978, 1239, 771, 977, 1238, 770, 
       976, 1237, 769, 975, 1236, 768, 974, 1235, 767, 973, 1234, 1107}], 
      Line3DBox[{1064, 1063, 1399, 1226, 955, 1215, 1400, 956, 1216, 1401, 
       957, 1217, 1402, 958, 1218, 1403, 959, 1219, 1404, 960, 1228, 1424, 
       1100, 1085, 1135}], 
      Line3DBox[{1114, 1277, 1016, 858, 1278, 1017, 860, 1279, 1018, 862, 
       1280, 1019, 864, 1281, 1020, 866, 1282, 1021, 868, 1284, 1023, 870}], 
      Line3DBox[{1128, 1075, 1092, 729, 855, 1356, 1172, 853, 1355, 1171, 851,
        1354, 1170, 849, 1353, 1169, 847, 1352, 1168, 843, 1351, 1167, 845}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{337, 530, 1229, 338, 542, 362, 1324, 555, 375, 1328, 568, 
       388, 1334, 581, 401, 1342, 594, 414, 1352, 607, 1271, 427, 620, 1285, 
       440, 1365, 633, 453, 1368, 646, 466, 1373, 659, 479, 1380, 672, 492, 
       1389, 685, 505, 1400, 698, 518}], 
      Line3DBox[{339, 531, 1230, 340, 543, 1240, 363, 556, 376, 1329, 569, 
       389, 1335, 582, 402, 1343, 595, 415, 1353, 608, 1272, 428, 621, 1286, 
       441, 634, 1296, 454, 1369, 647, 467, 1374, 660, 480, 1381, 673, 493, 
       1390, 686, 506, 1401, 699, 519}], 
      Line3DBox[{341, 532, 1231, 342, 544, 1241, 364, 557, 1250, 377, 570, 
       390, 1336, 583, 403, 1344, 596, 416, 1354, 609, 1273, 429, 622, 1287, 
       442, 635, 1297, 455, 648, 1305, 468, 1375, 661, 481, 1382, 674, 494, 
       1391, 687, 507, 1402, 700, 520}], 
      Line3DBox[{343, 533, 1232, 344, 545, 1242, 365, 558, 1251, 378, 571, 
       1258, 391, 584, 404, 1345, 597, 417, 1355, 610, 1274, 430, 623, 1288, 
       443, 636, 1298, 456, 649, 1306, 469, 662, 1312, 482, 1383, 675, 495, 
       1392, 688, 508, 1403, 701, 521}], 
      Line3DBox[{345, 534, 1233, 346, 546, 1243, 366, 559, 1252, 379, 572, 
       1259, 392, 585, 1264, 405, 598, 418, 1356, 611, 1275, 431, 624, 1289, 
       444, 637, 1299, 457, 650, 1307, 470, 663, 1313, 483, 676, 1317, 496, 
       1393, 689, 509, 1404, 702, 522}], 
      Line3DBox[{347, 717, 1412, 718, 745, 719, 1413, 720, 746, 721, 1414, 
       722, 747, 723, 1415, 724, 748, 725, 1416, 726, 749, 727, 1417, 728, 
       750, 729, 730, 1276, 751, 731, 1418, 732, 752, 733, 1419, 734, 753, 
       735, 1420, 736, 754, 737, 1421, 738, 755, 739, 1422, 740, 756, 741, 
       1423, 742, 757, 1424, 743, 744, 758}], 
      Line3DBox[{349, 536, 1235, 350, 548, 1244, 368, 1326, 561, 381, 1331, 
       574, 394, 1338, 587, 407, 1347, 600, 420, 1358, 613, 1278, 433, 626, 
       1290, 446, 639, 459, 1371, 652, 472, 1377, 665, 485, 1385, 678, 498, 
       1395, 691, 511, 1406, 704, 524}], 
      Line3DBox[{351, 537, 1236, 352, 549, 1245, 369, 562, 1253, 382, 1332, 
       575, 395, 1339, 588, 408, 1348, 601, 421, 1359, 614, 1279, 434, 627, 
       1291, 447, 640, 1300, 460, 653, 473, 1378, 666, 486, 1386, 679, 499, 
       1396, 692, 512, 1407, 705, 525}], 
      Line3DBox[{353, 538, 1237, 354, 550, 1246, 370, 563, 1254, 383, 576, 
       1260, 396, 1340, 589, 409, 1349, 602, 422, 1360, 615, 1280, 435, 628, 
       1292, 448, 641, 1301, 461, 654, 1308, 474, 667, 487, 1387, 680, 500, 
       1397, 693, 513, 1408, 706, 526}], 
      Line3DBox[{355, 539, 1238, 356, 551, 1247, 371, 564, 1255, 384, 577, 
       1261, 397, 590, 1265, 410, 1350, 603, 423, 1361, 616, 1281, 436, 629, 
       1293, 449, 642, 1302, 462, 655, 1309, 475, 668, 1314, 488, 681, 501, 
       1398, 694, 514, 1409, 707, 527}], 
      Line3DBox[{357, 540, 1239, 358, 552, 1248, 372, 565, 1256, 385, 578, 
       1262, 398, 591, 1266, 411, 604, 1268, 424, 1362, 617, 1282, 437, 630, 
       1294, 450, 643, 1303, 463, 656, 1310, 476, 669, 1315, 489, 682, 1318, 
       502, 695, 515, 1410, 708, 528}], 
      Line3DBox[{359, 710, 1411, 711, 360, 553, 1249, 373, 566, 1257, 386, 
       579, 1263, 399, 592, 1267, 412, 605, 1269, 425, 618, 1283, 1284, 438, 
       631, 1295, 451, 644, 1304, 464, 657, 1311, 477, 670, 1316, 490, 683, 
       1319, 503, 696, 1320, 516, 713, 714, 715}], 
      Line3DBox[{517, 697, 712, 1399, 504, 684, 1388, 491, 671, 1379, 478, 
       658, 1372, 465, 645, 1367, 452, 632, 1364, 439, 619, 1363, 426, 1270, 
       606, 1351, 413, 593, 1341, 400, 580, 1333, 387, 567, 1327, 374, 554, 
       1323, 361, 541, 1321, 336, 529, 709, 716}], 
      Line3DBox[{523, 703, 1405, 510, 690, 1394, 497, 677, 1384, 484, 664, 
       1376, 471, 651, 1370, 458, 638, 1366, 445, 625, 432, 1277, 612, 1357, 
       419, 599, 1346, 406, 586, 1337, 393, 573, 1330, 380, 560, 1325, 367, 
       547, 1322, 348, 1234, 535, 759}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
U/6BeF0N+Ploz9CkrvQqzZh/p+fjOmrZh9Cu3ZYxWZn2y5YoPsT+7GtoeSVm
ogn95PmmqlMpuH5IX53YvKiTrmhl0eC5m61xP7EX5PP3nOlNW6wI2JA5Bs+L
uMF/zl0XE1HoTbnN48txvXFrnWtIpIc9HZerGjX/GZ4v3t7ahsjVFqLJ1uMt
tgXgOlv1BIfzuaWO9NuU5eMEOjYs3mXn4fAb+61E+XsTtT/W4Ppk3Z05h9wO
OtFT1vEfznLGdaH5E3fGfF1qI0rRSzTrKcJ14F3u2feYmf3oc98u3M2fjOsb
mndKHMXVtqJBrdbPtiYrsXjShl+703v1o1Wq8sqVp6qzPPOWjZ11572tKLLm
uKpyphKL10cIfzd+70uLHpx1CybygTXLnh/uPslGxLNpuhabi/Ouo9Ud9KYU
ONA+D0+ofu+G39NVDcfG3ltsJcoNsw94/Avnw1ZHPoV9SLShtwwUOo23w/nz
Qt9ff68NthB5xhh8Tp6C8bLNS6YGGVjQGkc2PtSag/PDzeGXxj3/yxPNyR5m
Kv8O4zMeHxr3aWI3erNbl35Hp2L/9J88tOxDsI5Ie9zqt9tscP6ZeqfE3GHZ
X75uXtzs0YcxHjU90bvfjX9ZK1ziY4we4nXD+4acIWrvquA1A9qzPOvUew1H
z3WeXe0Az2Xxrr3t/JH9PbWVH4D9LC5wjViOeMia/hXxgP1EfYMO4vOsxmA1
4JPF/zZfrkfzEjnNyzOY2GeJWHZeMr+bE4Z9hfllcduXryV+Mo8Xegn8hLX/
T8RPib8dy11yB/yNxUN3Tb+A/DbJ++4Y8FsWr7hktQT5/6rm/jvB/1mcdm4s
Qu+R7jxBOLxHLK50YcRN9D5Walt+g/cR+5uRTSJ6r08UlTDwXrO4wswqB+vX
BXw5W0u3a8V4XQ3qPyNkWnB5ZkX0ny4lo/B7vftsywnrBsk6uHqZOsadXsR6
KPSVrJu/or7g93rvzsu3ayZI9P6279Mwz8I/NWc190ri3KmRnzHPfW0zzHue
kszTw4ezerH4vdtb1E/ESp4Xa1akh+0UlHp1oNvmO3Hj0qx2/JhPhGZ7+0tP
9Njx9lhxy0Lafy30z+K2mlUXpfbcAHtY3P302btS+/eB/Sy+S2XTCOl4qegv
mP+DrVUX2vgRCoEfTrzza0DrtvDwLHXOfk2hXV8UD4QdhV84cWqH0kSJ7kqt
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
M+bdeKIOpkVRMf/1Xf//A7DTw24=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{300.9686702792292, 220.87897128492767`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 2}, {0, 1}, {0., 2.610426867280848*^-9}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.0686517232892456`, -2.3122197223046546`, 2.2274701906190164`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.683322761385463*^9, 3.683352084201723*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.683352384492255*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.683321775342657*^9, 3.683321789234682*^9}}]
},
WindowSize->{822, 932},
WindowMargins->{{Automatic, 7}, {Automatic, 37}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2539, 58, 278, "Input"],
Cell[3100, 80, 387, 10, 30, "Input"],
Cell[CellGroupData[{
Cell[3512, 94, 558, 13, 50, "Input"],
Cell[4073, 109, 119733, 1949, 174, "Output"]
}, Open  ]],
Cell[123821, 2061, 214, 4, 30, "Input"],
Cell[124038, 2067, 483, 12, 87, "Input"],
Cell[124524, 2081, 94, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[124643, 2086, 1343, 39, 69, "Input"],
Cell[125989, 2127, 9290, 192, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135316, 2324, 2396, 68, 88, "Input"],
Cell[137715, 2394, 9578, 197, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147330, 2596, 1382, 40, 69, "Input"],
Cell[148715, 2638, 9295, 192, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158047, 2835, 2237, 67, 88, "Input"],
Cell[160287, 2904, 9516, 196, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169840, 3105, 163, 3, 30, "Input"],
Cell[170006, 3110, 145, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170188, 3118, 207, 4, 30, "Input"],
Cell[170398, 3124, 182, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170617, 3133, 154, 3, 30, "Input"],
Cell[170774, 3138, 94, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170905, 3144, 147, 3, 30, "Input"],
Cell[171055, 3149, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171164, 3155, 164, 3, 30, "Input"],
Cell[171331, 3160, 261, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171629, 3171, 189, 4, 30, "Input"],
Cell[171821, 3177, 271, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172129, 3188, 146, 3, 30, "Input"],
Cell[172278, 3193, 118, 2, 30, "Output"]
}, Open  ]],
Cell[172411, 3198, 835, 22, 50, "Input"],
Cell[CellGroupData[{
Cell[173271, 3224, 99, 1, 30, "Input"],
Cell[173373, 3227, 294, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173704, 3238, 802, 23, 30, "Input"],
Cell[174509, 3263, 13383, 269, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187929, 3537, 244, 6, 30, "Input"],
Cell[188176, 3545, 4854, 93, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193067, 3643, 155, 3, 30, "Input"],
Cell[193225, 3648, 116, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193378, 3655, 160, 3, 30, "Input"],
Cell[193541, 3660, 116, 2, 30, "Output"]
}, Open  ]],
Cell[193672, 3665, 2362, 62, 126, "Input"],
Cell[CellGroupData[{
Cell[196059, 3731, 100, 1, 30, "Input"],
Cell[196162, 3734, 621, 14, 30, "Output"]
}, Open  ]],
Cell[196798, 3751, 702, 16, 50, "Input"],
Cell[197503, 3769, 254, 7, 30, "Input"],
Cell[197760, 3778, 1871, 49, 107, "Input"],
Cell[199634, 3829, 385, 7, 30, "Input"],
Cell[CellGroupData[{
Cell[200044, 3840, 366, 9, 30, "Input"],
Cell[200413, 3851, 3752, 103, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204202, 3959, 169, 3, 30, "Input"],
Cell[204374, 3964, 3824, 103, 226, "Output"]
}, Open  ]],
Cell[208213, 4070, 2182, 59, 145, "Input"],
Cell[CellGroupData[{
Cell[210420, 4133, 680, 17, 30, "Input"],
Cell[211103, 4152, 1778, 36, 346, "Output"],
Cell[212884, 4190, 345, 7, 21, "Message"],
Cell[213232, 4199, 343, 7, 21, "Message"],
Cell[213578, 4208, 345, 7, 21, "Message"],
Cell[213926, 4217, 345, 7, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214308, 4229, 1356, 40, 69, "Input"],
Cell[215667, 4271, 9267, 192, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224971, 4468, 461, 13, 30, "Input"],
Cell[225435, 4483, 1673, 34, 340, "Output"]
}, Open  ]],
Cell[227123, 4520, 231, 5, 30, "Input"],
Cell[CellGroupData[{
Cell[227379, 4529, 2173, 65, 88, "Input"],
Cell[229555, 4596, 9531, 197, 79, "Output"]
}, Open  ]],
Cell[239101, 4796, 315, 9, 30, "Input"],
Cell[239419, 4807, 472, 13, 30, "Input"],
Cell[239894, 4822, 186, 4, 30, "Input"],
Cell[240083, 4828, 3334, 89, 183, "Input"],
Cell[CellGroupData[{
Cell[243442, 4921, 628, 17, 30, "Input"],
Cell[244073, 4940, 1688, 34, 11532, "Output"],
Cell[245764, 4976, 342, 7, 21, "Message"],
Cell[246109, 4985, 1974, 29, 56, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248120, 5019, 556, 15, 30, "Input"],
Cell[248679, 5036, 1706, 34, 404, "Output"]
}, Open  ]],
Cell[250400, 5073, 190, 4, 30, "Input"],
Cell[250593, 5079, 310, 9, 30, "Input"],
Cell[250906, 5090, 467, 13, 30, "Input"],
Cell[251376, 5105, 180, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[251581, 5113, 10127, 269, 392, "Input"],
Cell[261711, 5384, 413, 8, 39, "Message"],
Cell[262127, 5394, 410, 8, 39, "Message"],
Cell[262540, 5404, 410, 8, 39, "Message"],
Cell[262953, 5414, 391, 8, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263381, 5427, 579, 16, 30, "Input"],
Cell[263963, 5445, 1731, 35, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265731, 5485, 335, 9, 30, "Input"],
Cell[266069, 5496, 71256, 1159, 236, "Output"]
}, Open  ]],
Cell[337340, 6658, 68, 1, 30, "Input"],
Cell[337411, 6661, 92, 1, 30, "Input"]
}
]
*)

