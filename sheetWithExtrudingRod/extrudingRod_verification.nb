(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     37032,        863]
NotebookOptionsPosition[     35927,        824]
NotebookOutlinePosition[     36270,        839]
CellTagsIndexPosition[     36227,        836]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"epsilon", " ", "=", " ", "0.01"}], ";", 
  RowBox[{"sheet", " ", "=", " ", 
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Triangle", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], ",", 
       RowBox[{"Triangle", "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}]}], "}"}]}], "]"}]}], 
  ";", 
  RowBox[{"rod", " ", "=", " ", 
   RowBox[{"MeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"0.5", "-", "epsilon"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"0.5", "+", "epsilon"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"0.5", "-", "epsilon"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"0.5", "+", "epsilon"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Triangle", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], ",", 
       RowBox[{"Triangle", "[", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reg", " ", "=", " ", 
   RowBox[{"RegionUnion", "[", 
    RowBox[{"sheet", ",", "rod"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.689190426784278*^9, 3.6891905098586273`*^9}, {
  3.6892128933327427`*^9, 3.689212914836797*^9}, {3.689215570857951*^9, 
  3.689215570937951*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kk", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initFunc", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"kk", "*", 
    RowBox[{"x", "^", "2"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "2"}], ")"}], "^", "2"}], "*", 
    RowBox[{"y", "^", "2"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y", "-", "1"}], ")"}], "^", "2"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.689191146595569*^9, 3.6891911644121265`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Whole", " ", "region"}], ",", " ", 
    RowBox[{"alphaSheet", " ", "for", " ", "all", " ", "diffusion"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"alphaSheet", "  ", "=", " ", "0.02"}], ";", " ", 
    RowBox[{"alphaRod", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diffFunc", "[", "x_", "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"alphaSheet", ",", 
          RowBox[{"x", "<", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"alphaRod", ",", 
          RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsUniformDiffusion", " ", "=", " ", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"t", ",", "x", ",", "y"}], "]"}], ",", "t"}], "]"}], 
          "\[Equal]", 
          RowBox[{"alphaSheet", "*", 
           RowBox[{"Laplacian", "[", 
            RowBox[{
             RowBox[{"u", "[", 
              RowBox[{"t", ",", "x", ",", "y"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"0", ",", "x", ",", "y"}], "]"}], "\[Equal]", 
          RowBox[{"initFunc", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}], ",", "u", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "reg"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsNonUniformDiffusion", " ", "=", " ", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"t", ",", "x", ",", "y"}], "]"}], ",", "t"}], "]"}], 
          "\[Equal]", 
          RowBox[{
           RowBox[{"diffFunc", "[", "x", "]"}], "*", 
           RowBox[{"Laplacian", "[", 
            RowBox[{
             RowBox[{"u", "[", 
              RowBox[{"t", ",", "x", ",", "y"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"0", ",", "x", ",", "y"}], "]"}], "\[Equal]", 
          RowBox[{"initFunc", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}], ",", "u", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "reg"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Manipulate", "[", 
        RowBox[{
         RowBox[{"Plot3D", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"valsUniformDiffusion", "[", 
              RowBox[{"t", ",", "x", ",", "y"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"valsNonUniformDiffusion", "[", 
              RowBox[{"t", ",", "x", ",", "y"}], "]"}], ",", 
             "\[IndentingNewLine]", "0", ",", "3"}], "}"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "reg"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Uniform Diffusion\>\"", ",", 
              "\"\<Higher Diffusion in Rod\>\""}], "}"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "yy"}], "=", "0.5"}], 
     ";", 
     RowBox[{"Manipulate", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"valsUniformDiffusion", "[", 
            RowBox[{"t", ",", "x", ",", "yy"}], "]"}], ",", 
           RowBox[{"valsNonUniformDiffusion", "[", 
            RowBox[{"t", ",", "x", ",", "yy"}], "]"}], ",", "0", ",", "3"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Uniform Diffusion\>\"", ",", 
            "\"\<Higher Diffusion in Rod\>\""}], "}"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6891910047891827`*^9, 3.689191129441036*^9}, {
  3.6891911717153625`*^9, 3.6891912629642887`*^9}, {3.6891913273333263`*^9, 
  3.6891913316494656`*^9}, {3.6891915183879323`*^9, 3.689191563217373*^9}, {
  3.6891921401922417`*^9, 3.6891921530777855`*^9}, {3.689204163210398*^9, 
  3.6892041648504086`*^9}, {3.689212977939953*^9, 3.6892131075783663`*^9}, {
  3.6895722225758743`*^9, 3.689572236542673*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XderivUniformDiffusion", "[", 
    RowBox[{"t_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"valsUniformDiffusion", "[", 
       RowBox[{"tV", ",", "xV", ",", "yV"}], "]"}], ",", "xV"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tV", "\[Rule]", "t"}], ",", 
      RowBox[{"xV", "\[Rule]", "x"}], ",", 
      RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XderivNonUniformDiffusion", "[", 
    RowBox[{"t_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"valsNonUniformDiffusion", "[", 
       RowBox[{"tV", ",", "xV", ",", "yV"}], "]"}], ",", "xV"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tV", "\[Rule]", "t"}], ",", 
      RowBox[{"xV", "\[Rule]", "x"}], ",", 
      RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6892264280788193`*^9, 3.6892265352764683`*^9}, {
  3.6892265694580297`*^9, 3.6892265698666306`*^9}, {3.6892266211628747`*^9, 
  3.6892266316357174`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"YderivUniformDiffusion", "[", 
    RowBox[{"t_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"valsUniformDiffusion", "[", 
       RowBox[{"tV", ",", "xV", ",", "yV"}], "]"}], ",", "yV"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tV", "\[Rule]", "t"}], ",", 
      RowBox[{"xV", "\[Rule]", "x"}], ",", 
      RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"YderivNonUniformDiffusion", "[", 
    RowBox[{"t_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"valsNonUniformDiffusion", "[", 
       RowBox[{"tV", ",", "xV", ",", "yV"}], "]"}], ",", "yV"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tV", "\[Rule]", "t"}], ",", 
      RowBox[{"xV", "\[Rule]", "x"}], ",", 
      RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6892761789493275`*^9, 3.6892761897493587`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Diffusion", " ", "in", " ", "middle", " ", "of", " ", "system"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tVV", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"XderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "x", ",", "0.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6894880770561867`*^9, 3.6894880801688337`*^9}, {
  3.6894881407371607`*^9, 3.689488201200218*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
TLGnO3mZGxv/vy/rY+mhXZX/A4jSShM=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {-10.206249749072091`, 3.952265144024758}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6894881557703896`*^9, 3.689488191596089*^9, 
  3.6895726301211843`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Diffusion", " ", "at", " ", 
    RowBox[{"borders", ".", " ", "should"}], " ", "be", " ", "near", " ", 
    "zero"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"YderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "x", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1", ",", ".1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"YderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "x", ",", "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1", ",", ".1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"YderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "x", ",", 
       RowBox[{"0.5", "-", "epsilon"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "2", ",", ".1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"YderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "x", ",", 
       RowBox[{"0.5", "+", "epsilon"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "2", ",", ".1"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.689572514376564*^9, 3.6895726223317385`*^9}, {
  3.689572652667474*^9, 3.689572717851202*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.01697859183939765`", ",", 
   RowBox[{"-", "0.019674999100932`"}], ",", "0.025968659694389176`", ",", 
   "0.03831300128149979`", ",", "0.04233030527638182`", ",", 
   RowBox[{"-", "0.006926799713231568`"}], ",", 
   RowBox[{"-", "0.08552654145335847`"}], ",", 
   RowBox[{"-", "0.01566368931143764`"}], ",", 
   RowBox[{"-", "0.014492898838174364`"}], ",", 
   RowBox[{"-", "0.0027923682866514005`"}], ",", 
   RowBox[{"-", "0.15931788201345753`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689572634273422*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.009227943812099015`", ",", "0.019588315315012195`", ",", 
   "0.025717531371372532`", ",", 
   RowBox[{"-", "0.004225569864754492`"}], ",", 
   RowBox[{"-", "0.00929844307169067`"}], ",", "0.11505594399059987`", ",", 
   "0.07104294362880495`", ",", "0.01935862250914021`", ",", 
   "0.024240964906421095`", ",", "0.012662621506669691`", ",", 
   "0.1614028792208131`"}], "}"}]], "Output",
 CellChangeTimes->{3.6895726342874227`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "11.045881421036574`"}], ",", 
   RowBox[{"-", "7.703435824169096`*^-6"}], ",", 
   RowBox[{"-", "0.000020226789779371685`"}], ",", 
   RowBox[{"-", "0.000032403924556092616`"}], ",", 
   RowBox[{"-", "0.00005737667448784089`"}], ",", 
   RowBox[{"-", "0.00003478159487713128`"}], ",", 
   RowBox[{"-", "8.178904920441808`*^-6"}], ",", 
   RowBox[{"-", "0.000014908158743765148`"}], ",", 
   RowBox[{"-", "0.000015838361234727962`"}], ",", 
   RowBox[{"-", "0.000015960734260715878`"}], ",", 
   RowBox[{"-", "6.811080197621777`*^-7"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689572634309424*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.4030830790537152`", ",", 
   RowBox[{"-", "0.00004810438106233022`"}], ",", 
   RowBox[{"-", "0.000030189978531325398`"}], ",", 
   RowBox[{"-", "0.000021341121271234365`"}], ",", 
   RowBox[{"-", "9.473127863657402`*^-6"}], ",", 
   RowBox[{"-", "0.00003526553264237009`"}], ",", 
   RowBox[{"-", "0.00004853964654785131`"}], ",", 
   RowBox[{"-", "0.000023332716602908245`"}], ",", 
   RowBox[{"-", "0.000011144635100208649`"}], ",", 
   RowBox[{"-", "2.3458917326025055`*^-6"}], ",", 
   RowBox[{"-", "2.45901634798429`*^-6"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6895726343114243`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"XderivNonUniformDiffusion", "[", 
    RowBox[{"tVV", ",", "0", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1", ",", ".1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"XderivNonUniformDiffusion", "[", 
    RowBox[{"tVV", ",", "1", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     RowBox[{"0.5", "-", "epsilon"}], ",", ".1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"XderivNonUniformDiffusion", "[", 
    RowBox[{"tVV", ",", "1", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     RowBox[{"0.5", "+", "epsilon"}], ",", ".1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"XderivNonUniformDiffusion", "[", 
    RowBox[{"tVV", ",", "2", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"0.5", "-", "epsilon"}], ",", 
     RowBox[{"0.5", "+", "epsilon"}], ",", ".02"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6895727362992573`*^9, 3.68957277831466*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.01921317213226903`"}], ",", "0.016524390806832125`", ",", 
   "0.008556729132169504`", ",", "0.013502103397415532`", ",", 
   RowBox[{"-", "0.010167706416189574`"}], ",", "0.019807463874472298`", ",", 
   RowBox[{"-", "0.0044412259536028564`"}], ",", 
   RowBox[{"-", "0.01065026949874115`"}], ",", "0.011693220989175523`", ",", 
   "0.011840793715253095`", ",", 
   RowBox[{"-", "0.004673716697109365`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6895727711052485`*^9, 3.6895727787236843`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.07584442555367327`", ",", 
   RowBox[{"-", "0.06973254717309608`"}], ",", 
   RowBox[{"-", "0.06595244670572442`"}], ",", "0.02814865312180856`", ",", 
   RowBox[{"-", "0.13340023034937273`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6895727711052485`*^9, 3.689572778727684*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.07584442555367327`", ",", 
   RowBox[{"-", "0.06973254717309608`"}], ",", 
   RowBox[{"-", "0.06595244670572442`"}], ",", "0.02814865312180856`", ",", 
   RowBox[{"-", "0.13340023034937273`"}], ",", 
   RowBox[{"-", "10.291165485800116`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6895727711052485`*^9, 3.689572778741685*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "4.31458903449311`*^-6"}], ",", 
   RowBox[{"-", "7.267606099502222`*^-6"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6895727711052485`*^9, 3.6895727787426853`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"valsNonUniformDiffusion", "[", 
      RowBox[{"curT", ",", "x", ",", "y"}], "]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "reg"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"curT", ",", "0.1", ",", "9.1", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.689488611050819*^9, 3.6894887076181884`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9222203690114386`", ",", "0.9222203690114686`", ",", 
   "0.9222203690114937`", ",", "0.9222203690115214`", ",", 
   "0.9222203690115279`", ",", "0.9222203690115445`", ",", 
   "0.9222203690115669`", ",", "0.9222203690115832`", ",", 
   "0.9222203690115977`", ",", "0.922220369011612`"}], "}"}]], "Output",
 CellChangeTimes->{3.6894887634673862`*^9, 3.6895728424923315`*^9}]
}, Open  ]]
},
WindowSize->{984, 821},
WindowMargins->{{100, Automatic}, {54, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1926, 57, 107, "Input"],
Cell[2487, 79, 542, 16, 50, "Input"],
Cell[3032, 97, 5271, 140, 335, "Input"],
Cell[8306, 239, 1174, 32, 50, "Input"],
Cell[9483, 273, 1068, 30, 50, "Input"],
Cell[CellGroupData[{
Cell[10576, 307, 596, 15, 69, "Input"],
Cell[11175, 324, 17304, 297, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28516, 626, 1425, 38, 107, "Input"],
Cell[29944, 666, 554, 11, 50, "Output"],
Cell[30501, 679, 478, 10, 30, "Output"],
Cell[30982, 691, 654, 14, 55, "Output"],
Cell[31639, 707, 636, 13, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32312, 725, 1182, 32, 88, "Input"],
Cell[33497, 759, 555, 10, 50, "Output"],
Cell[34055, 771, 323, 6, 30, "Output"],
Cell[34381, 779, 370, 7, 30, "Output"],
Cell[34754, 788, 222, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35013, 798, 476, 13, 30, "Input"],
Cell[35492, 813, 419, 8, 63, "Output"]
}, Open  ]]
}
]
*)

