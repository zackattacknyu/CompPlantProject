(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    114123,       2336]
NotebookOptionsPosition[    111785,       2261]
NotebookOutlinePosition[    112127,       2276]
CellTagsIndexPosition[    112084,       2273]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "is", " ", "a", " ", "sheet", " ", "with", " ", "a", " ", 
     "rod", " ", "extruding", " ", "from", " ", "the", " ", "middle", " ", 
     "of", " ", 
     RowBox[{"it", ".", " ", "\[IndentingNewLine]", "I"}], " ", "run", " ", 
     "two", " ", 
     RowBox[{"versions", ":", " ", 
      RowBox[{
      "rod", " ", "has", " ", "same", " ", "diffusion", " ", "coefficient", 
       " ", "as", " ", "sheet"}]}]}], ",", " ", 
    RowBox[{
    "rod", " ", "has", " ", "different", " ", "diffusion", " ", "coefficient",
      " ", "from", " ", "sheet"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"epsilon", " ", "=", " ", "0.05"}], ";", 
    RowBox[{"sheet", " ", "=", " ", 
     RowBox[{"MeshRegion", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Triangle", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], ",", 
         RowBox[{"Triangle", "[", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}]}], "}"}]}], 
      "]"}]}], ";", 
    RowBox[{"rod", " ", "=", " ", 
     RowBox[{"MeshRegion", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"0.5", "-", "epsilon"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"0.5", "+", "epsilon"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"0.5", "-", "epsilon"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"0.5", "+", "epsilon"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Triangle", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], ",", 
         RowBox[{"Triangle", "[", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"reg", " ", "=", " ", 
     RowBox[{"RegionUnion", "[", 
      RowBox[{"sheet", ",", "rod"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.689190426784278*^9, 3.6891905098586273`*^9}, {
  3.6892128933327427`*^9, 3.689212914836797*^9}, {3.689215570857951*^9, 
  3.689215570937951*^9}, {3.6895745514184184`*^9, 3.689574552302223*^9}, {
  3.6895755811881046`*^9, 3.6895756183146615`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Initial", " ", "Temperature", " ", "Distribution"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"kk", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"initFunc", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{"kk", "*", 
      RowBox[{"x", "^", "2"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "2"}], ")"}], "^", "2"}], "*", 
      RowBox[{"y", "^", "2"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y", "-", "1"}], ")"}], "^", "2"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.689191146595569*^9, 3.6891911644121265`*^9}, {
  3.6895756695196676`*^9, 3.6895756792967167`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Specify", " ", "diffusion", " ", "coefficients"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"alphaSheet", "  ", "=", " ", "0.02"}], ";", " ", 
    RowBox[{"alphaRod", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diffFunc", "[", "x_", "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"alphaSheet", ",", 
          RowBox[{"x", "<", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"alphaRod", ",", 
          RowBox[{"x", ">", "1"}]}], "}"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Computes", " ", "the", " ", "system", " ", "if", " ", "entire", " ", 
     "region", " ", "has", " ", "same", " ", "diffusion", " ", 
     "coefficient"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsUniformDiffusion", " ", "=", " ", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"t", ",", "x", ",", "y"}], "]"}], ",", "t"}], "]"}], 
          "\[Equal]", 
          RowBox[{"alphaSheet", "*", 
           RowBox[{"Laplacian", "[", 
            RowBox[{
             RowBox[{"u", "[", 
              RowBox[{"t", ",", "x", ",", "y"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"0", ",", "x", ",", "y"}], "]"}], "\[Equal]", 
          RowBox[{"initFunc", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}], ",", "u", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "reg"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valsNonUniformDiffusion", " ", "=", " ", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"t", ",", "x", ",", "y"}], "]"}], ",", "t"}], "]"}], 
          "\[Equal]", 
          RowBox[{
           RowBox[{"diffFunc", "[", "x", "]"}], "*", 
           RowBox[{"Laplacian", "[", 
            RowBox[{
             RowBox[{"u", "[", 
              RowBox[{"t", ",", "x", ",", "y"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"0", ",", "x", ",", "y"}], "]"}], "\[Equal]", 
          RowBox[{"initFunc", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}], ",", "u", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "reg"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6891910047891827`*^9, 3.689191129441036*^9}, {
  3.6891911717153625`*^9, 3.6891912629642887`*^9}, {3.6891913273333263`*^9, 
  3.6891913316494656`*^9}, {3.6891915183879323`*^9, 3.689191563217373*^9}, {
  3.6891921401922417`*^9, 3.6891921530777855`*^9}, {3.689204163210398*^9, 
  3.6892041648504086`*^9}, {3.689212977939953*^9, 3.6892131075783663`*^9}, {
  3.6895722225758743`*^9, 3.689572236542673*^9}, {3.6895744775801086`*^9, 
  3.6895744976943893`*^9}, {3.689575684888941*^9, 3.6895757276855364`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Shows", " ", "the", " ", "results"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"valsUniformDiffusion", "[", 
         RowBox[{"t", ",", "x", ",", "y"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"valsNonUniformDiffusion", "[", 
         RowBox[{"t", ",", "x", ",", "y"}], "]"}], ",", "\[IndentingNewLine]",
         "0", ",", "3"}], "}"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "reg"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Uniform Diffusion\>\"", ",", "\"\<Higher Diffusion in Rod\>\""}],
         "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6895757324739604`*^9, 3.68957573676458*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10}}, Typeset`size$$ = {530., {144., 149.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$18952$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$18952$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[{
         $CellContext`valsUniformDiffusion[$CellContext`t$$, $CellContext`x, \
$CellContext`y], 
         $CellContext`valsNonUniformDiffusion[$CellContext`t$$, \
$CellContext`x, $CellContext`y], 0, 3}, 
        Element[{$CellContext`x, $CellContext`y}, $CellContext`reg], 
        PlotLegends -> {"Uniform Diffusion", "Higher Diffusion in Rod"}], 
      "Specifications" :> {{$CellContext`t$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{581., {193., 200.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.689574506676242*^9, 3.6895745976400375`*^9, 
  3.689575368736971*^9, 3.6906069768423524`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"yy", "=", "0.5"}], ";", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"valsUniformDiffusion", "[", 
         RowBox[{"t", ",", "x", ",", "yy"}], "]"}], ",", 
        RowBox[{"valsNonUniformDiffusion", "[", 
         RowBox[{"t", ",", "x", ",", "yy"}], "]"}], ",", "0", ",", "3"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Uniform Diffusion\>\"", ",", "\"\<Higher Diffusion in Rod\>\""}],
         "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 10}}, Typeset`size$$ = {538., {108., 114.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$19102$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$19102$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`valsUniformDiffusion[$CellContext`t$$, $CellContext`x, \
$CellContext`yy], 
         $CellContext`valsNonUniformDiffusion[$CellContext`t$$, \
$CellContext`x, $CellContext`yy], 0, 3}, {$CellContext`x, 0, 2}, 
        PlotLegends -> {"Uniform Diffusion", "Higher Diffusion in Rod"}], 
      "Specifications" :> {{$CellContext`t$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{589., {157., 164.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6895745115444636`*^9, 3.689574597842239*^9, 
  3.689575368922572*^9, 3.6906069770653653`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Derivatives", " ", "with", " ", "respect", " ", "to", " ", "x", " ", "and",
    " ", "y", " ", "so", " ", "we", " ", "can", " ", "see", " ", "the", " ", 
   "fluxes"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6895757493554316`*^9, 3.68957575966008*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XderivUniformDiffusion", "[", 
    RowBox[{"t_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"valsUniformDiffusion", "[", 
       RowBox[{"tV", ",", "xV", ",", "yV"}], "]"}], ",", "xV"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tV", "\[Rule]", "t"}], ",", 
      RowBox[{"xV", "\[Rule]", "x"}], ",", 
      RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XderivNonUniformDiffusion", "[", 
    RowBox[{"t_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"valsNonUniformDiffusion", "[", 
       RowBox[{"tV", ",", "xV", ",", "yV"}], "]"}], ",", "xV"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tV", "\[Rule]", "t"}], ",", 
      RowBox[{"xV", "\[Rule]", "x"}], ",", 
      RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6892264280788193`*^9, 3.6892265352764683`*^9}, {
  3.6892265694580297`*^9, 3.6892265698666306`*^9}, {3.6892266211628747`*^9, 
  3.6892266316357174`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"YderivUniformDiffusion", "[", 
    RowBox[{"t_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"valsUniformDiffusion", "[", 
       RowBox[{"tV", ",", "xV", ",", "yV"}], "]"}], ",", "yV"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tV", "\[Rule]", "t"}], ",", 
      RowBox[{"xV", "\[Rule]", "x"}], ",", 
      RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"YderivNonUniformDiffusion", "[", 
    RowBox[{"t_", ",", "x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"valsNonUniformDiffusion", "[", 
       RowBox[{"tV", ",", "xV", ",", "yV"}], "]"}], ",", "yV"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tV", "\[Rule]", "t"}], ",", 
      RowBox[{"xV", "\[Rule]", "x"}], ",", 
      RowBox[{"yV", "\[Rule]", "y"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6892761789493275`*^9, 3.6892761897493587`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "X", " ", "Diffusion", " ", "in", " ", "middle", " ", "of", " ", 
     "system"}], ",", " ", 
    RowBox[{"y", "=", "0.5"}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "nonuniform", " ", "diffusion", " ", "at", " ", "t"}], "=", 
     "0.4"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tVV", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"XderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "x", ",", "0.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6894880770561867`*^9, 3.6894880801688337`*^9}, {
  3.6894881407371607`*^9, 3.689488201200218*^9}, {3.6895757660027084`*^9, 
  3.6895758252727995`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
e4epVmcbfNs7WEDbRuijsgeLw22wukj2XyFRv9KT5jwO87bDRPPN9jSi3gVh
1dYWmXaIFdMUfCRNnKcB33QhPeL/8+/N1Tlk5KXxr+yyYTvYs2ts1rLJKN1d
rodm2g4ld3nPyoyQ0erFNLk3NoT9C3t3nh4ymlnW4rvVtR0O/5aNrKsjI01b
1Zhwt3b4Zmr4tpRGRs4x7t9nbreDEuNmUn4FGdVtFBv+69sOk6M1eYkFhP4+
bWvbSEJPIaTjbiYZ9fn4XvsV0w6iibmDN9KJ7xVXBiontIP7jsEJ5xQysibJ
vX+c2A6t+bILpxKJ99zSKX84lfi+saGQ5Xsy+vsyjWH5rR3eOkvH9Dwlo9mm
2fHsnHYwIFf9sg4ko21rDSQU8tthOCugtfAhGV1wfrbR5287PLPTW9p5n+hf
kpsP9Ja0wy7BeaWPnmREZ208bfKvHZpTspCMO9Gv3MkPk2a2w4Z5VV+uCxkp
hQ3NfB5th1+vKYLfiX4l/6z354yJdjioourqb0pG9juWn8idJvKXjOqtif4m
mr43p4KvA+rzbnyY3EdGsopPbo3JdMBoa+2h7apktCxJdUILOkBRJdI/dVEC
CRacH8ahHXAveY3I+2QJNDTV1lqv2Qn787aJPxOUQNkuoX+Md3XCV3DoYS2R
0IMG3Y9YpxM2/H2KLWZJyMRwNFDrQCe8NvgVlT5JQjLfY1w/G3QCuWzIXXKM
hDo2mFmuNu0EX7NV5teJfjbl5bzWC8tO4NKMVGldJHRbKEVWxKYTljOkXtK9
JIj57dT83dOdUDdPEx1yk0ASvWLt7LOd8HJt2L2lyxKIYf3zr7NLJ9gYHGEv
Py+Bru6UC7Jw64TG0ErGPhsJ9HqSLrcuoBPalMs+PdWRQOed/BciQzoh3jBQ
PoHohzXrdnZIvOiEs1eMQr9vkUBF38ITp2I6oTur6Fa7kgRiux3VLv/WCYNG
fw9tF5BAeZ288uhHJyS7+v4wWCAh/6NfFzPzO+Hq8wNbTnFJSGG7ZFFsaSew
mvCKR/0kZMSutHJrI+K7mtdVX0FCy8/e293X3QnfX9yxGSwkoVaausLpwU7w
zNlbvphPQp9R8xJtrBP2tMzoLs8hIY/0oK5DnE6Y4/2RsfErCcEaneKfs52Q
+y+9/eh+EhILG0zaytMFshrcORIx39QtRT19L9gFt0J0VhYT80/ctcNucuJd
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
Uzmx9flr8f8A+7YbfA==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {-7.405561016520898, 3.968244906928772}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6894881557703896`*^9, 3.689488191596089*^9, 
  3.6895726301211843`*^9, 3.689574598650242*^9, 3.6895753696847754`*^9, 
  3.690606977885412*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "X", " ", "Diffusion", " ", "in", " ", "middle", " ", "of", " ", 
    "system"}], ",", " ", 
   RowBox[{"y", "=", "0.5"}], ",", " ", 
   RowBox[{
    RowBox[{
    "for", " ", "uniform", " ", "diffusion", " ", "as", " ", "comparison", 
     " ", "at", " ", "t"}], "=", "0.4"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6895758019182997`*^9, 3.6895758307762213`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"XderivUniformDiffusion", "[", 
    RowBox[{"tVV", ",", "x", ",", "0.5"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.689575361222741*^9, 3.689575361577343*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
r5VYWF7G+fWiXeKd7tH/B3YDnu4=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {-4.440706985654854, 3.968315109899807}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.689575370426977*^9, 3.69060697872746*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "X", " ", "Heat", " ", "Flux", " ", "in", " ", "middle", " ", "of", " ", 
     "system"}], ",", " ", 
    RowBox[{"y", "=", "0.5"}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "nonuniform", " ", "diffusion", " ", "at", " ", "t"}], "=", 
     "0.4"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"XderivNonUniformDiffusion", "[", 
       RowBox[{"tVV", ",", "x", ",", "0.5"}], "]"}]}], "*", 
     RowBox[{"diffFunc", "[", "x", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689575408781539*^9, 3.6895754359458513`*^9}, {
  3.689575857506345*^9, 3.689575861115956*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
rfyzlfA/DjCj3Q==
       "]], LineBox[CompressedData["
1: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
/wOYIUvD
       "]]}, {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {-0.07936489813857545, 0.3258127265479672}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6895754371146545`*^9, 3.6906069794885035`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "X", " ", "Heat", " ", "Flux", " ", "in", " ", "middle", " ", "of", " ", 
     "system"}], ",", " ", 
    RowBox[{"y", "=", "0.5"}], ",", " ", 
    RowBox[{
     RowBox[{
     "for", " ", "uniform", " ", "diffusion", " ", "as", " ", "comparison", 
      " ", "at", " ", "t"}], "=", "0.4"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"XderivUniformDiffusion", "[", 
       RowBox[{"tVV", ",", "x", ",", "0.5"}], "]"}]}], "*", "alphaSheet"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689575455415931*^9, 3.689575466940174*^9}, {
  3.6895758691973953`*^9, 3.6895758725322104`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
1isSlcxH/ZdYmPbDJ4D6/S+GcNZ8dPPTUnRuxgRUGuG+WwzlIWWjonSalgm4
2Bt4ZudZHkqQyKp51DkBc/VqA9KOeWiHOmm6p28CPpfvB9+/l4dKcGGSxZMT
sBn/ZLJOPQ+xB/nf4J2bgMzQM9F7innI1dLL2X95Aky9/qnISOYhqSOPiOa7
E1ByzzLhI2seCpm06aylmgRbfV7txoN5aKbCYkuWbhLYVDq3KLZzkUaMMU/i
4UmolonMlJvLRemOupfpWSfhiZCOkd1QLqK6qn73Ceck+IJ2k7FPLrrHe8V7
iG8SmgyN5iXdc1HFyrlULaFJ4LazYDxgn4t46yV/kkQnsfnKVrzvTi56niIy
KSg1CQXhjzXwN3JR5zO+Q+9kJ4Gc9swmSCUXRYoe1rl/ZRIiG4NTzovmokN+
s23MNyeh4ngRd/RKDlpXyh2z85oEjqpNet2gHOQmU01g/zEFn+3xRjIemWiw
oDq4WXAGnh8hMVgLp6GmOZpZmVMzoHF3oNeAIw1VSlzVjpKYAc6Cg3nK9Gko
Kecno4nCDJRqmWjzL6ai8OkDjiWXZiDokxcv02gq8hZVb+RSmQGT6czZnfZU
5GLrJ/ni2gyInG8q/1ebiqwyfr3r056Bdb/NkJ6yVGQwfnD+ssEM1LQLmP8u
SEWqwtd0E01mwJ+lT4dDPBXJ3fcvoDCfAcPdLdK0QCoSTqlhsrKaAcEpDoFy
jlR0bJj20Q/bGVhoORcYypSKDgho/BV2nIGyb4bL9w6koon42rBJ9xkweh9W
fWAlBXX00S1qvJqBE575kl3TKaiG57pezpsZmLerj8kZSsH06u8jju9mIOAK
7cMbf1KQfXRdxHIKZm/a8/DH7BQ0F9LwfrdxBoSUnIwl7qWggXrGVYtWzL94
CNozTkF/6HVuVnbNwDe2HNFmnRRUENB47O3oDJj+G99+cjEFPfb5E023NQMh
MeaJiD0Frb5o+sAq/A9WZrWnDBqTEdm+7bPY839Q9fH082cXktFNefMIKa9/
QB9vGTh9NhnlUU74yfr8A8OkD7G3xJKRReyG8+XQfzCaQf1FkTMZVf3k1tBP
+QcHCL0rW2tJyF/ActWj7h9o/Al2fF6chFg75rRruWfhL9XsvReiScgh+alK
I/8scBw88fgffxKqdthXaBGeBctDpl5mHEnoKfVRoT6pWVhiro6/eDAJdZ+R
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

      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {-0.07936630219799615, 0.08881413971309708}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6895754686327796`*^9, 3.6906069802405467`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Diffusion", " ", "at", " ", 
    RowBox[{"borders", ".", " ", "should"}], " ", "be", " ", "near", " ", 
    "zero"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"YderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "x", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1", ",", ".1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"YderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "x", ",", "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1", ",", ".1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"YderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "x", ",", 
       RowBox[{"0.5", "-", "epsilon"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "2", ",", ".1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"YderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "x", ",", 
       RowBox[{"0.5", "+", "epsilon"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "2", ",", ".1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"XderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "0", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1", ",", ".1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"XderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "1", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"0.5", "-", "epsilon"}], ",", ".1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"XderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "1", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"0.5", "+", "epsilon"}], ",", ".1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"XderivNonUniformDiffusion", "[", 
      RowBox[{"tVV", ",", "2", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"0.5", "-", "epsilon"}], ",", 
       RowBox[{"0.5", "+", "epsilon"}], ",", ".02"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.689572514376564*^9, 3.6895726223317385`*^9}, {
  3.689572652667474*^9, 3.689572717851202*^9}, {3.68957616294812*^9, 
  3.6895761836029005`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.007281677616529203`"}], ",", 
   RowBox[{"-", "0.01673399975187919`"}], ",", "0.013887023178675392`", ",", 
   RowBox[{"-", "0.004513580759308539`"}], ",", "0.027078543694220497`", ",", 
   RowBox[{"-", "0.004707452239472332`"}], ",", "0.02394458879529531`", ",", 
   RowBox[{"-", "0.06352515782142165`"}], ",", 
   RowBox[{"-", "0.019848274690982687`"}], ",", 
   RowBox[{"-", "0.03452556771395364`"}], ",", 
   RowBox[{"-", "0.14611918005050484`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689572634273422*^9, 3.689574598743842*^9, 
  3.6895753704581766`*^9, 3.6895762050271263`*^9, 3.6906069802645483`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.019127825677760155`"}], ",", "0.01757084989243535`", ",", 
   "0.019343520222477928`", ",", "0.06647005731966851`", ",", 
   RowBox[{"-", "0.03293054731408718`"}], ",", "0.10223698646901536`", ",", 
   "0.09557927120745807`", ",", "0.005986198904554638`", ",", 
   "0.01987035133923743`", ",", "0.005290094763898086`", ",", 
   "0.04743958143316637`"}], "}"}]], "Output",
 CellChangeTimes->{3.689572634273422*^9, 3.689574598743842*^9, 
  3.6895753704581766`*^9, 3.6895762050271263`*^9, 3.690606980276549*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.24551884145776076`"}], ",", "0.013900799826609578`", ",", 
   RowBox[{"-", "0.0004242643719010171`"}], ",", "0.00033448056572069496`", 
   ",", "0.0011473610109646896`", ",", "0.000019552407749756653`", ",", 
   RowBox[{"-", "0.0010746085178198`"}], ",", 
   RowBox[{"-", "0.0002679757544171977`"}], ",", "0.00023582026867074936`", 
   ",", "0.0002504424814617328`", ",", "0.00013566503000674853`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.689572634273422*^9, 3.689574598743842*^9, 
  3.6895753704581766`*^9, 3.6895762050271263`*^9, 3.6906069802885494`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.24620533421443724`", ",", 
   RowBox[{"-", "0.013996147826728193`"}], ",", "0.0004255617606503388`", ",", 
   RowBox[{"-", "0.0003342728299742235`"}], ",", 
   RowBox[{"-", "0.001147348056676381`"}], ",", 
   RowBox[{"-", "0.000019551376524873376`"}], ",", "0.0010746083745118568`", 
   ",", "0.00026797575646924504`", ",", 
   RowBox[{"-", "0.00023582026838653232`"}], ",", 
   RowBox[{"-", "0.0002504424814048894`"}], ",", 
   RowBox[{"-", "0.0001356650300067487`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689572634273422*^9, 3.689574598743842*^9, 
  3.6895753704581766`*^9, 3.6895762050271263`*^9, 3.6906069802985497`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.003863134985572919`", ",", "0.01721520160699326`", ",", 
   RowBox[{"-", "0.019194918028532126`"}], ",", 
   RowBox[{"-", "0.00543748811960687`"}], ",", 
   RowBox[{"-", "0.00409225648188527`"}], ",", "0.019165592110455987`", ",", 
   RowBox[{"-", "0.001714353550112735`"}], ",", 
   RowBox[{"-", "0.021902749915349642`"}], ",", 
   RowBox[{"-", "0.032797957559034974`"}], ",", "0.016408756114807577`", ",", 
   RowBox[{"-", "0.02302183528301338`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689572634273422*^9, 3.689574598743842*^9, 
  3.6895753704581766`*^9, 3.6895762050271263`*^9, 3.6906069803105507`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.01980190435283448`"}], ",", 
   RowBox[{"-", "0.0687467214162922`"}], ",", 
   RowBox[{"-", "0.06320147383704865`"}], ",", 
   RowBox[{"-", "0.0990737845013287`"}], ",", 
   RowBox[{"-", "2.1316760489253497`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689572634273422*^9, 3.689574598743842*^9, 
  3.6895753704581766`*^9, 3.6895762050271263`*^9, 3.690606980313551*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.01980190435283448`"}], ",", 
   RowBox[{"-", "0.0687467214162922`"}], ",", 
   RowBox[{"-", "0.06320147383704865`"}], ",", 
   RowBox[{"-", "0.0990737845013287`"}], ",", 
   RowBox[{"-", "2.1316760489253497`"}], ",", 
   RowBox[{"-", "7.429164245632433`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689572634273422*^9, 3.689574598743842*^9, 
  3.6895753704581766`*^9, 3.6895762050271263`*^9, 3.690606980323551*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.000135346204019976`"}], ",", 
   RowBox[{"-", "0.00013534620401088604`"}], ",", 
   RowBox[{"-", "0.0001353462040017961`"}], ",", 
   RowBox[{"-", "0.00013534620399269226`"}], ",", 
   RowBox[{"-", "0.0001353462039836023`"}], ",", 
   RowBox[{"-", "0.00013534620397451236`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689572634273422*^9, 3.689574598743842*^9, 
  3.6895753704581766`*^9, 3.6895762050271263`*^9, 3.6906069803255515`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Diffusion", " ", "at", " ", "borders", " ", "for", " ", "uniform", " ", 
   "system", " ", "as", " ", 
   RowBox[{"comparison", ".", " ", "should"}], " ", "be", " ", "near", " ", 
   "zero"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6895762556656213`*^9, 3.6895762599534655`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"YderivUniformDiffusion", "[", 
    RowBox[{"tVV", ",", "x", ",", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1", ",", ".1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"YderivUniformDiffusion", "[", 
    RowBox[{"tVV", ",", "x", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1", ",", ".1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"YderivUniformDiffusion", "[", 
    RowBox[{"tVV", ",", "x", ",", 
     RowBox[{"0.5", "-", "epsilon"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "2", ",", ".1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"YderivUniformDiffusion", "[", 
    RowBox[{"tVV", ",", "x", ",", 
     RowBox[{"0.5", "+", "epsilon"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "2", ",", ".1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"XderivUniformDiffusion", "[", 
    RowBox[{"tVV", ",", "0", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1", ",", ".1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"XderivUniformDiffusion", "[", 
    RowBox[{"tVV", ",", "1", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     RowBox[{"0.5", "-", "epsilon"}], ",", ".1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"XderivUniformDiffusion", "[", 
    RowBox[{"tVV", ",", "1", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     RowBox[{"0.5", "+", "epsilon"}], ",", ".1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"XderivUniformDiffusion", "[", 
    RowBox[{"tVV", ",", "2", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"0.5", "-", "epsilon"}], ",", 
     RowBox[{"0.5", "+", "epsilon"}], ",", ".02"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6895727362992573`*^9, 3.68957277831466*^9}, {
  3.689574683927208*^9, 3.689574687761026*^9}, {3.689576190900318*^9, 
  3.689576201394918*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.007268716690376431`"}], ",", 
   RowBox[{"-", "0.016750641660421797`"}], ",", "0.01387214805604503`", ",", 
   RowBox[{"-", "0.004556591993239056`"}], ",", "0.027064221093533528`", ",", 
   RowBox[{"-", "0.00481745533614486`"}], ",", "0.02388119865463019`", ",", 
   RowBox[{"-", "0.0637145825499345`"}], ",", 
   RowBox[{"-", "0.019866794201452292`"}], ",", 
   RowBox[{"-", "0.03416906016677371`"}], ",", 
   RowBox[{"-", "0.1439609793948513`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6895727711052485`*^9, 3.6895727787236843`*^9}, 
   3.689574598792642*^9, 3.6895746895896344`*^9, 3.689575370489377*^9, 
   3.689576207942892*^9, 3.6906069803635535`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.01915531842966341`"}], ",", "0.017589903486133422`", ",", 
   "0.01937016064611586`", ",", "0.06656781141375263`", ",", 
   RowBox[{"-", "0.03283568984121313`"}], ",", "0.10242324684332615`", ",", 
   "0.09580655214852113`", ",", "0.006117444745548081`", ",", 
   "0.019854623387069413`", ",", "0.005056331709716085`", ",", 
   "0.04711665667501309`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6895727711052485`*^9, 3.6895727787236843`*^9}, 
   3.689574598792642*^9, 3.6895746895896344`*^9, 3.689575370489377*^9, 
   3.689576207942892*^9, 3.690606980365554*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.230478017132744`", ",", 
   RowBox[{"-", "0.20189072428937693`"}], ",", 
   RowBox[{"-", "0.008124940539653333`"}], ",", "0.00712311838155413`", ",", 
   "0.01700136905457161`", ",", 
   RowBox[{"-", "0.001300372938155193`"}], ",", 
   RowBox[{"-", "0.02198269438252117`"}], ",", 
   RowBox[{"-", "0.008793316444862975`"}], ",", "0.008994342983443433`", ",", 
   "0.0137245461494999`", ",", "0.007815505501687168`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6895727711052485`*^9, 3.6895727787236843`*^9}, 
   3.689574598792642*^9, 3.6895746895896344`*^9, 3.689575370489377*^9, 
   3.689576207942892*^9, 3.6906069803775544`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.23079782680324`"}], ",", "0.20193121092814084`", ",", 
   "0.008124326321660588`", ",", 
   RowBox[{"-", "0.007123252341716561`"}], ",", 
   RowBox[{"-", "0.017001385048709537`"}], ",", "0.0013003706848877528`", ",",
    "0.021982694664633637`", ",", "0.00879331644328983`", ",", 
   RowBox[{"-", "0.00899434298268173`"}], ",", 
   RowBox[{"-", "0.013724546149259557`"}], ",", 
   RowBox[{"-", "0.007815505501680071`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6895727711052485`*^9, 3.6895727787236843`*^9}, 
   3.689574598792642*^9, 3.6895746895896344`*^9, 3.689575370489377*^9, 
   3.689576207942892*^9, 3.690606980389555*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.003855875367529904`", ",", "0.017225660110593816`", ",", 
   RowBox[{"-", "0.019172093617429442`"}], ",", 
   RowBox[{"-", "0.005405360481878452`"}], ",", 
   RowBox[{"-", "0.004058716868146406`"}], ",", "0.019188258451399598`", ",", 
   RowBox[{"-", "0.0016758230278626218`"}], ",", 
   RowBox[{"-", "0.021893782516602345`"}], ",", 
   RowBox[{"-", "0.03278360846303449`"}], ",", "0.016419566884775118`", ",", 
   RowBox[{"-", "0.023043257271847084`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6895727711052485`*^9, 3.6895727787236843`*^9}, 
   3.689574598792642*^9, 3.6895746895896344`*^9, 3.689575370489377*^9, 
   3.689576207942892*^9, 3.6906069803995557`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.019511280744591908`"}], ",", 
   RowBox[{"-", "0.067286844423505`"}], ",", 
   RowBox[{"-", "0.04698938131428605`"}], ",", 
   RowBox[{"-", "0.019987939343690253`"}], ",", "0.4804474228185285`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6895727711052485`*^9, 3.6895727787236843`*^9}, 
   3.689574598792642*^9, 3.6895746895896344`*^9, 3.689575370489377*^9, 
   3.689576207942892*^9, 3.690606980403556*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.019511280744591908`"}], ",", 
   RowBox[{"-", "0.067286844423505`"}], ",", 
   RowBox[{"-", "0.04698938131428605`"}], ",", 
   RowBox[{"-", "0.019987939343690253`"}], ",", "0.4804474228185285`", ",", 
   "1.6843782570562345`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6895727711052485`*^9, 3.6895727787236843`*^9}, 
   3.689574598792642*^9, 3.6895746895896344`*^9, 3.689575370489377*^9, 
   3.689576207942892*^9, 3.6906069804135566`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.008015159905834235`"}], ",", 
   RowBox[{"-", "0.008015159905857994`"}], ",", 
   RowBox[{"-", "0.00801515990588153`"}], ",", 
   RowBox[{"-", "0.008015159905905067`"}], ",", 
   RowBox[{"-", "0.008015159905928604`"}], ",", 
   RowBox[{"-", "0.008015159905952363`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6895727711052485`*^9, 3.6895727787236843`*^9}, 
   3.689574598792642*^9, 3.6895746895896344`*^9, 3.689575370489377*^9, 
   3.689576207942892*^9, 3.690606980416557*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Total", " ", "Energy", " ", "of", " ", "system", " ", "at", " ", "a", " ", 
   "few", " ", "time", " ", "points", " ", "to", " ", "make", " ", "sure", 
   " ", "that", " ", "is", " ", "conserved"}], "*)"}]], "Input",
 CellChangeTimes->{{3.689576041555627*^9, 3.689576055499301*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"valsNonUniformDiffusion", "[", 
      RowBox[{"curT", ",", "x", ",", "y"}], "]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "reg"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"curT", ",", "0.1", ",", "9.1", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.689488611050819*^9, 3.6894887076181884`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0544519255337268`", ",", "1.0544511524699847`", ",", 
   "1.0544540622000462`", ",", "1.0544506538863327`", ",", 
   "1.0544545853321015`", ",", "1.0544542800108543`", ",", 
   "1.0544540390244943`", ",", "1.0544536961161848`", ",", 
   "1.0544511524699494`", ",", "1.0544511524699456`"}], "}"}]], "Output",
 CellChangeTimes->{3.6894887634673862`*^9, 3.6895728424923315`*^9, 
  3.68957465308407*^9, 3.6895754248306093`*^9, 3.690607034838561*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"valsUniformDiffusion", "[", 
      RowBox[{"curT", ",", "x", ",", "y"}], "]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "reg"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"curT", ",", "0.1", ",", "9.1", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.68957606303936*^9, 3.6895760633895617`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0544513013338936`", ",", "1.0544501512813675`", ",", 
   "1.0544511524699924`", ",", "1.0544511524699924`", ",", 
   "1.054451152469992`", ",", "1.0544511524699918`", ",", 
   "1.0544511524699918`", ",", "1.0544511524699913`", ",", 
   "1.0544511524699913`", ",", "1.0544511524699924`"}], "}"}]], "Output",
 CellChangeTimes->{3.689576120309683*^9}]
}, Open  ]]
},
WindowSize->{984, 821},
WindowMargins->{{35, Automatic}, {39, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2806, 75, 145, "Input"],
Cell[3367, 97, 765, 22, 69, "Input"],
Cell[4135, 121, 3654, 94, 221, "Input"],
Cell[CellGroupData[{
Cell[7814, 219, 1018, 27, 107, "Input"],
Cell[8835, 248, 1957, 39, 410, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10829, 292, 778, 22, 69, "Input"],
Cell[11610, 316, 1911, 38, 338, "Output"]
}, Open  ]],
Cell[13536, 357, 297, 6, 30, "Input"],
Cell[13836, 365, 1174, 32, 50, "Input"],
Cell[15013, 399, 1068, 30, 50, "Input"],
Cell[CellGroupData[{
Cell[16106, 433, 853, 23, 69, "Input"],
Cell[16962, 458, 18215, 312, 239, "Output"]
}, Open  ]],
Cell[35192, 773, 422, 11, 30, "Input"],
Cell[CellGroupData[{
Cell[35639, 788, 294, 7, 30, "Input"],
Cell[35936, 797, 19586, 334, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55559, 1136, 797, 22, 50, "Input"],
Cell[56359, 1160, 18006, 309, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74402, 1474, 800, 22, 50, "Input"],
Cell[75205, 1498, 19445, 332, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94687, 1835, 2652, 71, 183, "Input"],
Cell[97342, 1908, 669, 12, 50, "Output"],
Cell[98014, 1922, 567, 10, 30, "Output"],
Cell[98584, 1934, 619, 11, 50, "Output"],
Cell[99206, 1947, 670, 12, 50, "Output"],
Cell[99879, 1961, 651, 11, 50, "Output"],
Cell[100533, 1974, 427, 9, 30, "Output"],
Cell[100963, 1985, 473, 10, 30, "Output"],
Cell[101439, 1997, 494, 10, 30, "Output"]
}, Open  ]],
Cell[101948, 2010, 324, 7, 30, "Input"],
Cell[CellGroupData[{
Cell[102297, 2021, 2304, 64, 164, "Input"],
Cell[104604, 2087, 719, 13, 50, "Output"],
Cell[105326, 2102, 620, 11, 30, "Output"],
Cell[105949, 2115, 669, 12, 50, "Output"],
Cell[106621, 2129, 689, 13, 50, "Output"],
Cell[107313, 2144, 708, 12, 50, "Output"],
Cell[108024, 2158, 466, 10, 30, "Output"],
Cell[108493, 2170, 497, 10, 30, "Output"],
Cell[108993, 2182, 536, 11, 30, "Output"]
}, Open  ]],
Cell[109544, 2196, 326, 6, 30, "Input"],
Cell[CellGroupData[{
Cell[109895, 2206, 476, 13, 30, "Input"],
Cell[110374, 2221, 490, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110901, 2235, 472, 13, 30, "Input"],
Cell[111376, 2250, 393, 8, 30, "Output"]
}, Open  ]]
}
]
*)

